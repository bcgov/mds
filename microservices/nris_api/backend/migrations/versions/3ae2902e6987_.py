"""empty message

Revision ID: 3ae2902e6987
Revises: 
Create Date: 2019-05-21 22:29:05.771448

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3ae2902e6987'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_type',
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.Column('document_type', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('document_type_id')
    )
    op.create_table('factorial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('input_val', sa.Integer(), nullable=False),
    sa.Column('output_val', sa.Integer(), nullable=False),
    sa.Column('exec_timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('input_val')
    )
    op.create_table('inspection_status',
    sa.Column('inspection_status_id', sa.Integer(), nullable=False),
    sa.Column('inspection_status_code', sa.String(length=32), nullable=False),
    sa.Column('inspection_status_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('inspection_status_id')
    )
    op.create_table('nris_raw_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nris_data', sa.Text(), nullable=True),
    sa.Column('input_date', sa.DateTime(), nullable=False),
    sa.Column('processed_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_type',
    sa.Column('order_type_id', sa.Integer(), nullable=False),
    sa.Column('order_type', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('order_type_id')
    )
    op.create_table('document',
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=True),
    sa.Column('document_date', sa.DateTime(), nullable=True),
    sa.Column('document_type_id', sa.Integer(), nullable=True),
    sa.Column('file_name', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_type.document_type_id'], ),
    sa.PrimaryKeyConstraint('document_id')
    )
    op.create_table('inspection',
    sa.Column('inspection_id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=True),
    sa.Column('inspection_date', sa.DateTime(), nullable=True),
    sa.Column('completed_date', sa.DateTime(), nullable=True),
    sa.Column('inspection_status_id', sa.Integer(), nullable=True),
    sa.Column('business_area', sa.String(length=256), nullable=True),
    sa.Column('mine_no', sa.String(length=64), nullable=True),
    sa.Column('inspector_idir', sa.String(length=256), nullable=True),
    sa.Column('inspection_introduction', sa.String(), nullable=True),
    sa.Column('inspection_preamble', sa.String(), nullable=True),
    sa.Column('inspection_closing', sa.String(), nullable=True),
    sa.Column('officer_notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['inspection_status_id'], ['inspection_status.inspection_status_id'], ),
    sa.PrimaryKeyConstraint('inspection_id')
    )
    op.create_table('inspection_document_xref',
    sa.Column('inspection_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.document_id'], ),
    sa.ForeignKeyConstraint(['inspection_id'], ['inspection.inspection_id'], ),
    sa.PrimaryKeyConstraint('inspection_id', 'document_id')
    )
    op.create_table('order',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('inspection_id', sa.Integer(), nullable=True),
    sa.Column('order_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['inspection_id'], ['inspection.inspection_id'], ),
    sa.ForeignKeyConstraint(['order_type_id'], ['order_type.order_type_id'], ),
    sa.PrimaryKeyConstraint('order_id')
    )
    op.create_table('location',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('notes', sa.String(length=2048), nullable=True),
    sa.Column('utm_coordinates', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.order_id'], ),
    sa.PrimaryKeyConstraint('location_id', 'order_id')
    )
    op.create_table('order_document_xref',
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.document_id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['order.order_id'], ),
    sa.PrimaryKeyConstraint('order_id', 'document_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_document_xref')
    op.drop_table('location')
    op.drop_table('order')
    op.drop_table('inspection_document_xref')
    op.drop_table('inspection')
    op.drop_table('document')
    op.drop_table('order_type')
    op.drop_table('nris_raw_data')
    op.drop_table('inspection_status')
    op.drop_table('factorial')
    op.drop_table('document_type')
    # ### end Alembic commands ###
