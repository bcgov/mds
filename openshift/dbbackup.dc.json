{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "mds-dbbackup-dc"
  },
  "objects": [
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "mds-database-backup${SUFFIX}",
        "annotations": {
          "volume.beta.kubernetes.io/storage-class": "gluster-file",
          "volume.beta.kubernetes.io/storage-provisioner": "kubernetes.io/glusterfs"
        }
      },
      "spec": {
        "accessModes": ["ReadWriteMany"],
        "resources": {
          "requests": {
            "storage": "${PERSISTENT_VOLUME_SIZE}"
          }
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "creationTimestamp": null,
        "labels": {
          "shared": "true"
        },
        "annotations": {}
      },
      "spec": {
        "lookupPolicy": {
          "local": false
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}${SUFFIX}",
        "annotations": {
          "description": "Defines how to deploy the ${NAME} server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": ["backup"],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:${VERSION}"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}${SUFFIX}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}${SUFFIX}",
            "labels": {
              "name": "${NAME}${SUFFIX}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "mds-database-backup-data",
                "persistentVolumeClaim": {
                  "claimName": "mds-database-backup${SUFFIX}"
                }
              }
            ],
            "containers": [
              {
                "name": "backup",
                "image": " ",
                "ports": [],
                "command": [
                  "bash",
                  "-c",
                  "cd / && if [[ $ENVIRONMENT_NAME != 'prod' ]]; then tail -f /dev/null; else ./backup.sh; fi"
                ],
                "args": [],
                "env": [
                  {
                    "name": "BACKUP_STRATEGY",
                    "value": "rolling"
                  },
                  {
                    "name": "BACKUP_DIR",
                    "value": "/backups/"
                  },
                  {
                    "name": "DAILY_BACKUPS",
                    "value": "6"
                  },
                  {
                    "name": "WEEKLY_BACKUPS",
                    "value": "0"
                  },
                  {
                    "name": "MONTHLY_BACKUPS",
                    "value": "0"
                  },
                  {
                    "name": "BACKUP_PERIOD",
                    "value": "1d"
                  },
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "POSTGRESQL_DATABASE",
                    "value": "mds"
                  },
                  {
                    "name": "POSTGRESQL_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${DATABASE_SERVICE_NAME}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${DATABASE_SERVICE_NAME}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "ENVIRONMENT_NAME",
                    "value": "${ENVIRONMENT_NAME}"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                },
                "volumeMounts": [
                  {
                    "name": "mds-database-backup-data",
                    "mountPath": "/backups/"
                  }
                ]
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the resources defined in this template.",
      "required": true,
      "value": "backup"
    },
    {
      "name": "SUFFIX",
      "displayName": "Name Suffix",
      "description": "A suffix appended to all objects",
      "required": true
    },
    {
      "name": "VERSION",
      "required": true
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "description": "The name of the database service.",
      "required": true,
      "value": "postgresql"
    },
    {
      "name": "ENVIRONMENT_NAME",
      "displayName": "Environment Name (Environment Id)",
      "description": "The name or Id of the environment.  This variable is used by the webhook integration to identify the environment in which the backup notifications originate.",
      "required": false,
      "value": ""
    },
    {
      "name": "PERSISTENT_VOLUME_SIZE",
      "displayName": "Persistent Volume Size",
      "description": "The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.",
      "required": true,
      "value": "1Gi"
    },
    {
      "name": "CPU_REQUEST",
      "value": "0"
    },
    {
      "name": "CPU_LIMIT",
      "value": "0"
    },
    {
      "name": "MEMORY_REQUEST",
      "value": "0Mi"
    },
    {
      "name": "MEMORY_LIMIT",
      "value": "0Mi"
    }
  ]
}
