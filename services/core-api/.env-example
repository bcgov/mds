DB_HOST=postgres
DB_USER=mds
DB_PASS=test
DB_PORT=5432
DB_NAME=mds
DB_NAME_TEST=mds_test

FLASK_APP=app
FLASK_RUN_PORT=5000
FLASK_RUN_HOST=0.0.0.0
FLASK_ENV=development
FLASK_DEBUG=1

NRIS_TOKEN_URL=https://api.nrs.gov.bc.ca/oauth2/v1/oauth/token
NRIS_API_URL=http://nris_backend:5500
NRIS_USER_NAME=NRISWS_MDS_CLIENT
NRIS_USER_PASSWORD=
NRIS_PASS=
NRIS_REMOTE_TOKEN_URL=https://api.nrs.gov.bc.ca/oauth2/v1/oauth/token
NRIS_REMOTE_CLIENT_ID=NRISWS_MDS_CLIENT
NRIS_REMOTE_CLIENT_SECRET= 

NROS_TOKEN_URL=https://t1api.nrs.gov.bc.ca/oauth2/v1/oauth/token?disableDeveloperFilter=true&grant_type=client_credentials&scope=DMS.*,NRS_AS.*
NROS_CLIENT_ID=MDS_SERVICE_CLIENT
NROS_CLIENT_SECRET=

VFCBC_TOKEN_URL=
VFCBC_CLIENT_ID=mms_srv1
VFCBC_CLIENT_SECRET=

DOCUMENT_MANAGER_URL=http://document_manager_backend:5001

CACHE_REDIS_HOST=redis
CACHE_REDIS_PASS=redis-password

JWT_OIDC_WELL_KNOWN_CONFIG=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE=mines-digital-services-mds-public-client-4414
JWT_OIDC_ALGORITHMS=RS256

LDAP_IDIR_USERNAME=fnlastn
LDAP_IDIR_PASSWORD=idirpw

METABASE_SITE_URL=https://metabase-4c2ba9-prod.apps.silver.devops.gov.bc.ca
METABASE_EMBEDDING_SECRET_KEY=

UWSGI_DISABLED=1

ORGBOOK_API_URL=https://orgbook.gov.bc.ca/api/v2/

COMMON_SERVICES_CLIENT_ID=
COMMON_SERVICES_CLIENT_SECRET=
COMMON_SERVICES_AUTH_HOST=https://dev.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token
COMMON_SERVICES_EMAIL_HOST=https://ches-dev.api.gov.bc.ca/api/v1
# If you want to send emails locally, set EMAIL_ENABLED to 1 and use your personal email for EMAIL_RECIPIENT_OVERRIDE.
EMAIL_ENABLED=0
EMAIL_RECIPIENT_OVERRIDE=
ENVIRONMENT_NAME=local

CSS_CLIENT_ID=
CSS_CLIENT_SECRET=
CSS_TOKEN_URL=https://loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect/token
CSS_API_URL=https://api.loginproxy.gov.bc.ca/api/v1/integrations/4414

# https://opentelemetry.io/docs/
# https://opentelemetry.io/docs/instrumentation/python/automatic/#configuring-the-agent
# We need to use OTEL to send data to the collector first, and then the collector will send data to the backend.
# Direct send to Jaeger backend introduces coupling. 
# Jaeger also does not have full support for OTLP yet. So it is better to use the collector first.
# Gothcha: EXPORTER_OTLP_TRACES_ENDPOINT needs a http prefix apprarently. Otherwise we will see a SSL error - SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER
# This is becuase the exporter attempts https by default.
OTEL_TRACES_EXPORTER=otlp
OTEL_SERVICE_NAME=mds-core-api
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otelcollector:4317
OTEL_METRICS_EXPORTER=none
OTEL_LOG_LEVEL=debug