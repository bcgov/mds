JWT_OIDC_AUDIENCE_CYPRESS=account
JWT_OIDC_WELL_KNOWN_CONFIG_CYPRESS=http://keycloak:8080/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_JWKS_URI_CYPRESS=http://keycloak:8080/auth/realms/standard/protocol/openid-connect/certs
JWT_OIDC_ISSUER_CYPRESS=http://localhost:8080/auth/realms/standard
ALLOW_CYPRESS_AUTH=true

DB_HOST=postgres
DB_USER=mds
DB_PASS=test
DB_PORT=5432
DB_NAME=mds
DB_NAME_TEST=mds_test

FLASK_APP=app
FLASK_RUN_PORT=5000
FLASK_RUN_HOST=0.0.0.0
FLASK_ENV=development
FLASK_DEBUG=1

NRIS_TOKEN_URL=https://api.nrs.gov.bc.ca/oauth2/v1/oauth/token
NRIS_API_URL=http://nris_backend:5500
NRIS_USER_NAME=NRISWS_MDS_CLIENT
NRIS_USER_PASSWORD=
NRIS_PASS=
NRIS_REMOTE_TOKEN_URL=https://api.nrs.gov.bc.ca/oauth2/v1/oauth/token
NRIS_REMOTE_CLIENT_ID=NRISWS_MDS_CLIENT
NRIS_REMOTE_CLIENT_SECRET= 

NROS_TOKEN_URL=https://t1api.nrs.gov.bc.ca/oauth2/v1/oauth/token?disableDeveloperFilter=true&grant_type=client_credentials&scope=DMS.*,NRS_AS.*
NROS_CLIENT_ID=MDS_SERVICE_CLIENT
NROS_CLIENT_SECRET=

VFCBC_TOKEN_URL=
VFCBC_CLIENT_ID=mms_srv1
VFCBC_CLIENT_SECRET=

KIBANA_BASE_URL=https://kibana-openshift-logging.apps.silver.devops.gov.bc.ca

FLAGSMITH_URL=https://mds-flags-dev.apps.silver.devops.gov.bc.ca/api/v1/
FLAGSMITH_KEY=4Eu9eEMDmWVEHKDaKoeWY7
FLAGSMITH_ENABLE_LOCAL_EVALUTION=false

DOCUMENT_MANAGER_URL=http://document_manager_backend:5001

CACHE_REDIS_HOST=redis
CACHE_REDIS_PASS=redis-password

JWT_OIDC_ALGORITHMS=RS256

JWT_OIDC_WELL_KNOWN_CONFIG=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE=mines-digital-services-mds-public-client-4414

JWT_OIDC_WELL_KNOWN_CONFIG_BCMI=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE_BCMI=mds-bcmi-4587

JWT_OIDC_WELL_KNOWN_CONFIG_FNCS=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE_FNCS=mds-fncs-4586

JWT_OIDC_WELL_KNOWN_CONFIG_GENTAX=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE_GENTAX=mds-gentax-4790

JWT_OIDC_WELL_KNOWN_CONFIG_NRIS=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE_NRIS=mds-nris-4791

JWT_OIDC_WELL_KNOWN_CONFIG_VFCBC=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE_VFCBC=mds-vfcbc-4589

JWT_OIDC_WELL_KNOWN_CONFIG_BCGW=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE_BCGW=mds-bcgw-4792

JWT_OIDC_WELL_KNOWN_CONFIG_DOCMAN_CELERY=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE_DOCMAN_CELERY=mds-docman-celery-internal-4865

LDAP_IDIR_USERNAME=fnlastn
LDAP_IDIR_PASSWORD=idirpw

METABASE_SITE_URL=https://metabase-4c2ba9-prod.apps.silver.devops.gov.bc.ca
METABASE_EMBEDDING_SECRET_KEY=

UWSGI_DISABLED=1

ORGBOOK_API_URL=https://orgbook.gov.bc.ca/api/v2/

COMMON_SERVICES_CLIENT_ID=
COMMON_SERVICES_CLIENT_SECRET=
COMMON_SERVICES_AUTH_HOST=https://dev.loginproxy.gov.bc.ca/auth/realms/comsvcauth/protocol/openid-connect/token
COMMON_SERVICES_EMAIL_HOST=https://ches-dev.api.gov.bc.ca/api/v1
# If you want to send emails locally, set EMAIL_ENABLED to 1 and use your personal email for EMAIL_RECIPIENT_OVERRIDE.
EMAIL_ENABLED=0
EMAIL_RECIPIENT_OVERRIDE=
ENVIRONMENT_NAME=local

CSS_CLIENT_ID=
CSS_CLIENT_SECRET=
CSS_TOKEN_URL=https://loginproxy.gov.bc.ca/auth/realms/standard/protocol/openid-connect/token
CSS_API_URL=https://api.loginproxy.gov.bc.ca/api/v1/integrations/4414

# https://opentelemetry.io/docs/
# https://opentelemetry.io/docs/instrumentation/python/automatic/#configuring-the-agent
# We need to use OTEL to send data to the collector first, and then the collector will send data to the backend.
# Direct send to Jaeger backend introduces coupling. 
# Jaeger also does not have full support for OTLP yet. So it is better to use the collector first.
# Gothcha: EXPORTER_OTLP_TRACES_ENDPOINT needs a http prefix apprarently. Otherwise we will see a SSL error - SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER
# This is becuase the exporter attempts https by default.
OTEL_TRACES_EXPORTER=otlp
OTEL_SERVICE_NAME=mds-core-api
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otelcollector:4317
OTEL_METRICS_EXPORTER=none
OTEL_LOG_LEVEL=debug


# Traction UI found here https://traction-tenant-ui-dev.apps.silver.devops.gov.bc.ca/
TRACTION_HOST=https://traction-tenant-proxy-dev.apps.silver.devops.gov.bc.ca
TRACTION_TENANT_ID=MISSING_TENANT_ID
TRACTION_WALLET_API_KEY=MISSING_API_KEY
CRED_DEF_ID_MINES_ACT_PERMIT=CRED_DEF_ID_FOR_MINES_ACT_PERMIT
TRACTION_WEBHOOK_X_API_KEY=MISSING_TRACTION_WEBHOOK_X_API_KEY

# Permit Search Service
PERMITS_ENDPOINT=http://haystack
PERMITS_CLIENT_ID=mds-core-api-internal-5194
PERMITS_CLIENT_SECRET=

# OIDC PRIVATE keys
JWT_OIDC_TEST_AUDIENCE=test_audience
JWT_OIDC_TEST_CLIENT_SECRET=test_secret
JWT_OIDC_TEST_ISSUER=test_issuer
JWT_OIDC_KEY_KID=flask-jwt-oidc-test-client
JWT_OIDC_KEY_KTY=RSA
JWT_OIDC_KEY_ALG=RS256
JWT_OIDC_KEY_USE=sig
JWT_OIDC_KEY_N='AN-fWcpCyE5KPzHDjigLaSUVZI0uYrcGcc40InVtl-rQRDmAh-C2W8H4_Hxhr5VLc6crsJ2LiJTV_E72S03pzpOOaaYV6-TzAjCou2GYJIXev7f6Hh512PuG5wyxda_TlBSsI-gvphRTPsKCnPutrbiukCYrnPuWxX5_cES9eStR'
JWT_OIDC_KEY_E=AQAB
JWT_OIDC_KEY_D='C0G3QGI6OQ6tvbCNYGCqq043YI_8MiBl7C5dqbGZmx1ewdJBhMNJPStuckhskURaDwk4-8VBW9SlvcfSJJrnZhgFMjOYSSsBtPGBIMIdM5eSKbenCCjO8Tg0BUh_xa3CHST1W4RQ5rFXadZ9AeNtaGcWj2acmXNO3DVETXAX3x0'
JWT_OIDC_KEY_P='APXcusFMQNHjh6KVD_hOUIw87lvK13WkDEeeuqAydai9Ig9JKEAAfV94W6Aftka7tGgE7ulg1vo3eJoLWJ1zvKM'
JWT_OIDC_KEY_Q='AOjX3OnPJnk0ZFUQBwhduCweRi37I6DAdLTnhDvcPTrrNWuKPg9uGwHjzFCJgKd8KBaDQ0X1rZTZLTqi3peT43s'
JWT_OIDC_KEY_DP='AN9kBoA5o6_Rl9zeqdsIdWFmv4DB5lEqlEnC7HlAP-3oo3jWFO9KQqArQL1V8w2D4aCd0uJULiC9pCP7aTHvBhc'
JWT_OIDC_KEY_DQ='ANtbSY6njfpPploQsF9sU26U0s7MsuLljM1E8uml8bVJE1mNsiu9MgpUvg39jEu9BtM2tDD7Y51AAIEmIQex1nM'
JWT_OIDC_KEY_QI='XLE5O360x-MhsdFXx8Vwz4304-MJg-oGSJXCK_ZWYOB_FGXFRTfebxCsSYi0YwJo-oNu96bvZCuMplzRI1liZw'

JWT_OIDC_TEST_PRIVATE_KEY_PEM="-----BEGIN RSA PRIVATE KEY-----\nMIICXQIBAAKBgQDfn1nKQshOSj8xw44oC2klFWSNLmK3BnHONCJ1bZfq0EQ5gIfg\ntlvB+Px8Ya+VS3OnK7Cdi4iU1fxO9ktN6c6TjmmmFevk8wIwqLthmCSF3r+3+h4e\nddj7hucMsXWv05QUrCPoL6YUUz7Cgpz7ra24rpAmK5z7lsV+f3BEvXkrUQIDAQAB\nAoGAC0G3QGI6OQ6tvbCNYGCqq043YI/8MiBl7C5dqbGZmx1ewdJBhMNJPStuckhs\nkURaDwk4+8VBW9SlvcfSJJrnZhgFMjOYSSsBtPGBIMIdM5eSKbenCCjO8Tg0BUh/\nxa3CHST1W4RQ5rFXadZ9AeNtaGcWj2acmXNO3DVETXAX3x0CQQD13LrBTEDR44ei\nlQ/4TlCMPO5bytd1pAxHnrqgMnWovSIPSShAAH1feFugH7ZGu7RoBO7pYNb6N3ia\nC1idc7yjAkEA6Nfc6c8meTRkVRAHCF24LB5GLfsjoMB0tOeEO9w9Ous1a4o+D24b\nAePMUImAp3woFoNDRfWtlNktOqLel5PjewJBAN9kBoA5o6/Rl9zeqdsIdWFmv4DB\n5lEqlEnC7HlAP+3oo3jWFO9KQqArQL1V8w2D4aCd0uJULiC9pCP7aTHvBhcCQQDb\nW0mOp436T6ZaELBfbFNulNLOzLLi5YzNRPLppfG1SRNZjbIrvTIKVL4N/YxLvQbT\nNrQw+2OdQACBJiEHsdZzAkBcsTk7frTH4yGx0VfHxXDPjfTj4wmD6gZIlcIr9lZg\n4H8UZcVFN95vEKxJiLRjAmj6g273pu9kK4ymXNEjWWJn\n-----END RSA PRIVATE KEY-----"
