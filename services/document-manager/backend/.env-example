JWT_OIDC_WELL_KNOWN_CONFIG_CYPRESS=http://keycloak:8080/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_JWKS_URI_CYPRESS=http://keycloak:8080/auth/realms/standard/protocol/openid-connect/certs
JWT_OIDC_AUDIENCE_CYPRESS=account
JWT_OIDC_ISSUER_CYPRESS=http://localhost:8080/auth/realms/standard
ALLOW_CYPRESS_AUTH=true

DB_HOST=postgres
DB_USER=docman
DB_PASS=docman_pass
DB_PORT=5432
DB_NAME=mds
DB_NAME_TEST=mds_test

DOCUMENT_MANAGER_URL=http://document_manager_backend:5001

FLASK_APP=app
FLASK_RUN_PORT=5001
FLASK_RUN_HOST=0.0.0.0
FLASK_DEBUG=1
FLASK_ENV=development

CACHE_REDIS_HOST=redis
CACHE_REDIS_PASS=redis-password

JWT_OIDC_WELL_KNOWN_CONFIG=https://test.loginproxy.gov.bc.ca/auth/realms/standard/.well-known/openid-configuration
JWT_OIDC_AUDIENCE=mines-digital-services-mds-public-client-4414
JWT_OIDC_ALGORITHMS=RS256

OBJECT_STORE_ENABLED=1
OBJECT_STORE_HOST=nrs.objectstore.gov.bc.ca
OBJECT_STORE_ACCESS_KEY_ID=nr-core-tst

OBJECT_STORE_ACCESS_KEY=
OBJECT_STORE_BUCKET=matdjg
# Must be the same as tusd S3_PREFIX
S3_PREFIX=mds-files-local/

DOCUMENT_UPLOAD_CHUNK_SIZE_BYTES=1048576

NROS_TOKEN_URL=
NROS_CLIENT_ID=MDS_SERVICE_CLIENT
NROS_CLIENT_SECRET=

VFCBC_CLIENT_ID=mms_srv1
VFCBC_CLIENT_SECRET=

TUSD_URL=http://tusd:1080/files/

OPENSSL_CONF=/app/openssl.cnf

CORE_API_URL=http://mds_backend:5000

AUTHENTICATION_URL=
CLIENT_ID=
CLIENT_SECRET=
GRANT_TYPE=

CELERY_REST_API_URL=http://document_manager_celery:5555

FLOWER_USER=flower
FLOWER_USER_PASSWORD=flower

GEOMARK_URL_BASE=https://test.apps.gov.bc.ca/pub/geomark
GEOMARK_GROUP=
GEOMARK_SECRET_KEY=
GEOMARK_PERSIST=false

# https://opentelemetry.io/docs/
# https://opentelemetry.io/docs/instrumentation/python/automatic/#configuring-the-agent
# We need to use OTEL to send data to the collector first, and then the collector will send data to the backend.
# Direct send to Jaeger backend introduces coupling. 
# Jaeger also does not have full support for OTLP yet. So it is better to use the collector first.
# Gothcha: EXPORTER_OTLP_TRACES_ENDPOINT needs a http prefix apprarently. Otherwise we will see a SSL error - SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER
# This is becuase the exporter attempts https by default.
OTEL_TRACES_EXPORTER=otlp
OTEL_SERVICE_NAME=mds_document_manager
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otelcollector:4317
OTEL_METRICS_EXPORTER=none
OTEL_LOG_LEVEL=debug

JWT_OIDC_TEST_AUDIENCE=test_audience
JWT_OIDC_TEST_CLIENT_SECRET=test_secret
JWT_OIDC_TEST_ISSUER=test_issuer
JWT_OIDC_KEY_KID=flask-jwt-oidc-test-client
JWT_OIDC_KEY_KTY=RSA
JWT_OIDC_KEY_ALG=RS256
JWT_OIDC_KEY_USE=sig
JWT_OIDC_KEY_N='AN-fWcpCyE5KPzHDjigLaSUVZI0uYrcGcc40InVtl-rQRDmAh-C2W8H4_Hxhr5VLc6crsJ2LiJTV_E72S03pzpOOaaYV6-TzAjCou2GYJIXev7f6Hh512PuG5wyxda_TlBSsI-gvphRTPsKCnPutrbiukCYrnPuWxX5_cES9eStR'
JWT_OIDC_KEY_E=AQAB
JWT_OIDC_KEY_D='C0G3QGI6OQ6tvbCNYGCqq043YI_8MiBl7C5dqbGZmx1ewdJBhMNJPStuckhskURaDwk4-8VBW9SlvcfSJJrnZhgFMjOYSSsBtPGBIMIdM5eSKbenCCjO8Tg0BUh_xa3CHST1W4RQ5rFXadZ9AeNtaGcWj2acmXNO3DVETXAX3x0'
JWT_OIDC_KEY_P='APXcusFMQNHjh6KVD_hOUIw87lvK13WkDEeeuqAydai9Ig9JKEAAfV94W6Aftka7tGgE7ulg1vo3eJoLWJ1zvKM'
JWT_OIDC_KEY_Q='AOjX3OnPJnk0ZFUQBwhduCweRi37I6DAdLTnhDvcPTrrNWuKPg9uGwHjzFCJgKd8KBaDQ0X1rZTZLTqi3peT43s'
JWT_OIDC_KEY_DP='AN9kBoA5o6_Rl9zeqdsIdWFmv4DB5lEqlEnC7HlAP-3oo3jWFO9KQqArQL1V8w2D4aCd0uJULiC9pCP7aTHvBhc'
JWT_OIDC_KEY_DQ='ANtbSY6njfpPploQsF9sU26U0s7MsuLljM1E8uml8bVJE1mNsiu9MgpUvg39jEu9BtM2tDD7Y51AAIEmIQex1nM'
JWT_OIDC_KEY_QI='XLE5O360x-MhsdFXx8Vwz4304-MJg-oGSJXCK_ZWYOB_FGXFRTfebxCsSYi0YwJo-oNu96bvZCuMplzRI1liZw'

JWT_OIDC_TEST_PRIVATE_KEY_PEM='
    -----BEGIN RSA PRIVATE KEY-----
    MIICXQIBAAKBgQDfn1nKQshOSj8xw44oC2klFWSNLmK3BnHONCJ1bZfq0EQ5gIfg
    tlvB+Px8Ya+VS3OnK7Cdi4iU1fxO9ktN6c6TjmmmFevk8wIwqLthmCSF3r+3+h4e
    ddj7hucMsXWv05QUrCPoL6YUUz7Cgpz7ra24rpAmK5z7lsV+f3BEvXkrUQIDAQAB
    AoGAC0G3QGI6OQ6tvbCNYGCqq043YI/8MiBl7C5dqbGZmx1ewdJBhMNJPStuckhs
    kURaDwk4+8VBW9SlvcfSJJrnZhgFMjOYSSsBtPGBIMIdM5eSKbenCCjO8Tg0BUh/
    xa3CHST1W4RQ5rFXadZ9AeNtaGcWj2acmXNO3DVETXAX3x0CQQD13LrBTEDR44ei
    lQ/4TlCMPO5bytd1pAxHnrqgMnWovSIPSShAAH1feFugH7ZGu7RoBO7pYNb6N3ia
    C1idc7yjAkEA6Nfc6c8meTRkVRAHCF24LB5GLfsjoMB0tOeEO9w9Ous1a4o+D24b
    AePMUImAp3woFoNDRfWtlNktOqLel5PjewJBAN9kBoA5o6/Rl9zeqdsIdWFmv4DB
    5lEqlEnC7HlAP+3oo3jWFO9KQqArQL1V8w2D4aCd0uJULiC9pCP7aTHvBhcCQQDb
    W0mOp436T6ZaELBfbFNulNLOzLLi5YzNRPLppfG1SRNZjbIrvTIKVL4N/YxLvQbT
    NrQw+2OdQACBJiEHsdZzAkBcsTk7frTH4yGx0VfHxXDPjfTj4wmD6gZIlcIr9lZg
    4H8UZcVFN95vEKxJiLRjAmj6g273pu9kK4ymXNEjWWJn
    -----END RSA PRIVATE KEY-----'


    