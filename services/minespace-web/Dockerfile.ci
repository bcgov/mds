FROM node:20.12.2 as builder

# Create working directory
RUN mkdir /app
WORKDIR /app

ARG ARTIFACTORY_TOKEN

# Install app dependencies
COPY . .

ENV NODE_OPTIONS="--max-old-space-size=6144"

RUN apt-get update
RUN apt-get install -y gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libnss3 lsb-release xdg-utils wget

RUN yarn config set 'npmScopes["fortawesome"].npmAuthIdent' "$ARTIFACTORY_TOKEN"
RUN yarn config set 'npmScopes["fortawesome"].npmAlwaysAuth' true
RUN yarn config set 'npmScopes["fortawesome"].npmRegistryServer' "https://artifacts.developer.gov.bc.ca/artifactory/api/npm/m4c2-mds/"

# Install Dependencies
RUN yarn

# Build Core Web Only
RUN yarn workspace @mds/minespace-web build


# Remove dependencies
RUN rm -rf /app/node_modules

# --------------------------------------------------------#
# Multi Stage Build: Node JS Runtime - App Runner 
# --------------------------------------------------------#

FROM node:20.12.2-alpine as runner

WORKDIR /app

# Copy the app files with build output
COPY --from=builder /app/services/minespace-web/build ./build
COPY --from=builder /app/services/minespace-web/runner ./runner

WORKDIR /app/runner 

# Install node runner deps. and ignore devDependencies with --production flag
RUN npm ci --production

EXPOSE 3020
CMD [ "node", "server.js" ]
