// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PermitAmendmentForm renders properly 1`] = `
<Form
  colon={true}
  hideRequiredMark={false}
  layout="vertical"
  onSubmit={[MockFunction]}
>
  <Row
    gutter={48}
  >
    <Col
      md={12}
      sm={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Connect(PartySelectField)
          allowAddingParties={true}
          id="permittee_party_guid"
          label="Permittee*"
          name="permittee_party_guid"
          partyLabel="permittee"
          validate={
            Array [
              [Function],
            ]
          }
        />
      </FormItem>
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="issue_date"
          label="Issue Date*"
          name="issue_date"
          validate={
            Array [
              [Function],
              [Function],
            ]
          }
        />
      </FormItem>
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="description"
          label="Description"
          name="description"
          validate={
            Array [
              [Function],
            ]
          }
        />
      </FormItem>
      <Divider />
      <FormItem
        hasFeedback={false}
        label="Securities"
      >
        <Field
          component={[Function]}
          id="security_not_required"
          label="Security Not Required"
          name="security_not_required"
          onChange={[Function]}
        />
      </FormItem>
      <FormItem
        hasFeedback={false}
        label="Assessed Liability Adjustment"
      >
        <p
          className="p-light"
        >
          This amount will be added to the Total Assessed Liability amount for this permit. Changes to this value in CORE will not be updated in MMS.
        </p>
        <Field
          autoComplete="off"
          component={[Function]}
          format={[Function]}
          id="liability_adjustment"
          name="liability_adjustment"
          normalize={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          validate={
            Array [
              [Function],
            ]
          }
        />
      </FormItem>
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="security_received_date"
          label="Security Received"
          name="security_received_date"
        />
      </FormItem>
    </Col>
    <Col
      className="border--left--layout"
      md={12}
      sm={24}
    >
      <FormItem
        hasFeedback={false}
        label="Upload files"
      >
        <Field
          allowMultiple={true}
          component={[Function]}
          id="PermitDocumentFileUpload"
          mineGuid=""
          name="PermitDocumentFileUpload"
          onFileLoad={[Function]}
          onRemoveFile={[Function]}
        />
      </FormItem>
    </Col>
  </Row>
  <div
    className="right center-mobile"
    style={
      Object {
        "paddingTop": "14px",
      }
    }
  >
    <ForwardRef
      cancelText="No"
      disabled={false}
      icon={<ForwardRef(ExclamationCircleFilled) />}
      okText="Yes"
      okType="primary"
      onConfirm={[MockFunction]}
      placement="topRight"
      title="Are you sure you want to cancel?"
      transitionName="zoom-big"
      trigger="click"
    >
      <Button
        block={false}
        className="full-mobile"
        ghost={false}
        htmlType="button"
        loading={false}
        type="secondary"
      >
        Cancel
      </Button>
    </ForwardRef>
    <Button
      block={false}
      className="full-mobile"
      ghost={false}
      htmlType="submit"
      loading={false}
      type="primary"
    >
      mockTitle
    </Button>
  </div>
</Form>
`;
