// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProjectSummaryForm renders properly 1`] = `
<Form
  colon={true}
  hideRequiredMark={false}
  layout="vertical"
  onSubmit={[Function]}
>
  <div
    id="project-details"
  >
    <Alert
      description={
        <p>
          Please assign a Project Lead to this project via the
           
          <a
            href="#project-contacts"
          >
            Project contacts
          </a>
           section.
        </p>
      }
      message="This project does not have a Project Lead"
      showIcon={true}
      type="warning"
    />
    <br />
    <Title
      level={3}
    >
      Project details
    </Title>
    <Row
      gutter={16}
    >
      <Col
        lg={12}
        md={24}
      >
        <FormItem
          hasFeedback={false}
        >
          <Field
            component={[Function]}
            id="project_summary_title"
            label="Project title"
            name="project_summary_title"
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </FormItem>
        <FormItem
          hasFeedback={false}
        >
          <Field
            component={[Function]}
            id="proponent_project_id"
            label={
              <React.Fragment>
                Proponent project tracking ID (optional)
                <br />
                <span
                  className="light--sm"
                >
                  If your company uses a tracking number to identify projects, please provide it here.
                </span>
              </React.Fragment>
            }
            name="proponent_project_id"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </FormItem>
        <FormItem
          hasFeedback={false}
        >
          <Field
            component={[Function]}
            id="project_summary_description"
            label="Executive Summary"
            minRows={10}
            name="project_summary_description"
            validate={
              Array [
                [Function],
                [Function],
              ]
            }
          />
        </FormItem>
      </Col>
    </Row>
  </div>
  <br />
  <div
    id="authorizations-involved"
  >
    <Title
      level={3}
    >
      Authorizations Involved
    </Title>
    <p>
      These are the authorizations the proponent believes may be needed for this project. Additional authorizations may be required.
    </p>
    <br />
    <Title
      level={3}
    >
      Mines Review Committee
    </Title>
    <Field
      component={[Function]}
      fieldName="mrc_review_required"
      formName="ADD_EDIT_PROJECT_SUMMARY"
      id="mrc_review_required"
      label={
        <React.Fragment>
          <p>
            <b>
              Does your project require a coordinated review by a Mine Review Committee, under Section 9 of the Mines Act?
            </b>
            <br />
            This response will be reviewed by the Major Mines Office and confirmed by the Chief Permitting Officer.
          </p>
        </React.Fragment>
      }
      name="mrc_review_required"
      validate={
        Array [
          [Function],
        ]
      }
    />
    <br />
  </div>
  <br />
  <div
    id="project-dates"
  >
    <Title
      level={3}
    >
      Project dates requested by proponent
    </Title>
    <p>
      These are the key dates the proponent hopes to target. A final schedule will be negotiated during the pre-application review.
    </p>
    <br />
    <Row
      gutter={16}
    >
      <Col
        lg={12}
        md={24}
      >
        <FormItem
          hasFeedback={false}
        >
          <Field
            component={[Function]}
            id="expected_draft_irt_submission_date"
            label="When do you anticipate submitting a draft Information Requirements Table? (optional)"
            name="expected_draft_irt_submission_date"
            placeholder="Please select date"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </FormItem>
        <FormItem
          hasFeedback={false}
        >
          <Field
            component={[Function]}
            id="expected_permit_application_date"
            label="When do you anticipate submitting a permit application? (optional)"
            name="expected_permit_application_date"
            placeholder="Please select date"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </FormItem>
        <FormItem
          hasFeedback={false}
        >
          <Field
            component={[Function]}
            id="expected_permit_receipt_date"
            label="When do you hope to receive your permit/amendment(s)? (optional)"
            name="expected_permit_receipt_date"
            placeholder="Please select date"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </FormItem>
        <FormItem
          hasFeedback={false}
        >
          <Field
            component={[Function]}
            id="expected_project_start_date"
            label="When do you anticipate starting work on this project? (optional)"
            name="expected_project_start_date"
            placeholder="Please select date"
            validate={
              Array [
                [Function],
              ]
            }
          />
        </FormItem>
      </Col>
    </Row>
  </div>
  <br />
  <div
    id="project-contacts"
  >
    <Title
      level={4}
    >
      Project contacts
    </Title>
    <h3>
      EMLI contacts
    </h3>
    <Row
      align="bottom"
      className=""
      gutter={16}
    >
      <Col
        lg={12}
        md={24}
      >
        <FormItem
          hasFeedback={false}
        >
          <Field
            component={[Function]}
            data={
              Array [
                Object {
                  "label": "Unassigned",
                  "value": null,
                },
              ]
            }
            disabled={true}
            id="project_summary_lead_party_guid"
            label={
              <p
                className="bold"
              >
                Project Lead
              </p>
            }
            name="project_summary_lead_party_guid"
          />
        </FormItem>
      </Col>
      <Connect(AuthorizationWrapper)
        permission="role_edit_project_summaries"
      >
        <Col
          className="padding-sm--bottom"
          lg={24}
          md={24}
        >
          <Button
            block={false}
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[Function]}
            type="secondary"
          >
            <img
              alt="Edit"
              name="edit"
              src={
                Object {
                  "process": [Function],
                }
              }
            />
            Â  Edit
          </Button>
        </Col>
      </Connect(AuthorizationWrapper)>
    </Row>
    <h3>
      Proponent contacts
    </h3>
    <FieldArray
      component={[Function]}
      name="contacts"
    />
  </div>
  <br />
  <div
    id="document-details"
  >
    <ProjectSummaryDocumentUpload
      canRemoveDocuments={false}
      formErrors={Object {}}
      formValues={
        Object {
          "contacts": Array [
            Object {},
          ],
        }
      }
      handleSubmit={[MockFunction]}
      initialValues={
        Object {
          "authorizations": Array [],
          "projectSummaryAuthorizationTypes": Array [],
        }
      }
      projectLeads={
        Array [
          Object {
            "groupName": "Active",
            "opt": Array [],
          },
          Object {
            "groupName": "Inactive",
            "opt": Array [],
          },
        ]
      }
      projectSummary={
        Object {
          "contacts": Array [
            Object {},
          ],
          "documents": Array [],
        }
      }
      projectSummaryAuthorizationTypesHash={Object {}}
      projectSummaryDocumentTypesHash={Object {}}
      projectSummaryPermitTypesHash={Object {}}
      projectSummaryStatusCodes={Array []}
      submitting={false}
      userRoles={Array []}
    />
  </div>
  <div
    className="right center-mobile"
  >
    <Button
      block={false}
      className="full-mobile"
      disabled={false}
      ghost={false}
      htmlType="submit"
      id="project-summary-submit"
      loading={false}
      type="primary"
    >
      Create
    </Button>
  </div>
</Form>
`;
