// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BondForm renders properly 1`] = `
<Form
  colon={true}
  hideRequiredMark={false}
  layout="vertical"
  onSubmit={[Function]}
>
  <Row
    gutter={16}
  >
    <Col
      md={12}
      sm={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          autoComplete="off"
          component={[Function]}
          format={[Function]}
          id="amount"
          label="Bond Amount*"
          name="amount"
          normalize={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          validate={
            Array [
              [Function],
              [Function],
              [Function],
            ]
          }
        />
      </FormItem>
    </Col>
    <Col
      md={12}
      sm={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="bond_type_code"
          label="Bond Type*"
          name="bond_type_code"
          validate={
            Array [
              [Function],
            ]
          }
        />
      </FormItem>
    </Col>
  </Row>
  <Row
    gutter={16}
  >
    <Col
      md={12}
      sm={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Connect(PartySelectField)
          allowAddingParties={true}
          id="payer_party_guid"
          label="Payer*"
          name="payer_party_guid"
          partyLabel="payee"
          validate={
            Array [
              [Function],
            ]
          }
        />
      </FormItem>
    </Col>
    <Col
      md={12}
      sm={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="issue_date"
          label="Issue Date*"
          name="issue_date"
          showTime={true}
          validate={
            Array [
              [Function],
              [Function],
            ]
          }
        />
      </FormItem>
    </Col>
  </Row>
  <Row
    gutter={16}
  >
    <Col
      md={12}
      sm={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="reference_number"
          label="Reference Number"
          name="reference_number"
        />
      </FormItem>
    </Col>
    <Col
      md={12}
      sm={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="project_id"
          label="Project ID"
          name="project_id"
        />
      </FormItem>
    </Col>
  </Row>
  <Row
    gutter={16}
  >
    <Col
      md={12}
      xs={24}
    >
      <h5>
        Institution
      </h5>
    </Col>
  </Row>
  <Row
    gutter={16}
  >
    <Col
      lg={12}
      md={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="institution_name"
          label="Institution Name"
          name="institution_name"
        />
      </FormItem>
    </Col>
  </Row>
  <Row
    gutter={16}
  >
    <Col
      md={12}
      xs={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="institution_street"
          label="Street Address"
          name="institution_street"
        />
      </FormItem>
    </Col>
    <Col
      md={12}
      xs={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="institution_city"
          label="City"
          name="institution_city"
          validate={
            Array [
              [Function],
            ]
          }
        />
      </FormItem>
    </Col>
  </Row>
  <Row
    gutter={16}
  >
    <Col
      md={12}
      xs={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          data={
            Array [
              Object {
                "label": "AB",
                "value": "AB",
              },
              Object {
                "label": "BC",
                "value": "BC",
              },
            ]
          }
          id="institution_province"
          label="Province"
          name="institution_province"
        />
      </FormItem>
    </Col>
    <Col
      md={12}
      xs={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="institution_postal_code"
          label="Postal Code"
          name="institution_postal_code"
          normalize={[Function]}
          placeholder="e.g xxxxxx"
          validate={
            Array [
              [Function],
              [Function],
            ]
          }
        />
      </FormItem>
    </Col>
  </Row>
  <Row
    gutter={0}
  >
    <Col
      md={24}
    >
      <FormItem
        hasFeedback={false}
      >
        <Field
          component={[Function]}
          id="note"
          label="Notes"
          name="note"
        />
      </FormItem>
    </Col>
  </Row>
  <Row
    gutter={16}
  >
    <Col
      md={12}
      xs={24}
    >
      <h5>
        Documents
      </h5>
    </Col>
  </Row>
  <Row
    gutter={16}
  >
    <Col
      xs={24}
    >
      <DocumentTable
        documents={Array []}
        isViewOnly={false}
        removeDocument={[Function]}
        tableEmptyMessage="There are no attached documents."
      />
    </Col>
  </Row>
  <br />
  <Row
    gutter={16}
  >
    <Col
      md={12}
      xs={24}
    >
      <h5>
        Document Upload
      </h5>
    </Col>
  </Row>
  <p
    className="p-light"
  >
    All documents uploaded will be associated with the category selected. If you would like to add a different category of document, please submit and re-open the form.
  </p>
  <br />
  <FormItem
    hasFeedback={false}
  >
    <Field
      component={[Function]}
      id="bond_document_type_code"
      label="Document Category"
      name="bond_document_type_code"
      placeholder="Please select category"
      validate={Array []}
    />
  </FormItem>
  <FormItem
    hasFeedback={false}
  >
    <Field
      acceptedFileTypesMap={
        Object {
          ".doc": "application/msword",
          ".docx": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          ".odm": "application/vnd.oasis.opendocument.text-master",
          ".odt": "application/vnd.oasis.opendocument.text",
          ".oth": "application/vnd.oasis.opendocument.text-web",
          ".ott": "application/vnd.oasis.opendocument.text-template",
          ".pdf": "application/pdf",
          ".rtf": "application/rtf",
          ".xls": "application/vnd.ms-excel",
          ".xlsx": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        }
      }
      allowMultiple={true}
      allowRevert={true}
      component={[Function]}
      id="documents"
      name="documents"
      onFileLoad={[Function]}
      onRemoveFile={[Function]}
      uploadUrl="/securities/undefined/bonds/documents"
    />
  </FormItem>
  <div
    className="right center-mobile"
  >
    <Popconfirm
      cancelText="No"
      disabled={false}
      icon={
        <Icon
          theme="filled"
          type="exclamation-circle"
        />
      }
      okText="Yes"
      okType="primary"
      onConfirm={[MockFunction]}
      placement="topRight"
      title="Are you sure you want to cancel?"
      transitionName="zoom-big"
      trigger="click"
    >
      <Button
        block={false}
        className="full-mobile"
        ghost={false}
        htmlType="button"
        loading={false}
        type="secondary"
      >
        Cancel
      </Button>
    </Popconfirm>
    <Button
      block={false}
      className="full-mobile"
      disabled={false}
      ghost={false}
      htmlType="submit"
      loading={false}
      type="primary"
    >
      Add Bond
    </Button>
  </div>
</Form>
`;
