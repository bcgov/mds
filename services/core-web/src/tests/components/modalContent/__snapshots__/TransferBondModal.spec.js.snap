// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TransferBondModal renders properly 1`] = `
<div>
  <Alert
    description="This action will release the current bond and record a new bond using the same information under the selected permit. Any note created will be carried forward on the new bond record"
    message="Transfer to a different Permit"
    showIcon={true}
    style={
      Object {
        "textAlign": "left",
      }
    }
    type="info"
  />
  <br />
  <ReduxForm
    bond={
      Object {
        "amount": 300,
        "bond_guid": "erjvnaqekrj",
        "bond_id": 1,
        "bond_status_code": "ACT",
        "bond_type_code": "CAS",
        "documents": Array [],
        "institution_city": null,
        "institution_name": null,
        "institution_postal_code": null,
        "institution_province": null,
        "institution_street": null,
        "issue_date": "2018-10-16",
        "note": null,
        "payer": Object {},
        "payer_party_guid": "sethwrt",
        "reference_number": "",
      }
    }
    closeModal={[MockFunction]}
    destroyOnUnmount={true}
    enableReinitialize={false}
    forceUnregisterOnUnmount={false}
    form="TRANSFER_BOND"
    getFormState={[Function]}
    initialPartyValue=""
    initialValues={
      Object {
        "amount": 300,
        "bond_guid": "erjvnaqekrj",
        "bond_id": 1,
        "bond_status_code": "ACT",
        "bond_type_code": "CAS",
        "documents": Array [],
        "institution_city": null,
        "institution_name": null,
        "institution_postal_code": null,
        "institution_province": null,
        "institution_street": null,
        "issue_date": "2018-10-16",
        "note": null,
        "payer": Object {},
        "payer_party_guid": "sethwrt",
        "reference_number": "",
      }
    }
    keepDirtyOnReinitialize={false}
    mineGuid="3512521"
    onSubmit={[Function]}
    onSubmitSuccess={[Function]}
    permits={Array []}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    title="Transfer Bond"
    touchOnBlur={false}
    touchOnChange={false}
    updateUnregisteredFields={false}
  />
</div>
`;
