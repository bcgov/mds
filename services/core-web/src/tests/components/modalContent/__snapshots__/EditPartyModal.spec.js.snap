// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditPartyModal renders properly 1`] = `
<ReduxForm
  closeModal={[MockFunction]}
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="EDIT_FULL_PARTY"
  getFormState={[Function]}
  initialValues={
    Object {
      "address": Array [
        Object {},
      ],
      "business_role_appts": Array [
        Object {},
      ],
      "email": null,
      "first_name": "mock name",
      "name": "other mock name",
      "now_party_appt": Array [],
      "party_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
      "party_name": "mock name",
      "party_type_code": "PER",
    }
  }
  keepDirtyOnReinitialize={true}
  onSubmitSuccess={[Function]}
  party={
    Object {
      "address": Array [
        Object {},
      ],
      "business_role_appts": Array [
        Object {},
      ],
      "first_name": "mock name",
      "name": "other mock name",
      "now_party_appt": Array [],
      "party_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
      "party_name": "mock name",
      "party_type_code": "PER",
    }
  }
  persistentSubmitErrors={false}
  provinceOptions={
    Array [
      Object {
        "isActive": true,
        "label": "AB",
        "subType": "CAN",
        "value": "AB",
      },
      Object {
        "isActive": true,
        "label": "BC",
        "subType": "CAN",
        "value": "BC",
      },
    ]
  }
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
/>
`;
