#!/usr/bin/env python

import sys
import json
import os
import boto3

# Read stdin input data from the TUS daemon
data = ''.join(sys.stdin.readlines())
try:
    upload_data = json.loads(data)
except Exception as e:
    print(f'Failed to parse data: {e}')
    sys.exit(1)

S3_PREFIX = os.getenv('S3_PREFIX')
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
S3_ENDPOINT = os.getenv('S3_ENDPOINT')
S3_BUCKET_ID = os.getenv('S3_BUCKET_ID')

# NOTE: We need to remove the beginning slash from the path because the S3 prefix has a trailing slash
key = upload_data["Upload"]["Storage"].get("Key", None)
info_key = f'{key}.info'
new_key = f'{S3_PREFIX}{upload_data["Upload"]["MetaData"].get("path", None)[1:]}'
new_info_key = f'{new_key}.info'

session = boto3.session.Session()
client = session.client(
    service_name='s3',
    aws_access_key_id=AWS_ACCESS_KEY_ID,
    aws_secret_access_key=AWS_SECRET_ACCESS_KEY,
    endpoint_url=f'https://{S3_ENDPOINT}')

try:
    # Copy the file
    copy_source = {'Bucket': S3_BUCKET_ID, 'Key': key}
    client.copy(CopySource=copy_source, Bucket=S3_BUCKET_ID, Key=new_key)

    # Copy the file's info file
    copy_source['Key'] = info_key
    client.copy(CopySource=copy_source, Bucket=S3_BUCKET_ID, Key=new_info_key)

except Exception as e:
    print(f'Copy request failed: {e}')
    sys.exit(1)

try:
    delete_response = client.delete_object(Bucket=S3_BUCKET_ID, Key=key)
    delete_response = client.delete_object(Bucket=S3_BUCKET_ID, Key=info_key)
    print(delete_response)

except Exception as e:
    print(f'Delete request failed: {e}')
    sys.exit(1)

sys.exit(0)
