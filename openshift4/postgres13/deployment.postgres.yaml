apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: postgresql13
  name: postgresql13
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      name: postgresql13
      service: postgresql13
  template:
    metadata:
      name: postgresql13
      labels:
        name: postgresql13
        service: postgresql13
        app.kubernetes.io/name: postgresql13
    spec:
      containers:
        - capabilities: {}
          env:
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: postgresql
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: postgresql
            - name: PGCRYPTO_EXTENSION
              value: "Y"
            - name: POSTGIS_EXTENSION
              value: "Y"
            - name: PGOPTIONS
              value: -c maintenance_work_mem=128MB
          image: "docker.io/bitnami/postgresql:13.6.0"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 5432
            timeoutSeconds: 1
          name: postgresql13
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - pg_isready -h localhost -p 5432
            initialDelaySeconds: 20
            timeoutSeconds: 15
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - pg_ctl stop -D /var/lib/pgsql/data/userdata
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 200m
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: postgresql13-data
            - mountPath: /var/run/postgresql
              name: postgresql13-run
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      volumes:
        - name: postgresql13-data
          persistentVolumeClaim:
            claimName: postgresql13
        - name: postgresql13-run
          emptyDir: {}
