apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: mds-patroni
    app.kubernetes.io/component: database
    app.kubernetes.io/instance: mds-patroni
    app.kubernetes.io/managed-by: template
    app.kubernetes.io/name: patroni
    cluster-name: mds-patroni
    phase: deploy
  name: mds-patroni
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      statefulset: mds-patroni
  serviceName: mds-patroni
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: mds-patroni
        app.kubernetes.io/name: patroni
        cluster-name: mds-patroni
        statefulset: mds-patroni
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: statefulset
                operator: In
                values:
                - mds-patroni
            topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: PATRONI_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: PATRONI_KUBERNETES_LABELS
          value: '{"cluster-name": "mds-patroni", "app.kubernetes.io/name": "patroni"}'
        - name: PATRONI_SUPERUSER_USERNAME
          valueFrom:
            secretKeyRef:
              key: superuser-username
              name: mds-patroni-creds
        - name: PATRONI_SUPERUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: superuser-password
              name: mds-patroni-creds
        - name: PATRONI_REPLICATION_USERNAME
          valueFrom:
            secretKeyRef:
              key: replication-username
              name: mds-patroni-creds
        - name: PATRONI_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              key: replication-password
              name: mds-patroni-creds
        - name: APP_USER
          valueFrom:
            secretKeyRef:
              key: app-db-username
              name: mds-patroni-creds
        - name: APP_PASSWORD
          valueFrom:
            secretKeyRef:
              key: app-db-password
              name: mds-patroni-creds
        - name: APP_DATABASE
          valueFrom:
            secretKeyRef:
              key: app-db-name
              name: mds-patroni-creds
        - name: PATRONI_SCOPE
          value: mds-patroni
        - name: PATRONI_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: PATRONI_LOG_LEVEL
          value: WARNING
        - name: PATRONI_POSTGRESQL_DATA_DIR
          value: /home/postgres/pgdata/pgroot/data
        - name: PATRONI_POSTGRESQL_PGPASS
          value: /tmp/pgpass
        - name: PATRONI_POSTGRESQL_LISTEN
          value: 0.0.0.0:5432
        - name: PATRONI_RESTAPI_LISTEN
          value: 0.0.0.0:8008
        - name: POSTGRESQL_MAX_CONNECTIONS
          value: "500"
        - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
          value: "500"
        image: image-registry.openshift-image-registry.svc:5000/bcgov/patroni-postgres:12.4-latest
        imagePullPolicy: Always
        name: postgresql
        ports:
        - containerPort: 8008
          protocol: TCP
        - containerPort: 5432
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 300
          timeoutSeconds: 5
          failureThreshold: 4
          periodSeconds: 10
          exec:
            command:
              - /usr/share/scripts/patroni/health_check.sh
        readinessProbe:
          exec:
            command:
            - /usr/share/scripts/patroni/health_check.sh
          failureThreshold: 4
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 10
        lifecycle:
          preStop:
            exec:
              command:
                - /usr/bin/env
                - bash
                - -c
                - |
                  # switch leader pod if the current pod is the leader
                  if curl --fail http://localhost:8008/read-write; then
                    patronictl switchover --force
                  fi
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /home/postgres/pgdata
          name: postgresql
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: mds-patroni
      terminationGracePeriodSeconds: 0
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      annotations:
        volume.beta.kubernetes.io/storage-class: netapp-file-standard
      labels:
        app: mds-patroni
      name: postgresql
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: netapp-file-standard