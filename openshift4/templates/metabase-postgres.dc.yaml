kind: Template
apiVersion: v1
metadata:
  name: dsrp-metabase-postgres-dc
parameters:
  - name: CPU_LIMIT
    value: 100m
  - name: MEMORY_LIMIT
    value: 1Gi
  - name: CPU_REQUEST
    value: 50m
  - name: MEMORY_REQUEST
    value: 512Mi
  - name: NAME
    displayName: Object names
    description: The name of the OpenShift objects.
    value: metabase-postgres
    required: true
  - name: TAG
    required: true
  - name: METABASE_PVC_SIZE
    value: 10Gi
  - name: METABASE_SECRET_NAME
    value: template.metabase-key
  - name: IMAGE_NAMESPACE
    value: 269007-tools
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        template.openshift.io/expose-uri: postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}
      name: ${NAME}
    spec:
      ports:
        - name: postgresql
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        name: ${NAME}
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${NAME}
      annotations:
        volume.beta.kubernetes.io/storage-provisioner: netapp.io/trident
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${METABASE_PVC_SIZE}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
    spec:
      strategy:
        type: Recreate
        maxSurge: 50%
        maxUnavailable: 0
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG}
              namespace: ${IMAGE_NAMESPACE}
      replicas: 1
      selector:
        name: ${NAME}
      template:
        metadata:
          name: ${NAME}
          labels:
            name: ${NAME}
        spec:
          containers:
            - name: ${NAME}
              image: " "
              ports:
                - containerPort: 5432
                  protocol: TCP
              env:
                - name: POSTGRESQL_USER
                  value: metabase
                - name: POSTGRESQL_DATABASE
                  value: metabase
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${METABASE_SECRET_NAME}
                      key: postgres-password
                - name: POSTGRESQL_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${METABASE_SECRET_NAME}
                      key: postgres-admin-password
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - pg_isready -h localhost -p 5432
                initialDelaySeconds: 20
                timeoutSeconds: 15
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 5432
                timeoutSeconds: 10
              lifecycle:
                preStop:
                  exec:
                    command:
                      - /bin/bash
                      - -c
                      - pg_ctl stop -D /var/lib/pgsql/data/userdata
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: ${NAME}-data
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: IfNotPresent
              capabilities: {}
          volumes:
            - name: ${NAME}-data
              persistentVolumeClaim:
                claimName: ${NAME}
          restartPolicy: Always
          dnsPolicy: ClusterFirst
