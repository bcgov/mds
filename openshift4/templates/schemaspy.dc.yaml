kind: Template
apiVersion: v1
metadata:
  name: schemaspy-dc
  creationTimestamp: null
parameters:
  - name: NAME
    displayName: Name
    description: A suffix appended to all objects
    value: schemaspy
  - name: TAG
    value: dev
  - name: REPLICA_MIN
    value: "3"
  - name: REPLICA_MAX
    value: "4"
  - name: IMAGE_NAMESPACE
    value: 4c2ba9-tools
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
      creationTimestamp: null
      name: ${NAME}
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        name: ${NAME}
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}
    spec:
      replicas: 3
      revisionHistoryLimit: 5
      selector:
        name: ${NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          pre:
            execNewPod:
              command:
                - sh
                - -c
                - curl --connect-timeout 5 --retry 20 --retry-delay 60 --retry-connrefused --retry-max-time 1200 https://minesdigitalservices.gov.bc.ca/api/health
              containerName: ${NAME}
            failurePolicy: Abort
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: ${NAME}
          name: ${NAME}
        spec:
          containers:
            - env:
                - name: BACKEND_HOST
                  value: https://minesdigitalservices.gov.bc.ca/api
                - name: DATABASE_HOST
                  value: postgresql
                - name: DATABASE_NAME
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: postgresql
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-admin-user
                      name: postgresql
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-admin-password
                      name: postgresql
              image: " "
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 60
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 180
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: ${NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
              readinessProbe:
                failureThreshold: 60
                httpGet:
                  path: /
                  port: 8080
                  scheme: HTTP
                initialDelaySeconds: 180
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 400m
                  memory: 768Mi
                requests:
                  cpu: 200m
                  memory: 512Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG}
              namespace: ${IMAGE_NAMESPACE}
          type: ImageChange
  - apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
    spec:
      maxReplicas: ${{REPLICA_MAX}}
      minReplicas: ${{REPLICA_MIN}}
      scaleTargetRef:
        apiVersion: apps.openshift.io/v1
        kind: DeploymentConfig
        name: ${NAME}
      targetCPUUtilizationPercentage: 95
