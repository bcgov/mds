kind: Template
apiVersion: v1
metadata:
  name: mds-python-docman-dc
  creationTimestamp: null
parameters:
  - name: NAME
    displayName: Name
    description: A name for all objects
    value: docman
  - name: CORE_DOMAIN
    required: true
  - name: DB_CONFIG_NAME
    displayName: Database Config Name
    description: Configuration name for the database
    value: postgresql
  - name: DB_HOST
    displayName: Database Host Name
    value: postgresql
  - name: TAG
    value: dev
  - name: JWT_OIDC_WELL_KNOWN_CONFIG
    displayName: Keycloak config URL
    required: true
  - name: JWT_OIDC_AUDIENCE
    displayName: Keycloak clientId
    required: true
  - name: BASE_PATH
    required: false
    value: /document-manager
  - name: UPLOADED_DOCUMENT_DEST
    required: false
    value: /opt/app-root/src/document_uploads
  - name: DOCMAN_API_URL
    required: true
  - name: OBJECT_STORE_ENABLED
    required: false
    value: "1"
  - name: OBJECT_STORE_SECRET_NAME
    value: object-store-credentials
  - name: CORE_API_AUTHORIZATION
    value: core-api-authorization
  - name: CELERY_AUTHENTICATION
    value: celery-flower-authentication
  - name: CORE_API_URL
    required: true
  - name: CPU_LIMIT
    value: 225m
  - name: MEMORY_LIMIT
    value: 1.5Gi
  - name: CPU_REQUEST
    value: 128m
  - name: MEMORY_REQUEST
    value: 512Mi
  - name: UWSGI_PROCESSES
    value: "4"
  - name: UWSGI_THREADS
    value: "6"
  - name: REPLICA_MIN
    value: "3"
  - name: REPLICA_MAX
    value: "4"
  - name: WORKER_CPU_REQUEST
    value: 200m
  - name: WORKER_MEMORY_LIMIT
    value: 1.5Gi
  - name: WORKER_CPU_LIMIT
    value: 225m
  - name: WORKER_MEMORY_REQUEST
    value: 900Mi
  - name: WORKER_REPLICA_MIN
    value: "1"
  - name: WORKER_REPLICA_MAX
    value: "1"
  - name: REDIS_CONFIG_NAME
    required: false
    value: template.redis-secret
  - name: CACHE_REDIS_HOST
    value: redis
  - name: DOCUMENT_CAPACITY
    value: 1Gi
  - name: TUSD_URL
    required: true
objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: mds-document-storage
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${DOCUMENT_CAPACITY}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      creationTimestamp: null
      labels: null
      annotations:
        description: Defines how to deploy the application server
    spec:
      strategy:
        type: Rolling
        rollingParams:
          pre:
            failurePolicy: Retry
            execNewPod:
              containerName: app
              command:
                - bash
                - -c
                - cd /opt/app-root/src && flask db upgrade
          maxSurge: 50%
          maxUnavailable: 1
          timeoutSeconds: 1200
        activeDeadlineSeconds: 21600
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - app
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG}
              namespace: 4c2ba9-tools
        - type: ConfigChange
      replicas: ${{REPLICA_MIN}}
      test: false
      selector:
        name: ${NAME}
      template:
        metadata:
          name: ${NAME}
          creationTimestamp: null
          labels:
            name: ${NAME}
        spec:
          containers:
            - name: app
              image: " "
              ports:
                - containerPort: 5001
                  protocol: TCP
              env:
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: database-docman-user
                - name: DB_HOST
                  value: ${DB_HOST}
                - name: DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: docman-user-password
                - name: DB_PORT
                  value: "5432"
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: database-name
                - name: UWSGI_PROCESSES
                  value: ${UWSGI_PROCESSES}
                - name: UWSGI_THREADS
                  value: ${UWSGI_THREADS}
                - name: FLASK_RUN_PORT
                  value: "5001"
                - name: FLASK_RUN_HOST
                  value: 0.0.0.0
                - name: CACHE_REDIS_HOST
                  value: ${CACHE_REDIS_HOST}
                - name: CACHE_REDIS_PASS
                  valueFrom:
                    secretKeyRef:
                      name: ${REDIS_CONFIG_NAME}
                      key: database-password
                - name: JWT_OIDC_WELL_KNOWN_CONFIG
                  value: ${JWT_OIDC_WELL_KNOWN_CONFIG}
                - name: JWT_OIDC_AUDIENCE
                  value: ${JWT_OIDC_AUDIENCE}
                - name: JWT_OIDC_ALGORITHMS
                  value: RS256
                - name: BASE_PATH
                  value: ${BASE_PATH}
                - name: DOCUMENT_MANAGER_URL
                  value: ${DOCMAN_API_URL}
                - name: UPLOADED_DOCUMENT_DEST
                  value: ${UPLOADED_DOCUMENT_DEST}
                - name: OBJECT_STORE_ENABLED
                  value: ${OBJECT_STORE_ENABLED}
                - name: OBJECT_STORE_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${OBJECT_STORE_SECRET_NAME}
                      key: key-id
                - name: OBJECT_STORE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${OBJECT_STORE_SECRET_NAME}
                      key: secret-access-key
                - name: OBJECT_STORE_BUCKET
                  valueFrom:
                    secretKeyRef:
                      name: ${OBJECT_STORE_SECRET_NAME}
                      key: bucket-id
                - name: OBJECT_STORE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${OBJECT_STORE_SECRET_NAME}
                      key: endpoint
                - name: CORE_API_URL
                  value: ${CORE_API_URL}
                - name: AUTHENTICATION_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${CORE_API_AUTHORIZATION}
                      key: authentication-url
                - name: CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${CORE_API_AUTHORIZATION}
                      key: client-id
                - name: CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${CORE_API_AUTHORIZATION}
                      key: client-secret
                - name: GRANT_TYPE
                  valueFrom:
                    secretKeyRef:
                      name: ${CORE_API_AUTHORIZATION}
                      key: grant-type
                - name: CELERY_REST_API_URL
                  value: http://${NAME}-worker:5555
                - name: FLOWER_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${CELERY_AUTHENTICATION}
                      key: flower-user
                - name: FLOWER_USER_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${CELERY_AUTHENTICATION}
                      key: flower-user-password
                - name: S3_PREFIX
                  value: mds-files-${TAG}/
                - name: TUSD_URL
                  value: ${TUSD_URL}
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              livenessProbe:
                httpGet:
                  path: ${BASE_PATH}/health
                  port: 5001
                  scheme: HTTP
                initialDelaySeconds: 15
                timeoutSeconds: 3
                periodSeconds: 10
              readinessProbe:
                httpGet:
                  path: ${BASE_PATH}/health
                  port: 5001
                  scheme: HTTP
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/app-root/src/document_uploads
                  name: mds-document-storage-data
              imagePullPolicy: Always
          restartPolicy: Always
          dnsPolicy: ClusterFirst
          securityContext: {}
          volumes:
            - name: mds-document-storage-data
              persistentVolumeClaim:
                claimName: mds-document-storage
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}-worker
      creationTimestamp: null
      labels: null
      annotations:
        description: Defines how to deploy the celery task worker
    spec:
      strategy:
        type: Rolling
        rollingParams:
          maxSurge: 50%
          maxUnavailable: 1
          timeoutSeconds: 1200
        activeDeadlineSeconds: 21600
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - worker
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG}
              namespace: 4c2ba9-tools
        - type: ConfigChange
      replicas: ${{WORKER_REPLICA_MIN}}
      test: false
      selector:
        name: ${NAME}-worker
      template:
        metadata:
          name: ${NAME}-worker
          creationTimestamp: null
          labels:
            name: ${NAME}-worker
        spec:
          containers:
            - name: worker
              image: " "
              ports:
                - containerPort: 5001
                  protocol: TCP
              command:
                - /opt/app-root/src/celery.sh
              env:
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: database-docman-user
                - name: DB_HOST
                  value: ${DB_HOST}
                - name: DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: docman-user-password
                - name: DB_PORT
                  value: "5432"
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: database-name
                - name: NRIS_DB_PORT
                  value: "1521"
                - name: UWSGI_PROCESSES
                  value: ${UWSGI_PROCESSES}
                - name: UWSGI_THREADS
                  value: ${UWSGI_THREADS}
                - name: FLASK_RUN_PORT
                  value: "5001"
                - name: FLASK_RUN_HOST
                  value: 0.0.0.0
                - name: CACHE_REDIS_HOST
                  value: ${CACHE_REDIS_HOST}
                - name: CACHE_REDIS_PASS
                  valueFrom:
                    secretKeyRef:
                      name: ${REDIS_CONFIG_NAME}
                      key: database-password
                - name: JWT_OIDC_WELL_KNOWN_CONFIG
                  value: ${JWT_OIDC_WELL_KNOWN_CONFIG}
                - name: JWT_OIDC_AUDIENCE
                  value: ${JWT_OIDC_AUDIENCE}
                - name: JWT_OIDC_ALGORITHMS
                  value: RS256
                - name: BASE_PATH
                  value: ${BASE_PATH}
                - name: DOCUMENT_MANAGER_URL
                  value: ${DOCMAN_API_URL}
                - name: UPLOADED_DOCUMENT_DEST
                  value: ${UPLOADED_DOCUMENT_DEST}
                - name: OBJECT_STORE_ENABLED
                  value: ${OBJECT_STORE_ENABLED}
                - name: OBJECT_STORE_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${OBJECT_STORE_SECRET_NAME}
                      key: key-id
                - name: OBJECT_STORE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${OBJECT_STORE_SECRET_NAME}
                      key: secret-access-key
                - name: OBJECT_STORE_BUCKET
                  valueFrom:
                    secretKeyRef:
                      name: ${OBJECT_STORE_SECRET_NAME}
                      key: bucket-id
                - name: OBJECT_STORE_HOST
                  valueFrom:
                    secretKeyRef:
                      name: ${OBJECT_STORE_SECRET_NAME}
                      key: endpoint
                - name: CORE_API_URL
                  value: ${CORE_API_URL}
                - name: AUTHENTICATION_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${CORE_API_AUTHORIZATION}
                      key: authentication-url
                - name: CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${CORE_API_AUTHORIZATION}
                      key: client-id
                - name: CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: ${CORE_API_AUTHORIZATION}
                      key: client-secret
                - name: GRANT_TYPE
                  valueFrom:
                    secretKeyRef:
                      name: ${CORE_API_AUTHORIZATION}
                      key: grant-type
                - name: CELERY_REST_API_URL
                  value: http://${NAME}-worker:5555
                - name: FLOWER_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${CELERY_AUTHENTICATION}
                      key: flower-user
                - name: FLOWER_USER_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${CELERY_AUTHENTICATION}
                      key: flower-user-password
                - name: NROS_TOKEN_URL
                  valueFrom:
                    secretKeyRef:
                      name: template.nros-client-service
                      key: token-url
                - name: NROS_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: template.nros-client-service
                      key: service-client
                - name: NROS_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: template.nros-client-service
                      key: password
                - name: VFCBC_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: template.vfcbc-client-service
                      key: service-client
                - name: VFCBC_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: template.vfcbc-client-service
                      key: password
                - name: S3_PREFIX
                  value: mds-files-${TAG}/
                - name: TUSD_URL
                  value: ${TUSD_URL}
                - name: CELERY_REST_API_URL
                  value: http://${NAME}-worker:5555
              resources:
                limits:
                  cpu: ${WORKER_CPU_LIMIT}
                  memory: ${WORKER_MEMORY_LIMIT}
                requests:
                  cpu: ${WORKER_CPU_REQUEST}
                  memory: ${WORKER_MEMORY_REQUEST}
              livenessProbe:
                failureThreshold: 3
                exec:
                  command:
                    - bash
                    - -c
                    - celery inspect ping -A app.tasks.celery -d celery@${HOSTNAME}
                initialDelaySeconds: 30
                periodSeconds: 60
                timeoutSeconds: 10
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/app-root/src/document_uploads
                  name: mds-document-storage-data
              imagePullPolicy: Always
          restartPolicy: Always
          dnsPolicy: ClusterFirst
          securityContext: {}
          volumes:
            - name: mds-document-storage-data
              persistentVolumeClaim:
                claimName: mds-document-storage
  - apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
    spec:
      maxReplicas: ${{REPLICA_MAX}}
      minReplicas: ${{REPLICA_MIN}}
      scaleTargetRef:
        apiVersion: v1
        kind: DeploymentConfig
        name: ${NAME}
      targetCPUUtilizationPercentage: 95
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}
      creationTimestamp: null
      labels: null
      annotations:
        description: Exposes and load balances the application pods
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 5001
          targetPort: 5001
      selector:
        name: ${NAME}
      type: ClusterIP
      sessionAffinity: None
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}-worker
      creationTimestamp: null
      labels: null
      annotations:
        description: Exposes and load balances the application pods
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 5555
          targetPort: 5555
      selector:
        name: ${NAME}-worker
      type: ClusterIP
      sessionAffinity: None
  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}-worker
    spec:
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      path: /
      to:
        kind: Service
        name: ${NAME}-worker
      port:
        targetPort: web
      wildcardPolicy: None
