kind: Template
apiVersion: v1
metadata:
  name: fider-dc
  creationTimestamp: null
parameters:
  - description: The name of the OpenShift Service exposed for the database.
    displayName: Database Service Name
    name: NAME
    value: fider
  - name: TAG
    required: true
  - name: IMAGE_NAMESPACE
    value: 4c2ba9-tools
  - name: APPNAME
    displayName: AppName
    description: Application name for grouping pods in Openshift
    value: Fider
    required: true
objects:
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: fider
      name: fider-postgresql
    labels:
        app.kubernetes.io/part-of: ${APPNAME}
        app.openshift.io/runtime: postgresql    
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: fider
        deploymentconfig: fider-postgresql
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            app: fider
            deploymentconfig: fider-postgresql
        spec:
          containers:
            - env:
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: fider-postgresql
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: fider-postgresql
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: fider-postgresql
              image: " "
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 5432
                timeoutSeconds: 1
              name: fider-postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - pg_isready -h localhost -p 5432
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: postgresql-volume
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: postgresql-volume
              persistentVolumeClaim:
                claimName: fider-postgresql
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - fider-postgresql
            from:
              kind: ImageStreamTag
              name: postgresql96:${TAG}
              namespace: ${IMAGE_NAMESPACE}
          type: ImageChange

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: fider-postgresql
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: fider
        app.kubernetes.io/part-of: ${APPNAME}
        app.openshift.io/runtime: nodejs        
      name: fider-postgresql
    spec:
      ports:
        - name: 5432-tcp
          port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        app: fider
        deploymentconfig: fider-postgresql
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: fider
        app.kubernetes.io/part-of: ${APPNAME}
        app.openshift.io/runtime: nodejs        
      name: fider
    spec:
      ports:
        - name: web
          port: 8080
          protocol: TCP
          targetPort: 3000
      selector:
        app: fider
        deploymentconfig: fider-app
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}

  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: fider
      name: fider
    spec:
      to:
        kind: Service
        name: fider
        weight: 100
      port:
        targetPort: web
      wildcardPolicy: None

  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: "2020-05-04T23:13:45Z"
      generation: 10
      labels:
        app: fider
        app.kubernetes.io/part-of: ${APPNAME}
        app.openshift.io/runtime: nodejs        
      name: fider-app
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: fider
        deploymentconfig: fider-app
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 180
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftNewApp
          creationTimestamp: null
          labels:
            app: fider
            deploymentconfig: fider-app
        spec:
          containers:
            - env:
                - name: EMAIL_SMTP_USERNAME
                  value: Gary.T.Wong@gov.bc.ca
                - name: POSTGRESQL_USERNAME
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: fider-postgresql
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: fider-postgresql
                - name: POSTGRESQL_DB_NAME
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: fider-postgresql
                - name: POSTGRESQL_DB_HOST
                  value: fider-postgresql
                - name: POSTGRESQL_PORT
                  value: "5432"
                - name: GO_ENV
                  value: production
                - name: LOG_LEVEL
                  value: INFO
                - name: EMAIL_SMTP_HOST
                  value: apps.smtp.gov.bc.ca
                - name: EMAIL_SMTP_PORT
                  value: "25"
                - name: EMAIL_NOREPLY
                  value: noreply@gov.bc.ca
                - name: DATABASE_URL
                  value: >-
                    postgres://$(POSTGRESQL_USERNAME):$(POSTGRESQL_PASSWORD)@$(POSTGRESQL_DB_HOST):$(POSTGRESQL_PORT)/mdsfider?sslmode=disable
                - name: JWT_SECRET
                  valueFrom:
                    secretKeyRef:
                      key: fider-jwt
                      name: fider-jwt
              imagePullPolicy: Always
              livenessProbe:
                failureThreshold: 6
                httpGet:
                  path: /
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 60
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: fider-app
              ports:
                - containerPort: 3000
                  protocol: TCP
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  path: /
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 2
              resources:
                limits:
                  cpu: 500m
                  memory: 1Gi
                requests:
                  cpu: 100m
                  memory: 256Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - fider-app
            from:
              kind: ImageStreamTag
              name: "fider-bcgov:0.18.0"
              namespace: 4c2ba9-tools
          type: ImageChange
        - type: ConfigChange
