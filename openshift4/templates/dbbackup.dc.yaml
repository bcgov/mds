kind: Template
apiVersion: v1
metadata:
  name: dsrp-dbbackup-dc
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the resources defined in this template.
    value: dbbackup
  - name: TAG
    required: true
  - name: DATABASE_SERVICE_NAME
    displayName: Database Service Name
    description: The name of the database service.
    value: postgresql
  - name: WEBHOOK_SECRET_NAME
    value: template.rocket-chat-integrations
  - name: ENVIRONMENT_NAME
    displayName: Environment Name (Environment Id)
    description: The name or Id of the environment.  This variable is used by the webhook integration to identify the environment in which the backup notifications originate.
    required: false
  - name: ENVIRONMENT_FRIENDLY_NAME
    value: Dormant Site Reclamation Program
  - name: VERIFICATION_VOLUME_SIZE
    displayName: Verification Volume Size
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    value: 1Gi
  - name: BACKUP_VOLUME_SIZE
    displayName: Backup Volume Size
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    value: 5Gi
  - name: CPU_REQUEST
    value: "0"
  - name: CPU_LIMIT
    value: "0"
  - name: MEMORY_REQUEST
    value: "0"
  - name: MEMORY_LIMIT
    value: "0"
  - name: IMAGE_NAMESPACE
    value: 269007-tools
objects:
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: dsrp-db-backup-verification
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: ${VERIFICATION_VOLUME_SIZE}
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: dsrp-db-backup-data
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: ${BACKUP_VOLUME_SIZE}
      storageClassName: netapp-file-backup
      volumeMode: Filesystem
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: dsrp-db-backup-config
    data:
      backup.conf: |
        ${DATABASE_SERVICE_NAME}/dsrp
        0 2 * * * default ./backup.sh -s
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      annotations:
        description: Defines how to deploy the ${NAME} server
    spec:
      strategy:
        type: Recreate
        recreateParams:
          maxSurge: 50%
          maxUnavailable: 0
          timeoutSeconds: 1200
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - backup
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG}
              namespace: ${IMAGE_NAMESPACE}
      replicas: 1
      selector:
        name: ${NAME}
      template:
        metadata:
          name: ${NAME}
          labels:
            name: ${NAME}
        spec:
          volumes:
            - name: dsrp-db-backup-data
              persistentVolumeClaim:
                claimName: dsrp-db-backup-data
            - name: dsrp-db-backup-verification
              persistentVolumeClaim:
                claimName: dsrp-db-backup-verification
            - name: dsrp-db-backup-config-volume
              configMap:
                name: dsrp-db-backup-config
                items:
                  - key: backup.conf
                    path: backup.conf
          containers:
            - name: backup
              image: " "
              env:
                - name: BACKUP_STRATEGY
                  value: rolling
                - name: BACKUP_DIR
                  value: /backups/
                - name: DAILY_BACKUPS
                  value: "5"
                - name: WEEKLY_BACKUPS
                  value: "1"
                - name: MONTHLY_BACKUPS
                  value: "1"
                - name: DATABASE_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-admin-user
                - name: DATABASE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${DATABASE_SERVICE_NAME}
                      key: database-admin-password
                - name: WEBHOOK_URL
                  valueFrom:
                    secretKeyRef:
                      name: ${WEBHOOK_SECRET_NAME}
                      key: chatops-db-backup
                - name: DATABASE_SERVER_TIMEOUT
                  value: "600"
                - name: ENVIRONMENT_NAME
                  value: ${ENVIRONMENT_NAME}
                - name: ENVIRONMENT_FRIENDLY_NAME
                  value: ${ENVIRONMENT_FRIENDLY_NAME}
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: dsrp-db-backup-data
                  mountPath: /backups/
                - name: dsrp-db-backup-verification
                  mountPath: /var/lib/pgsql/data
                - name: dsrp-db-backup-config-volume
                  mountPath: /backup.conf
                  subPath: backup.conf
