kind: Template
apiVersion: v1
metadata:
  name: mds-python-oracle-dc
  creationTimestamp: null
parameters:
  - name: NAME
    displayName: Name
    description: A name for all objects
    value: nris
  - name: DB_CONFIG_NAME
    displayName: Database Config Name
    description: Configuration name for the database
    value: postgresql-nris
  - name: DB_HOST
    displayName: Database Host Name
    value: postgresql
  - name: TAG
    required: true
  - name: JWT_OIDC_WELL_KNOWN_CONFIG
    displayName: Keycloak config URL
    required: true
  - name: JWT_OIDC_AUDIENCE
    displayName: Keycloak clientId
    required: true
  - name: BASE_PATH
    required: false
    value: /
  - name: NRIS_ODB_CREDENTIALS
    required: false
    value: template.nris-odb-credentials
  - name: CPU_LIMIT
    value: 200m
  - name: MEMORY_LIMIT
    value: 1Gi
  - name: CPU_REQUEST
    value: 100m
  - name: MEMORY_REQUEST
    value: 400Mi
  - name: UWSGI_PROCESSES
    value: "2"
  - name: UWSGI_THREADS
    value: "4"
  - name: REPLICA_MIN
    value: "2"
  - name: REPLICA_MAX
    value: "2"
  - name: REDIS_CONFIG_NAME
    required: false
    value: template.redis-secret
  - name: CACHE_REDIS_HOST
    value: redis
  - name: ENVIRONMENT_NAME
    required: true
objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}
      creationTimestamp: null
      labels: null
      annotations:
        description: Defines how to deploy the application server
    spec:
      strategy:
        type: Rolling
        rollingParams:
          pre:
            failurePolicy: Retry
            execNewPod:
              containerName: app
              command:
                - bash
                - -c
                - cd /opt/app-root/src && flask db upgrade
          maxSurge: 50%
          maxUnavailable: 0
          timeoutSeconds: 1200
        activeDeadlineSeconds: 21600
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - app
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG}
              namespace: 4c2ba9-tools
        - type: ConfigChange
      replicas: ${{REPLICA_MIN}}
      test: false
      selector:
        name: ${NAME}
      template:
        metadata:
          name: ${NAME}
          creationTimestamp: null
          labels:
            name: ${NAME}
        spec:
          containers:
            - name: app
              image: " "
              ports:
                - containerPort: 5500
                  protocol: TCP
              env:
                - name: DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: database-nris-user
                - name: DB_HOST
                  value: ${DB_HOST}
                - name: DB_PASS
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: database-nris-password
                - name: DB_PORT
                  value: "5432"
                - name: DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: ${DB_CONFIG_NAME}
                      key: database-name
                - name: NRIS_DB_HOSTNAME
                  valueFrom:
                    secretKeyRef:
                      name: ${NRIS_ODB_CREDENTIALS}
                      key: db-host
                - name: NRIS_DB_SERVICENAME
                  valueFrom:
                    secretKeyRef:
                      name: ${NRIS_ODB_CREDENTIALS}
                      key: db-service
                - name: NRIS_DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: ${NRIS_ODB_CREDENTIALS}
                      key: db-user
                - name: NRIS_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: ${NRIS_ODB_CREDENTIALS}
                      key: db-password
                - name: NRIS_DB_PORT
                  valueFrom:
                    secretKeyRef:
                      name: ${NRIS_ODB_CREDENTIALS}
                      key: db-port
                - name: NRIS_SERVER_CERT_DN
                  valueFrom:
                    secretKeyRef:
                      name: ${NRIS_ODB_CREDENTIALS}
                      key: db-server-cert-dn
                - name: UWSGI_PROCESSES
                  value: ${UWSGI_PROCESSES}
                - name: UWSGI_THREADS
                  value: ${UWSGI_THREADS}
                - name: FLASK_RUN_PORT
                  value: "5500"
                - name: FLASK_RUN_HOST
                  value: 0.0.0.0
                - name: CACHE_REDIS_HOST
                  value: ${CACHE_REDIS_HOST}
                - name: CACHE_REDIS_PASS
                  valueFrom:
                    secretKeyRef:
                      name: ${REDIS_CONFIG_NAME}
                      key: database-password
                - name: JWT_OIDC_WELL_KNOWN_CONFIG
                  value: ${JWT_OIDC_WELL_KNOWN_CONFIG}
                - name: JWT_OIDC_AUDIENCE
                  value: ${JWT_OIDC_AUDIENCE}
                - name: JWT_OIDC_ALGORITHMS
                  value: RS256
                - name: BASE_PATH
                  value: ${BASE_PATH}
                - name: DOCUMENT_MANAGER_URL
                  value: ${API_URL}
                - name: ENVIRONMENT_NAME
                  value: ${ENVIRONMENT_NAME}
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              livenessProbe:
                httpGet:
                  path: ${BASE_PATH}/health
                  port: 5500
                  scheme: HTTP
                initialDelaySeconds: 15
                timeoutSeconds: 3
                periodSeconds: 10
              readinessProbe:
                httpGet:
                  path: ${BASE_PATH}/health
                  port: 5500
                  scheme: HTTP
              volumeMounts:
                - mountPath: /opt/app-root/src/wallet/cwallet.sso
                  name: odb-credentials
                  subPath: cwallet.sso
                - mountPath: /opt/app-root/src/wallet/ewallet.p12
                  name: odb-credentials
                  subPath: ewallet.p12
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          volumes:
            - name: odb-credentials
              configMap:
                name: odb-wallet
          restartPolicy: Always
          dnsPolicy: ClusterFirst
          securityContext: {}
  - apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      name: ${NAME}
      labels:
        name: ${NAME}
    spec:
      maxReplicas: ${{REPLICA_MAX}}
      minReplicas: ${{REPLICA_MIN}}
      scaleTargetRef:
        apiVersion: v1
        kind: DeploymentConfig
        name: ${NAME}
      targetCPUUtilizationPercentage: 95
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}
      creationTimestamp: null
      labels: null
      annotations:
        description: Exposes and load balances the application pods
    spec:
      ports:
        - name: web
          protocol: TCP
          port: 5500
          targetPort: 5500
      selector:
        name: ${NAME}
      type: ClusterIP
      sessionAffinity: None
