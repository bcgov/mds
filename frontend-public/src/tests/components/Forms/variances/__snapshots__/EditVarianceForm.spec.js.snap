// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditVarianceForm renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditVarianceForm
    closeModal={[MockFunction]}
    complianceCodesHash={
      Object {
        "305": "2.3.7 - Spills",
        "306": "2.3.8 - Flammable Waste Storage",
      }
    }
    handleSubmit={[MockFunction]}
    mineGuid="1738472"
    mineName="mockMineName"
    onSubmit={[MockFunction]}
    removeDocument={[MockFunction]}
    submitting={false}
    variance={
      Object {
        "compliance_article_id": 1,
        "documents": Array [
          Object {
            "created_at": "2019-05-02",
            "document_manager_guid": "d7f64a25-6eaf-4bed-97fe-fd63ac347c70",
            "document_name": "test.pdf",
            "mine_document_guid": "33e6b965-2402-4229-a213-23bbe7fd3e99",
            "mine_guid": "59e73109-48f7-4ad2-977c-3005b5bff010",
          },
        ],
        "expiry_date": "2019-03-30",
        "issue_date": "2019-03-01",
        "note": "notesss",
        "received_date": "2019-03-01",
        "variance_guid": "0d3ec917-179f-4dbc-80a3-4c993fdfe596",
      }
    }
    varianceStatusOptionsHash={
      Object {
        "APP": "Approved",
        "DEN": "Denied",
        "NAP": "Not Applicable",
        "REV": "In Review",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <VarianceDetails
          complianceCodesHash={
            Object {
              "305": "2.3.7 - Spills",
              "306": "2.3.8 - Flammable Waste Storage",
            }
          }
          isViewOnly={false}
          mineName="mockMineName"
          removeDocument={[MockFunction]}
          variance={
            Object {
              "compliance_article_id": 1,
              "documents": Array [
                Object {
                  "created_at": "2019-05-02",
                  "document_manager_guid": "d7f64a25-6eaf-4bed-97fe-fd63ac347c70",
                  "document_name": "test.pdf",
                  "mine_document_guid": "33e6b965-2402-4229-a213-23bbe7fd3e99",
                  "mine_guid": "59e73109-48f7-4ad2-977c-3005b5bff010",
                },
              ],
              "expiry_date": "2019-03-30",
              "issue_date": "2019-03-01",
              "note": "notesss",
              "received_date": "2019-03-01",
              "variance_guid": "0d3ec917-179f-4dbc-80a3-4c993fdfe596",
            }
          }
          varianceStatusOptionsHash={
            Object {
              "APP": "Approved",
              "DEN": "Denied",
              "NAP": "Not Applicable",
              "REV": "In Review",
            }
          }
        />,
        <FormItem
          colon={true}
          hasFeedback={false}
          label="Attached Files"
        >
          <p>
            Please upload all the required documents here for the variance application
          </p>
          <Field
            component={[Function]}
            id="uploadedFiles"
            mineGuid="1738472"
            name="uploadedFiles"
            onFileLoad={[Function]}
            onRemoveFile={[Function]}
          />
        </FormItem>,
        <div
          className="right center-mobile"
        >
          <Popconfirm
            cancelText="No"
            icon={
              <Icon
                theme="filled"
                type="exclamation-circle"
              />
            }
            okText="Yes"
            okType="primary"
            onConfirm={[MockFunction]}
            placement="topRight"
            title="Are you sure you want to cancel?"
            transitionName="zoom-big"
            trigger="click"
          >
            <Button
              block={false}
              className="full-mobile"
              ghost={false}
              loading={false}
              type="secondary"
            >
              Cancel
            </Button>
          </Popconfirm>
          <Button
            block={false}
            className="full-mobile"
            disabled={false}
            ghost={false}
            htmlType="submit"
            loading={false}
            type="primary"
          >
            Submit
          </Button>
        </div>,
      ],
      "hideRequiredMark": false,
      "layout": "vertical",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "complianceCodesHash": Object {
            "305": "2.3.7 - Spills",
            "306": "2.3.8 - Flammable Waste Storage",
          },
          "isViewOnly": false,
          "mineName": "mockMineName",
          "removeDocument": [MockFunction],
          "variance": Object {
            "compliance_article_id": 1,
            "documents": Array [
              Object {
                "created_at": "2019-05-02",
                "document_manager_guid": "d7f64a25-6eaf-4bed-97fe-fd63ac347c70",
                "document_name": "test.pdf",
                "mine_document_guid": "33e6b965-2402-4229-a213-23bbe7fd3e99",
                "mine_guid": "59e73109-48f7-4ad2-977c-3005b5bff010",
              },
            ],
            "expiry_date": "2019-03-30",
            "issue_date": "2019-03-01",
            "note": "notesss",
            "received_date": "2019-03-01",
            "variance_guid": "0d3ec917-179f-4dbc-80a3-4c993fdfe596",
          },
          "varianceStatusOptionsHash": Object {
            "APP": "Approved",
            "DEN": "Denied",
            "NAP": "Not Applicable",
            "REV": "In Review",
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <p>
              Please upload all the required documents here for the variance application
            </p>,
            <Field
              component={[Function]}
              id="uploadedFiles"
              mineGuid="1738472"
              name="uploadedFiles"
              onFileLoad={[Function]}
              onRemoveFile={[Function]}
            />,
          ],
          "colon": true,
          "hasFeedback": false,
          "label": "Attached Files",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Please upload all the required documents here for the variance application",
            },
            "ref": null,
            "rendered": "Please upload all the required documents here for the variance application",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "id": "uploadedFiles",
              "mineGuid": "1738472",
              "name": "uploadedFiles",
              "onFileLoad": [Function],
              "onRemoveFile": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Popconfirm
              cancelText="No"
              icon={
                <Icon
                  theme="filled"
                  type="exclamation-circle"
                />
              }
              okText="Yes"
              okType="primary"
              onConfirm={[MockFunction]}
              placement="topRight"
              title="Are you sure you want to cancel?"
              transitionName="zoom-big"
              trigger="click"
            >
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                loading={false}
                type="secondary"
              >
                Cancel
              </Button>
            </Popconfirm>,
            <Button
              block={false}
              className="full-mobile"
              disabled={false}
              ghost={false}
              htmlType="submit"
              loading={false}
              type="primary"
            >
              Submit
            </Button>,
          ],
          "className": "right center-mobile",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "cancelText": "No",
              "children": <Button
                block={false}
                className="full-mobile"
                ghost={false}
                loading={false}
                type="secondary"
              >
                Cancel
              </Button>,
              "icon": <Icon
                theme="filled"
                type="exclamation-circle"
              />,
              "okText": "Yes",
              "okType": "primary",
              "onConfirm": [MockFunction],
              "placement": "topRight",
              "title": "Are you sure you want to cancel?",
              "transitionName": "zoom-big",
              "trigger": "click",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "Cancel",
                "className": "full-mobile",
                "ghost": false,
                "loading": false,
                "type": "secondary",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": "Submit",
              "className": "full-mobile",
              "disabled": false,
              "ghost": false,
              "htmlType": "submit",
              "loading": false,
              "type": "primary",
            },
            "ref": null,
            "rendered": "Submit",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <VarianceDetails
            complianceCodesHash={
              Object {
                "305": "2.3.7 - Spills",
                "306": "2.3.8 - Flammable Waste Storage",
              }
            }
            isViewOnly={false}
            mineName="mockMineName"
            removeDocument={[MockFunction]}
            variance={
              Object {
                "compliance_article_id": 1,
                "documents": Array [
                  Object {
                    "created_at": "2019-05-02",
                    "document_manager_guid": "d7f64a25-6eaf-4bed-97fe-fd63ac347c70",
                    "document_name": "test.pdf",
                    "mine_document_guid": "33e6b965-2402-4229-a213-23bbe7fd3e99",
                    "mine_guid": "59e73109-48f7-4ad2-977c-3005b5bff010",
                  },
                ],
                "expiry_date": "2019-03-30",
                "issue_date": "2019-03-01",
                "note": "notesss",
                "received_date": "2019-03-01",
                "variance_guid": "0d3ec917-179f-4dbc-80a3-4c993fdfe596",
              }
            }
            varianceStatusOptionsHash={
              Object {
                "APP": "Approved",
                "DEN": "Denied",
                "NAP": "Not Applicable",
                "REV": "In Review",
              }
            }
          />,
          <FormItem
            colon={true}
            hasFeedback={false}
            label="Attached Files"
          >
            <p>
              Please upload all the required documents here for the variance application
            </p>
            <Field
              component={[Function]}
              id="uploadedFiles"
              mineGuid="1738472"
              name="uploadedFiles"
              onFileLoad={[Function]}
              onRemoveFile={[Function]}
            />
          </FormItem>,
          <div
            className="right center-mobile"
          >
            <Popconfirm
              cancelText="No"
              icon={
                <Icon
                  theme="filled"
                  type="exclamation-circle"
                />
              }
              okText="Yes"
              okType="primary"
              onConfirm={[MockFunction]}
              placement="topRight"
              title="Are you sure you want to cancel?"
              transitionName="zoom-big"
              trigger="click"
            >
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                loading={false}
                type="secondary"
              >
                Cancel
              </Button>
            </Popconfirm>
            <Button
              block={false}
              className="full-mobile"
              disabled={false}
              ghost={false}
              htmlType="submit"
              loading={false}
              type="primary"
            >
              Submit
            </Button>
          </div>,
        ],
        "hideRequiredMark": false,
        "layout": "vertical",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "complianceCodesHash": Object {
              "305": "2.3.7 - Spills",
              "306": "2.3.8 - Flammable Waste Storage",
            },
            "isViewOnly": false,
            "mineName": "mockMineName",
            "removeDocument": [MockFunction],
            "variance": Object {
              "compliance_article_id": 1,
              "documents": Array [
                Object {
                  "created_at": "2019-05-02",
                  "document_manager_guid": "d7f64a25-6eaf-4bed-97fe-fd63ac347c70",
                  "document_name": "test.pdf",
                  "mine_document_guid": "33e6b965-2402-4229-a213-23bbe7fd3e99",
                  "mine_guid": "59e73109-48f7-4ad2-977c-3005b5bff010",
                },
              ],
              "expiry_date": "2019-03-30",
              "issue_date": "2019-03-01",
              "note": "notesss",
              "received_date": "2019-03-01",
              "variance_guid": "0d3ec917-179f-4dbc-80a3-4c993fdfe596",
            },
            "varianceStatusOptionsHash": Object {
              "APP": "Approved",
              "DEN": "Denied",
              "NAP": "Not Applicable",
              "REV": "In Review",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <p>
                Please upload all the required documents here for the variance application
              </p>,
              <Field
                component={[Function]}
                id="uploadedFiles"
                mineGuid="1738472"
                name="uploadedFiles"
                onFileLoad={[Function]}
                onRemoveFile={[Function]}
              />,
            ],
            "colon": true,
            "hasFeedback": false,
            "label": "Attached Files",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Please upload all the required documents here for the variance application",
              },
              "ref": null,
              "rendered": "Please upload all the required documents here for the variance application",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "uploadedFiles",
                "mineGuid": "1738472",
                "name": "uploadedFiles",
                "onFileLoad": [Function],
                "onRemoveFile": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Popconfirm
                cancelText="No"
                icon={
                  <Icon
                    theme="filled"
                    type="exclamation-circle"
                  />
                }
                okText="Yes"
                okType="primary"
                onConfirm={[MockFunction]}
                placement="topRight"
                title="Are you sure you want to cancel?"
                transitionName="zoom-big"
                trigger="click"
              >
                <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  loading={false}
                  type="secondary"
                >
                  Cancel
                </Button>
              </Popconfirm>,
              <Button
                block={false}
                className="full-mobile"
                disabled={false}
                ghost={false}
                htmlType="submit"
                loading={false}
                type="primary"
              >
                Submit
              </Button>,
            ],
            "className": "right center-mobile",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "cancelText": "No",
                "children": <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  loading={false}
                  type="secondary"
                >
                  Cancel
                </Button>,
                "icon": <Icon
                  theme="filled"
                  type="exclamation-circle"
                />,
                "okText": "Yes",
                "okType": "primary",
                "onConfirm": [MockFunction],
                "placement": "topRight",
                "title": "Are you sure you want to cancel?",
                "transitionName": "zoom-big",
                "trigger": "click",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "block": false,
                  "children": "Cancel",
                  "className": "full-mobile",
                  "ghost": false,
                  "loading": false,
                  "type": "secondary",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "Submit",
                "className": "full-mobile",
                "disabled": false,
                "ghost": false,
                "htmlType": "submit",
                "loading": false,
                "type": "primary",
              },
              "ref": null,
              "rendered": "Submit",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
