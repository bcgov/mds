// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthenticationGuard should render the \`WrappedComponent\` if \`isAuthenticated\` && \`userAccessData === role_view\` 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <authenticationGuard
    authenticateUser={[MockFunction]}
    isAuthenticated={true}
    keycloak={true}
    storeKeycloakData={[MockFunction]}
    storeUserAccessData={[MockFunction]}
    userAccessData={
      Array [
        "mds-mine-view",
        "idir",
        "mds-mine-create",
        "offline_access",
        "admin",
        "uma_authorization",
        "mds-mine-admin",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "authenticateUser": [MockFunction],
      "isAuthenticated": true,
      "keycloak": true,
      "storeKeycloakData": [MockFunction],
      "storeUserAccessData": [MockFunction],
      "userAccessData": Array [
        "mds-mine-view",
        "idir",
        "mds-mine-create",
        "offline_access",
        "admin",
        "uma_authorization",
        "mds-mine-admin",
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "authenticateUser": [MockFunction],
        "isAuthenticated": true,
        "keycloak": true,
        "storeKeycloakData": [MockFunction],
        "storeUserAccessData": [MockFunction],
        "userAccessData": Array [
          "mds-mine-view",
          "idir",
          "mds-mine-create",
          "offline_access",
          "admin",
          "uma_authorization",
          "mds-mine-admin",
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
