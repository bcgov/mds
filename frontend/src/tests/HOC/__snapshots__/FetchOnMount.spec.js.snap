// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FetchOnMount should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <fetchOnMount
    fetchApplicationStatusOptions={[MockFunction]}
    fetchExpectedDocumentStatusOptions={[MockFunction]}
    fetchMineCommodityOptions={[MockFunction]}
    fetchMineComplianceCodes={[MockFunction]}
    fetchMineDisturbanceOptions={[MockFunction]}
    fetchMineIncidentDeterminationOptions={[MockFunction]}
    fetchMineIncidentFollowActionOptions={[MockFunction]}
    fetchMineTailingsRequiredDocuments={[MockFunction]}
    fetchMineTenureTypes={[MockFunction]}
    fetchPermitStatusOptions={[MockFunction]}
    fetchProvinceCodes={[MockFunction]}
    fetchRegionOptions={[MockFunction]}
    fetchStatusOptions={[MockFunction]}
    fetchVarianceStatusOptions={[MockFunction]}
    optionsLoaded={true}
    setOptionsLoaded={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "fetchApplicationStatusOptions": [MockFunction],
      "fetchExpectedDocumentStatusOptions": [MockFunction],
      "fetchMineCommodityOptions": [MockFunction],
      "fetchMineComplianceCodes": [MockFunction],
      "fetchMineDisturbanceOptions": [MockFunction],
      "fetchMineIncidentDeterminationOptions": [MockFunction],
      "fetchMineIncidentFollowActionOptions": [MockFunction],
      "fetchMineTailingsRequiredDocuments": [MockFunction],
      "fetchMineTenureTypes": [MockFunction],
      "fetchPermitStatusOptions": [MockFunction],
      "fetchProvinceCodes": [MockFunction],
      "fetchRegionOptions": [MockFunction],
      "fetchStatusOptions": [MockFunction],
      "fetchVarianceStatusOptions": [MockFunction],
      "optionsLoaded": true,
      "setOptionsLoaded": [MockFunction],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "fetchApplicationStatusOptions": [MockFunction],
        "fetchExpectedDocumentStatusOptions": [MockFunction],
        "fetchMineCommodityOptions": [MockFunction],
        "fetchMineComplianceCodes": [MockFunction],
        "fetchMineDisturbanceOptions": [MockFunction],
        "fetchMineIncidentDeterminationOptions": [MockFunction],
        "fetchMineIncidentFollowActionOptions": [MockFunction],
        "fetchMineTailingsRequiredDocuments": [MockFunction],
        "fetchMineTenureTypes": [MockFunction],
        "fetchPermitStatusOptions": [MockFunction],
        "fetchProvinceCodes": [MockFunction],
        "fetchRegionOptions": [MockFunction],
        "fetchStatusOptions": [MockFunction],
        "fetchVarianceStatusOptions": [MockFunction],
        "optionsLoaded": true,
        "setOptionsLoaded": [MockFunction],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
