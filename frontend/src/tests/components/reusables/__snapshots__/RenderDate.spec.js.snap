// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RenderDate renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RenderDate
    id={1}
    input=""
    label=""
    meta={
      Object {
        "error": false,
        "touched": false,
        "warning": false,
      }
    }
    onChange={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <PickerWrapper
        format="YYYY-MM-DD"
        id={1}
        inputPrefixCls="ant-input"
        locale={Object {}}
        onChange={[Function]}
        onOk={[Function]}
        onOpenChange={[Function]}
        popupStyle={Object {}}
        prefixCls="ant-calendar"
        transitionName="slide-up"
        value={null}
      />,
      "colon": true,
      "hasFeedback": false,
      "help": false,
      "label": "",
      "prefixCls": "ant-form",
      "validateStatus": "",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "format": "YYYY-MM-DD",
        "id": 1,
        "inputPrefixCls": "ant-input",
        "locale": Object {},
        "onChange": [Function],
        "onOk": [Function],
        "onOpenChange": [Function],
        "popupStyle": Object {},
        "prefixCls": "ant-calendar",
        "transitionName": "slide-up",
        "value": null,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <PickerWrapper
          format="YYYY-MM-DD"
          id={1}
          inputPrefixCls="ant-input"
          locale={Object {}}
          onChange={[Function]}
          onOk={[Function]}
          onOpenChange={[Function]}
          popupStyle={Object {}}
          prefixCls="ant-calendar"
          transitionName="slide-up"
          value={null}
        />,
        "colon": true,
        "hasFeedback": false,
        "help": false,
        "label": "",
        "prefixCls": "ant-form",
        "validateStatus": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "format": "YYYY-MM-DD",
          "id": 1,
          "inputPrefixCls": "ant-input",
          "locale": Object {},
          "onChange": [Function],
          "onOk": [Function],
          "onOpenChange": [Function],
          "popupStyle": Object {},
          "prefixCls": "ant-calendar",
          "transitionName": "slide-up",
          "value": null,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
