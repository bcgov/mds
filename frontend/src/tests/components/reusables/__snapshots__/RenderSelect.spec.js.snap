// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RenderSelect renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RenderSelect
    data={
      Array [
        "18133c75-49ad-4101-85f3-a43e35ae989a",
        "18145c75-49ad-0101-85f3-a43e45ae989a",
      ]
    }
    id="1"
    input=""
    label=""
    meta={
      Object {
        "error": false,
        "touched": false,
        "warning": false,
      }
    }
    option={
      Object {
        "18133c75-49ad-4101-85f3-a43e35ae989a": Object {
          "full_name": "mock name",
          "guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
        },
        "18145c75-49ad-0101-85f3-a43e45ae989a": Object {
          "full_name": "mock Two",
          "guid": "18145c75-49ad-0101-85f3-a43e45ae989a",
        },
      }
    }
    type=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Select
        choiceTransitionName="zoom"
        filterOption={[Function]}
        id="1"
        optionFilterProp="children"
        placeholder="Select a person"
        prefixCls="ant-select"
        showSearch={true}
        transitionName="slide-up"
      >
        <Option
          value="18133c75-49ad-4101-85f3-a43e35ae989a"
        >
          mock name
        </Option>
        <Option
          value="18145c75-49ad-0101-85f3-a43e45ae989a"
        >
          mock Two
        </Option>
      </Select>,
      "colon": true,
      "hasFeedback": false,
      "help": false,
      "label": "",
      "prefixCls": "ant-form",
      "validateStatus": "",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Option
            value="18133c75-49ad-4101-85f3-a43e35ae989a"
          >
            mock name
          </Option>,
          <Option
            value="18145c75-49ad-0101-85f3-a43e45ae989a"
          >
            mock Two
          </Option>,
        ],
        "choiceTransitionName": "zoom",
        "filterOption": [Function],
        "id": "1",
        "optionFilterProp": "children",
        "placeholder": "Select a person",
        "prefixCls": "ant-select",
        "showSearch": true,
        "transitionName": "slide-up",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "18133c75-49ad-4101-85f3-a43e35ae989a",
          "nodeType": "class",
          "props": Object {
            "children": "mock name",
            "value": "18133c75-49ad-4101-85f3-a43e35ae989a",
          },
          "ref": null,
          "rendered": "mock name",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "18145c75-49ad-0101-85f3-a43e45ae989a",
          "nodeType": "class",
          "props": Object {
            "children": "mock Two",
            "value": "18145c75-49ad-0101-85f3-a43e45ae989a",
          },
          "ref": null,
          "rendered": "mock Two",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Select
          choiceTransitionName="zoom"
          filterOption={[Function]}
          id="1"
          optionFilterProp="children"
          placeholder="Select a person"
          prefixCls="ant-select"
          showSearch={true}
          transitionName="slide-up"
        >
          <Option
            value="18133c75-49ad-4101-85f3-a43e35ae989a"
          >
            mock name
          </Option>
          <Option
            value="18145c75-49ad-0101-85f3-a43e45ae989a"
          >
            mock Two
          </Option>
        </Select>,
        "colon": true,
        "hasFeedback": false,
        "help": false,
        "label": "",
        "prefixCls": "ant-form",
        "validateStatus": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Option
              value="18133c75-49ad-4101-85f3-a43e35ae989a"
            >
              mock name
            </Option>,
            <Option
              value="18145c75-49ad-0101-85f3-a43e45ae989a"
            >
              mock Two
            </Option>,
          ],
          "choiceTransitionName": "zoom",
          "filterOption": [Function],
          "id": "1",
          "optionFilterProp": "children",
          "placeholder": "Select a person",
          "prefixCls": "ant-select",
          "showSearch": true,
          "transitionName": "slide-up",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "18133c75-49ad-4101-85f3-a43e35ae989a",
            "nodeType": "class",
            "props": Object {
              "children": "mock name",
              "value": "18133c75-49ad-4101-85f3-a43e35ae989a",
            },
            "ref": null,
            "rendered": "mock name",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "18145c75-49ad-0101-85f3-a43e45ae989a",
            "nodeType": "class",
            "props": Object {
              "children": "mock Two",
              "value": "18145c75-49ad-0101-85f3-a43e45ae989a",
            },
            "ref": null,
            "rendered": "mock Two",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
