// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Loading renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Loading />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Spin
        id="loader"
        prefixCls="ant-spin"
        size="large"
        spinning={true}
        tip="Loading..."
        wrapperClassName=""
      />,
      "className": "loading-screen",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "id": "loader",
        "prefixCls": "ant-spin",
        "size": "large",
        "spinning": true,
        "tip": "Loading...",
        "wrapperClassName": "",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Spin
          id="loader"
          prefixCls="ant-spin"
          size="large"
          spinning={true}
          tip="Loading..."
          wrapperClassName=""
        />,
        "className": "loading-screen",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "id": "loader",
          "prefixCls": "ant-spin",
          "size": "large",
          "spinning": true,
          "tip": "Loading...",
          "wrapperClassName": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
