// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddIncidentFollowUpForm renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddIncidentFollowUpForm
    handleSubmit={[MockFunction]}
    initialValues={Object {}}
    uploadedFiles={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Form
        colon={true}
        hideRequiredMark={false}
        layout="vertical"
        onSubmit={[Function]}
      >
        <Row
          gutter={48}
        >
          <Col>
            <h4>
              Follow-up Information
            </h4>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="followup_inspection"
                label="Was there a follow-up inspection?"
                name="followup_inspection"
                onChange={undefined}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={undefined}
                id="followup_investigation_type_code"
                label="Was it escalated to EMPR investigation?*"
                name="followup_investigation_type_code"
                placeholder="Please choose one"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FieldArray
              component={[Function]}
              id="recommendations"
              name="recommendations"
            />
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={undefined}
                id="status_code"
                label="Incident status?*"
                name="status_code"
              />
            </FormItem>
            <h4>
              Final Investigation Report Documents
            </h4>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="InitialIncidentFileUpload"
                name="InitialIncidentFileUpload"
                onFileLoad={[Function]}
                uploadUrl="/mines/undefined/incidents/documents"
              />
            </FormItem>
          </Col>
        </Row>
      </Form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Row
          gutter={48}
        >
          <Col>
            <h4>
              Follow-up Information
            </h4>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="followup_inspection"
                label="Was there a follow-up inspection?"
                name="followup_inspection"
                onChange={undefined}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={undefined}
                id="followup_investigation_type_code"
                label="Was it escalated to EMPR investigation?*"
                name="followup_investigation_type_code"
                placeholder="Please choose one"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FieldArray
              component={[Function]}
              id="recommendations"
              name="recommendations"
            />
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={undefined}
                id="status_code"
                label="Incident status?*"
                name="status_code"
              />
            </FormItem>
            <h4>
              Final Investigation Report Documents
            </h4>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="InitialIncidentFileUpload"
                name="InitialIncidentFileUpload"
                onFileLoad={[Function]}
                uploadUrl="/mines/undefined/incidents/documents"
              />
            </FormItem>
          </Col>
        </Row>,
        "colon": true,
        "hideRequiredMark": false,
        "layout": "vertical",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Col>
            <h4>
              Follow-up Information
            </h4>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="followup_inspection"
                label="Was there a follow-up inspection?"
                name="followup_inspection"
                onChange={undefined}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={undefined}
                id="followup_investigation_type_code"
                label="Was it escalated to EMPR investigation?*"
                name="followup_investigation_type_code"
                placeholder="Please choose one"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FieldArray
              component={[Function]}
              id="recommendations"
              name="recommendations"
            />
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={undefined}
                id="status_code"
                label="Incident status?*"
                name="status_code"
              />
            </FormItem>
            <h4>
              Final Investigation Report Documents
            </h4>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="InitialIncidentFileUpload"
                name="InitialIncidentFileUpload"
                onFileLoad={[Function]}
                uploadUrl="/mines/undefined/incidents/documents"
              />
            </FormItem>
          </Col>,
          "gutter": 48,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <h4>
                Follow-up Information
              </h4>,
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="followup_inspection"
                  label="Was there a follow-up inspection?"
                  name="followup_inspection"
                  onChange={undefined}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>,
              undefined,
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={undefined}
                  id="followup_investigation_type_code"
                  label="Was it escalated to EMPR investigation?*"
                  name="followup_investigation_type_code"
                  placeholder="Please choose one"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>,
              <FieldArray
                component={[Function]}
                id="recommendations"
                name="recommendations"
              />,
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={undefined}
                  id="status_code"
                  label="Incident status?*"
                  name="status_code"
                />
              </FormItem>,
              <h4>
                Final Investigation Report Documents
              </h4>,
              false,
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="InitialIncidentFileUpload"
                  name="InitialIncidentFileUpload"
                  onFileLoad={[Function]}
                  uploadUrl="/mines/undefined/incidents/documents"
                />
              </FormItem>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Follow-up Information",
              },
              "ref": null,
              "rendered": "Follow-up Information",
              "type": "h4",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="followup_inspection"
                  label="Was there a follow-up inspection?"
                  name="followup_inspection"
                  onChange={undefined}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "followup_inspection",
                  "label": "Was there a follow-up inspection?",
                  "name": "followup_inspection",
                  "onChange": undefined,
                  "validate": Array [
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  data={undefined}
                  id="followup_investigation_type_code"
                  label="Was it escalated to EMPR investigation?*"
                  name="followup_investigation_type_code"
                  placeholder="Please choose one"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "data": undefined,
                  "id": "followup_investigation_type_code",
                  "label": "Was it escalated to EMPR investigation?*",
                  "name": "followup_investigation_type_code",
                  "placeholder": "Please choose one",
                  "validate": Array [
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "recommendations",
                "name": "recommendations",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  data={undefined}
                  id="status_code"
                  label="Incident status?*"
                  name="status_code"
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "data": undefined,
                  "id": "status_code",
                  "label": "Incident status?*",
                  "name": "status_code",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Final Investigation Report Documents",
              },
              "ref": null,
              "rendered": "Final Investigation Report Documents",
              "type": "h4",
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="InitialIncidentFileUpload"
                  name="InitialIncidentFileUpload"
                  onFileLoad={[Function]}
                  uploadUrl="/mines/undefined/incidents/documents"
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "InitialIncidentFileUpload",
                  "name": "InitialIncidentFileUpload",
                  "onFileLoad": [Function],
                  "uploadUrl": "/mines/undefined/incidents/documents",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Form
          colon={true}
          hideRequiredMark={false}
          layout="vertical"
          onSubmit={[Function]}
        >
          <Row
            gutter={48}
          >
            <Col>
              <h4>
                Follow-up Information
              </h4>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="followup_inspection"
                  label="Was there a follow-up inspection?"
                  name="followup_inspection"
                  onChange={undefined}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={undefined}
                  id="followup_investigation_type_code"
                  label="Was it escalated to EMPR investigation?*"
                  name="followup_investigation_type_code"
                  placeholder="Please choose one"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FieldArray
                component={[Function]}
                id="recommendations"
                name="recommendations"
              />
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={undefined}
                  id="status_code"
                  label="Incident status?*"
                  name="status_code"
                />
              </FormItem>
              <h4>
                Final Investigation Report Documents
              </h4>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="InitialIncidentFileUpload"
                  name="InitialIncidentFileUpload"
                  onFileLoad={[Function]}
                  uploadUrl="/mines/undefined/incidents/documents"
                />
              </FormItem>
            </Col>
          </Row>
        </Form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Row
            gutter={48}
          >
            <Col>
              <h4>
                Follow-up Information
              </h4>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="followup_inspection"
                  label="Was there a follow-up inspection?"
                  name="followup_inspection"
                  onChange={undefined}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={undefined}
                  id="followup_investigation_type_code"
                  label="Was it escalated to EMPR investigation?*"
                  name="followup_investigation_type_code"
                  placeholder="Please choose one"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FieldArray
                component={[Function]}
                id="recommendations"
                name="recommendations"
              />
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={undefined}
                  id="status_code"
                  label="Incident status?*"
                  name="status_code"
                />
              </FormItem>
              <h4>
                Final Investigation Report Documents
              </h4>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="InitialIncidentFileUpload"
                  name="InitialIncidentFileUpload"
                  onFileLoad={[Function]}
                  uploadUrl="/mines/undefined/incidents/documents"
                />
              </FormItem>
            </Col>
          </Row>,
          "colon": true,
          "hideRequiredMark": false,
          "layout": "vertical",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col>
              <h4>
                Follow-up Information
              </h4>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="followup_inspection"
                  label="Was there a follow-up inspection?"
                  name="followup_inspection"
                  onChange={undefined}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={undefined}
                  id="followup_investigation_type_code"
                  label="Was it escalated to EMPR investigation?*"
                  name="followup_investigation_type_code"
                  placeholder="Please choose one"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FieldArray
                component={[Function]}
                id="recommendations"
                name="recommendations"
              />
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={undefined}
                  id="status_code"
                  label="Incident status?*"
                  name="status_code"
                />
              </FormItem>
              <h4>
                Final Investigation Report Documents
              </h4>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="InitialIncidentFileUpload"
                  name="InitialIncidentFileUpload"
                  onFileLoad={[Function]}
                  uploadUrl="/mines/undefined/incidents/documents"
                />
              </FormItem>
            </Col>,
            "gutter": 48,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <h4>
                  Follow-up Information
                </h4>,
                <FormItem
                  hasFeedback={false}
                >
                  <Field
                    component={[Function]}
                    id="followup_inspection"
                    label="Was there a follow-up inspection?"
                    name="followup_inspection"
                    onChange={undefined}
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                undefined,
                <FormItem
                  hasFeedback={false}
                >
                  <Field
                    component={[Function]}
                    data={undefined}
                    id="followup_investigation_type_code"
                    label="Was it escalated to EMPR investigation?*"
                    name="followup_investigation_type_code"
                    placeholder="Please choose one"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                <FieldArray
                  component={[Function]}
                  id="recommendations"
                  name="recommendations"
                />,
                <FormItem
                  hasFeedback={false}
                >
                  <Field
                    component={[Function]}
                    data={undefined}
                    id="status_code"
                    label="Incident status?*"
                    name="status_code"
                  />
                </FormItem>,
                <h4>
                  Final Investigation Report Documents
                </h4>,
                false,
                <FormItem
                  hasFeedback={false}
                >
                  <Field
                    component={[Function]}
                    id="InitialIncidentFileUpload"
                    name="InitialIncidentFileUpload"
                    onFileLoad={[Function]}
                    uploadUrl="/mines/undefined/incidents/documents"
                  />
                </FormItem>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Follow-up Information",
                },
                "ref": null,
                "rendered": "Follow-up Information",
                "type": "h4",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="followup_inspection"
                    label="Was there a follow-up inspection?"
                    name="followup_inspection"
                    onChange={undefined}
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />,
                  "hasFeedback": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "followup_inspection",
                    "label": "Was there a follow-up inspection?",
                    "name": "followup_inspection",
                    "onChange": undefined,
                    "validate": Array [
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    data={undefined}
                    id="followup_investigation_type_code"
                    label="Was it escalated to EMPR investigation?*"
                    name="followup_investigation_type_code"
                    placeholder="Please choose one"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />,
                  "hasFeedback": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "data": undefined,
                    "id": "followup_investigation_type_code",
                    "label": "Was it escalated to EMPR investigation?*",
                    "name": "followup_investigation_type_code",
                    "placeholder": "Please choose one",
                    "validate": Array [
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "recommendations",
                  "name": "recommendations",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    data={undefined}
                    id="status_code"
                    label="Incident status?*"
                    name="status_code"
                  />,
                  "hasFeedback": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "data": undefined,
                    "id": "status_code",
                    "label": "Incident status?*",
                    "name": "status_code",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Final Investigation Report Documents",
                },
                "ref": null,
                "rendered": "Final Investigation Report Documents",
                "type": "h4",
              },
              false,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="InitialIncidentFileUpload"
                    name="InitialIncidentFileUpload"
                    onFileLoad={[Function]}
                    uploadUrl="/mines/undefined/incidents/documents"
                  />,
                  "hasFeedback": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "InitialIncidentFileUpload",
                    "name": "InitialIncidentFileUpload",
                    "onFileLoad": [Function],
                    "uploadUrl": "/mines/undefined/incidents/documents",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
