// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddVarianceForm renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddVarianceForm
    closeModal={[MockFunction]}
    complianceCodes={
      Array [
        Object {
          "label": "2.3.7 - Spills",
          "value": 305,
        },
        Object {
          "label": "2.3.8 - Flammable Waste Storage",
          "value": 306,
        },
      ]
    }
    handleSubmit={
      [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
      }
    }
    mineGuid="48593"
    mineNo="B03124"
    onSubmit={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {},
          ],
        ],
      }
    }
    submitting={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Row
          gutter={48}
        >
          <Col
            className="border--right--layout"
            md={12}
            sm={24}
          >
            <FormItem
              colon={true}
              hasFeedback={false}
              prefixCls="ant-form"
            >
              <Field
                component={[Function]}
                data={
                  Array [
                    Object {
                      "label": "2.3.7 - Spills",
                      "value": 305,
                    },
                    Object {
                      "label": "2.3.8 - Flammable Waste Storage",
                      "value": 306,
                    },
                  ]
                }
                id="compliance_article_id"
                label="Part of Code*"
                name="compliance_article_id"
                placeholder="Select a part of the code"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FormItem
              colon={true}
              hasFeedback={false}
              prefixCls="ant-form"
            >
              <Field
                component={[Function]}
                id="received_date"
                label="Received date*"
                name="received_date"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FormItem
              colon={true}
              hasFeedback={false}
              prefixCls="ant-form"
            >
              <Field
                component={[Function]}
                id="issue_date"
                label="Issue date*"
                name="issue_date"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FormItem
              colon={true}
              hasFeedback={false}
              prefixCls="ant-form"
            >
              <Field
                component={[Function]}
                id="expiry_date"
                label="Expiry date*"
                name="expiry_date"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
            <FormItem
              colon={true}
              hasFeedback={false}
              prefixCls="ant-form"
            >
              <Field
                component={[Function]}
                id="note"
                label="Description"
                name="note"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
          <Col
            md={12}
            sm={24}
          >
            <FormItem
              colon={true}
              hasFeedback={false}
              label="Upload files*"
              prefixCls="ant-form"
            >
              <Field
                component={[Function]}
                id="VarianceDocumentFileUpload"
                mineGuid="48593"
                name="VarianceDocumentFileUpload"
                onFileLoad={[Function]}
                onRemoveFile={[Function]}
              />
            </FormItem>
          </Col>
        </Row>,
        <div
          className="right center-mobile"
        >
          <Popconfirm
            cancelText="No"
            icon={
              <Icon
                theme="filled"
                type="exclamation-circle"
              />
            }
            okText="Yes"
            okType="primary"
            onConfirm={[MockFunction]}
            placement="topRight"
            prefixCls="ant-popover"
            title="Are you sure you want to cancel?"
            transitionName="zoom-big"
            trigger="click"
          >
            <Button
              block={false}
              className="full-mobile"
              ghost={false}
              loading={false}
              prefixCls="ant-btn"
              type="secondary"
            >
              Cancel
            </Button>
          </Popconfirm>
          <Button
            block={false}
            className="full-mobile"
            disabled={false}
            ghost={false}
            htmlType="submit"
            loading={false}
            prefixCls="ant-btn"
            type="primary"
          >
            Add Approved Variance
          </Button>
        </div>,
      ],
      "hideRequiredMark": false,
      "layout": "vertical",
      "onSubmit": [Function],
      "prefixCls": "ant-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Col
              className="border--right--layout"
              md={12}
              sm={24}
            >
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  data={
                    Array [
                      Object {
                        "label": "2.3.7 - Spills",
                        "value": 305,
                      },
                      Object {
                        "label": "2.3.8 - Flammable Waste Storage",
                        "value": 306,
                      },
                    ]
                  }
                  id="compliance_article_id"
                  label="Part of Code*"
                  name="compliance_article_id"
                  placeholder="Select a part of the code"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="received_date"
                  label="Received date*"
                  name="received_date"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="issue_date"
                  label="Issue date*"
                  name="issue_date"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="expiry_date"
                  label="Expiry date*"
                  name="expiry_date"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="note"
                  label="Description"
                  name="note"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
            <Col
              md={12}
              sm={24}
            >
              <FormItem
                colon={true}
                hasFeedback={false}
                label="Upload files*"
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="VarianceDocumentFileUpload"
                  mineGuid="48593"
                  name="VarianceDocumentFileUpload"
                  onFileLoad={[Function]}
                  onRemoveFile={[Function]}
                />
              </FormItem>
            </Col>,
          ],
          "gutter": 48,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    data={
                      Array [
                        Object {
                          "label": "2.3.7 - Spills",
                          "value": 305,
                        },
                        Object {
                          "label": "2.3.8 - Flammable Waste Storage",
                          "value": 306,
                        },
                      ]
                    }
                    id="compliance_article_id"
                    label="Part of Code*"
                    name="compliance_article_id"
                    placeholder="Select a part of the code"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="received_date"
                    label="Received date*"
                    name="received_date"
                    validate={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="issue_date"
                    label="Issue date*"
                    name="issue_date"
                    validate={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="expiry_date"
                    label="Expiry date*"
                    name="expiry_date"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="note"
                    label="Description"
                    name="note"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
              ],
              "className": "border--right--layout",
              "md": 12,
              "sm": 24,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    data={
                      Array [
                        Object {
                          "label": "2.3.7 - Spills",
                          "value": 305,
                        },
                        Object {
                          "label": "2.3.8 - Flammable Waste Storage",
                          "value": 306,
                        },
                      ]
                    }
                    id="compliance_article_id"
                    label="Part of Code*"
                    name="compliance_article_id"
                    placeholder="Select a part of the code"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />,
                  "colon": true,
                  "hasFeedback": false,
                  "prefixCls": "ant-form",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "data": Array [
                      Object {
                        "label": "2.3.7 - Spills",
                        "value": 305,
                      },
                      Object {
                        "label": "2.3.8 - Flammable Waste Storage",
                        "value": 306,
                      },
                    ],
                    "id": "compliance_article_id",
                    "label": "Part of Code*",
                    "name": "compliance_article_id",
                    "placeholder": "Select a part of the code",
                    "validate": Array [
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="received_date"
                    label="Received date*"
                    name="received_date"
                    validate={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                  />,
                  "colon": true,
                  "hasFeedback": false,
                  "prefixCls": "ant-form",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "received_date",
                    "label": "Received date*",
                    "name": "received_date",
                    "validate": Array [
                      [Function],
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="issue_date"
                    label="Issue date*"
                    name="issue_date"
                    validate={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                  />,
                  "colon": true,
                  "hasFeedback": false,
                  "prefixCls": "ant-form",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "issue_date",
                    "label": "Issue date*",
                    "name": "issue_date",
                    "validate": Array [
                      [Function],
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="expiry_date"
                    label="Expiry date*"
                    name="expiry_date"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />,
                  "colon": true,
                  "hasFeedback": false,
                  "prefixCls": "ant-form",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "expiry_date",
                    "label": "Expiry date*",
                    "name": "expiry_date",
                    "validate": Array [
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="note"
                    label="Description"
                    name="note"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />,
                  "colon": true,
                  "hasFeedback": false,
                  "prefixCls": "ant-form",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "note",
                    "label": "Description",
                    "name": "note",
                    "validate": Array [
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                colon={true}
                hasFeedback={false}
                label="Upload files*"
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="VarianceDocumentFileUpload"
                  mineGuid="48593"
                  name="VarianceDocumentFileUpload"
                  onFileLoad={[Function]}
                  onRemoveFile={[Function]}
                />
              </FormItem>,
              "md": 12,
              "sm": 24,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="VarianceDocumentFileUpload"
                  mineGuid="48593"
                  name="VarianceDocumentFileUpload"
                  onFileLoad={[Function]}
                  onRemoveFile={[Function]}
                />,
                "colon": true,
                "hasFeedback": false,
                "label": "Upload files*",
                "prefixCls": "ant-form",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "VarianceDocumentFileUpload",
                  "mineGuid": "48593",
                  "name": "VarianceDocumentFileUpload",
                  "onFileLoad": [Function],
                  "onRemoveFile": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Popconfirm
              cancelText="No"
              icon={
                <Icon
                  theme="filled"
                  type="exclamation-circle"
                />
              }
              okText="Yes"
              okType="primary"
              onConfirm={[MockFunction]}
              placement="topRight"
              prefixCls="ant-popover"
              title="Are you sure you want to cancel?"
              transitionName="zoom-big"
              trigger="click"
            >
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                loading={false}
                prefixCls="ant-btn"
                type="secondary"
              >
                Cancel
              </Button>
            </Popconfirm>,
            <Button
              block={false}
              className="full-mobile"
              disabled={false}
              ghost={false}
              htmlType="submit"
              loading={false}
              prefixCls="ant-btn"
              type="primary"
            >
              Add Approved Variance
            </Button>,
          ],
          "className": "right center-mobile",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "cancelText": "No",
              "children": <Button
                block={false}
                className="full-mobile"
                ghost={false}
                loading={false}
                prefixCls="ant-btn"
                type="secondary"
              >
                Cancel
              </Button>,
              "icon": <Icon
                theme="filled"
                type="exclamation-circle"
              />,
              "okText": "Yes",
              "okType": "primary",
              "onConfirm": [MockFunction],
              "placement": "topRight",
              "prefixCls": "ant-popover",
              "title": "Are you sure you want to cancel?",
              "transitionName": "zoom-big",
              "trigger": "click",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "Cancel",
                "className": "full-mobile",
                "ghost": false,
                "loading": false,
                "prefixCls": "ant-btn",
                "type": "secondary",
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": "Add Approved Variance",
              "className": "full-mobile",
              "disabled": false,
              "ghost": false,
              "htmlType": "submit",
              "loading": false,
              "prefixCls": "ant-btn",
              "type": "primary",
            },
            "ref": null,
            "rendered": "Add Approved Variance",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Row
            gutter={48}
          >
            <Col
              className="border--right--layout"
              md={12}
              sm={24}
            >
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  data={
                    Array [
                      Object {
                        "label": "2.3.7 - Spills",
                        "value": 305,
                      },
                      Object {
                        "label": "2.3.8 - Flammable Waste Storage",
                        "value": 306,
                      },
                    ]
                  }
                  id="compliance_article_id"
                  label="Part of Code*"
                  name="compliance_article_id"
                  placeholder="Select a part of the code"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="received_date"
                  label="Received date*"
                  name="received_date"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="issue_date"
                  label="Issue date*"
                  name="issue_date"
                  validate={
                    Array [
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="expiry_date"
                  label="Expiry date*"
                  name="expiry_date"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="note"
                  label="Description"
                  name="note"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
            <Col
              md={12}
              sm={24}
            >
              <FormItem
                colon={true}
                hasFeedback={false}
                label="Upload files*"
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="VarianceDocumentFileUpload"
                  mineGuid="48593"
                  name="VarianceDocumentFileUpload"
                  onFileLoad={[Function]}
                  onRemoveFile={[Function]}
                />
              </FormItem>
            </Col>
          </Row>,
          <div
            className="right center-mobile"
          >
            <Popconfirm
              cancelText="No"
              icon={
                <Icon
                  theme="filled"
                  type="exclamation-circle"
                />
              }
              okText="Yes"
              okType="primary"
              onConfirm={[MockFunction]}
              placement="topRight"
              prefixCls="ant-popover"
              title="Are you sure you want to cancel?"
              transitionName="zoom-big"
              trigger="click"
            >
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                loading={false}
                prefixCls="ant-btn"
                type="secondary"
              >
                Cancel
              </Button>
            </Popconfirm>
            <Button
              block={false}
              className="full-mobile"
              disabled={false}
              ghost={false}
              htmlType="submit"
              loading={false}
              prefixCls="ant-btn"
              type="primary"
            >
              Add Approved Variance
            </Button>
          </div>,
        ],
        "hideRequiredMark": false,
        "layout": "vertical",
        "onSubmit": [Function],
        "prefixCls": "ant-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Col
                className="border--right--layout"
                md={12}
                sm={24}
              >
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    data={
                      Array [
                        Object {
                          "label": "2.3.7 - Spills",
                          "value": 305,
                        },
                        Object {
                          "label": "2.3.8 - Flammable Waste Storage",
                          "value": 306,
                        },
                      ]
                    }
                    id="compliance_article_id"
                    label="Part of Code*"
                    name="compliance_article_id"
                    placeholder="Select a part of the code"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="received_date"
                    label="Received date*"
                    name="received_date"
                    validate={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                  />
                </FormItem>
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="issue_date"
                    label="Issue date*"
                    name="issue_date"
                    validate={
                      Array [
                        [Function],
                        [Function],
                      ]
                    }
                  />
                </FormItem>
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="expiry_date"
                    label="Expiry date*"
                    name="expiry_date"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="note"
                    label="Description"
                    name="note"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>
              </Col>,
              <Col
                md={12}
                sm={24}
              >
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  label="Upload files*"
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="VarianceDocumentFileUpload"
                    mineGuid="48593"
                    name="VarianceDocumentFileUpload"
                    onFileLoad={[Function]}
                    onRemoveFile={[Function]}
                  />
                </FormItem>
              </Col>,
            ],
            "gutter": 48,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <FormItem
                    colon={true}
                    hasFeedback={false}
                    prefixCls="ant-form"
                  >
                    <Field
                      component={[Function]}
                      data={
                        Array [
                          Object {
                            "label": "2.3.7 - Spills",
                            "value": 305,
                          },
                          Object {
                            "label": "2.3.8 - Flammable Waste Storage",
                            "value": 306,
                          },
                        ]
                      }
                      id="compliance_article_id"
                      label="Part of Code*"
                      name="compliance_article_id"
                      placeholder="Select a part of the code"
                      validate={
                        Array [
                          [Function],
                        ]
                      }
                    />
                  </FormItem>,
                  <FormItem
                    colon={true}
                    hasFeedback={false}
                    prefixCls="ant-form"
                  >
                    <Field
                      component={[Function]}
                      id="received_date"
                      label="Received date*"
                      name="received_date"
                      validate={
                        Array [
                          [Function],
                          [Function],
                        ]
                      }
                    />
                  </FormItem>,
                  <FormItem
                    colon={true}
                    hasFeedback={false}
                    prefixCls="ant-form"
                  >
                    <Field
                      component={[Function]}
                      id="issue_date"
                      label="Issue date*"
                      name="issue_date"
                      validate={
                        Array [
                          [Function],
                          [Function],
                        ]
                      }
                    />
                  </FormItem>,
                  <FormItem
                    colon={true}
                    hasFeedback={false}
                    prefixCls="ant-form"
                  >
                    <Field
                      component={[Function]}
                      id="expiry_date"
                      label="Expiry date*"
                      name="expiry_date"
                      validate={
                        Array [
                          [Function],
                        ]
                      }
                    />
                  </FormItem>,
                  <FormItem
                    colon={true}
                    hasFeedback={false}
                    prefixCls="ant-form"
                  >
                    <Field
                      component={[Function]}
                      id="note"
                      label="Description"
                      name="note"
                      validate={
                        Array [
                          [Function],
                        ]
                      }
                    />
                  </FormItem>,
                ],
                "className": "border--right--layout",
                "md": 12,
                "sm": 24,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      data={
                        Array [
                          Object {
                            "label": "2.3.7 - Spills",
                            "value": 305,
                          },
                          Object {
                            "label": "2.3.8 - Flammable Waste Storage",
                            "value": 306,
                          },
                        ]
                      }
                      id="compliance_article_id"
                      label="Part of Code*"
                      name="compliance_article_id"
                      placeholder="Select a part of the code"
                      validate={
                        Array [
                          [Function],
                        ]
                      }
                    />,
                    "colon": true,
                    "hasFeedback": false,
                    "prefixCls": "ant-form",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "data": Array [
                        Object {
                          "label": "2.3.7 - Spills",
                          "value": 305,
                        },
                        Object {
                          "label": "2.3.8 - Flammable Waste Storage",
                          "value": 306,
                        },
                      ],
                      "id": "compliance_article_id",
                      "label": "Part of Code*",
                      "name": "compliance_article_id",
                      "placeholder": "Select a part of the code",
                      "validate": Array [
                        [Function],
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      id="received_date"
                      label="Received date*"
                      name="received_date"
                      validate={
                        Array [
                          [Function],
                          [Function],
                        ]
                      }
                    />,
                    "colon": true,
                    "hasFeedback": false,
                    "prefixCls": "ant-form",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "id": "received_date",
                      "label": "Received date*",
                      "name": "received_date",
                      "validate": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      id="issue_date"
                      label="Issue date*"
                      name="issue_date"
                      validate={
                        Array [
                          [Function],
                          [Function],
                        ]
                      }
                    />,
                    "colon": true,
                    "hasFeedback": false,
                    "prefixCls": "ant-form",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "id": "issue_date",
                      "label": "Issue date*",
                      "name": "issue_date",
                      "validate": Array [
                        [Function],
                        [Function],
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      id="expiry_date"
                      label="Expiry date*"
                      name="expiry_date"
                      validate={
                        Array [
                          [Function],
                        ]
                      }
                    />,
                    "colon": true,
                    "hasFeedback": false,
                    "prefixCls": "ant-form",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "id": "expiry_date",
                      "label": "Expiry date*",
                      "name": "expiry_date",
                      "validate": Array [
                        [Function],
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Field
                      component={[Function]}
                      id="note"
                      label="Description"
                      name="note"
                      validate={
                        Array [
                          [Function],
                        ]
                      }
                    />,
                    "colon": true,
                    "hasFeedback": false,
                    "prefixCls": "ant-form",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "id": "note",
                      "label": "Description",
                      "name": "note",
                      "validate": Array [
                        [Function],
                      ],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormItem
                  colon={true}
                  hasFeedback={false}
                  label="Upload files*"
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="VarianceDocumentFileUpload"
                    mineGuid="48593"
                    name="VarianceDocumentFileUpload"
                    onFileLoad={[Function]}
                    onRemoveFile={[Function]}
                  />
                </FormItem>,
                "md": 12,
                "sm": 24,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="VarianceDocumentFileUpload"
                    mineGuid="48593"
                    name="VarianceDocumentFileUpload"
                    onFileLoad={[Function]}
                    onRemoveFile={[Function]}
                  />,
                  "colon": true,
                  "hasFeedback": false,
                  "label": "Upload files*",
                  "prefixCls": "ant-form",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "VarianceDocumentFileUpload",
                    "mineGuid": "48593",
                    "name": "VarianceDocumentFileUpload",
                    "onFileLoad": [Function],
                    "onRemoveFile": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Popconfirm
                cancelText="No"
                icon={
                  <Icon
                    theme="filled"
                    type="exclamation-circle"
                  />
                }
                okText="Yes"
                okType="primary"
                onConfirm={[MockFunction]}
                placement="topRight"
                prefixCls="ant-popover"
                title="Are you sure you want to cancel?"
                transitionName="zoom-big"
                trigger="click"
              >
                <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  loading={false}
                  prefixCls="ant-btn"
                  type="secondary"
                >
                  Cancel
                </Button>
              </Popconfirm>,
              <Button
                block={false}
                className="full-mobile"
                disabled={false}
                ghost={false}
                htmlType="submit"
                loading={false}
                prefixCls="ant-btn"
                type="primary"
              >
                Add Approved Variance
              </Button>,
            ],
            "className": "right center-mobile",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "cancelText": "No",
                "children": <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  loading={false}
                  prefixCls="ant-btn"
                  type="secondary"
                >
                  Cancel
                </Button>,
                "icon": <Icon
                  theme="filled"
                  type="exclamation-circle"
                />,
                "okText": "Yes",
                "okType": "primary",
                "onConfirm": [MockFunction],
                "placement": "topRight",
                "prefixCls": "ant-popover",
                "title": "Are you sure you want to cancel?",
                "transitionName": "zoom-big",
                "trigger": "click",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "block": false,
                  "children": "Cancel",
                  "className": "full-mobile",
                  "ghost": false,
                  "loading": false,
                  "prefixCls": "ant-btn",
                  "type": "secondary",
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "Add Approved Variance",
                "className": "full-mobile",
                "disabled": false,
                "ghost": false,
                "htmlType": "submit",
                "loading": false,
                "prefixCls": "ant-btn",
                "type": "primary",
              },
              "ref": null,
              "rendered": "Add Approved Variance",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
