// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdvancedContactSearch form renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AdvancedContactSearchForm
    closeModal={[MockFunction]}
    handleNameFieldReset={[MockFunction]}
    handleSearch={[MockFunction]}
    handleSubmit={[MockFunction]}
    initialValues={
      Object {
        "type": "PER",
      }
    }
    isAdvanceSearch={false}
    partyTypeOptions={
      Object {
        "label": "Person",
        "value": "PER",
      }
    }
    relationshipTypes={
      Array [
        Object {
          "label": "Person",
          "value": "PER",
        },
      ]
    }
    reset={[MockFunction]}
    submitting={false}
    title="mockTitle"
    toggleAdvancedSearch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Row
          gutter={6}
        >
          <Col
            md={6}
            xs={6}
          >
            <Field
              component={[Function]}
              data={
                Object {
                  "label": "Person",
                  "value": "PER",
                }
              }
              id="type"
              name="type"
              onChange={[Function]}
            />
          </Col>
          <Col
            md={9}
            xs={9}
          >
            <Field
              component={[Function]}
              id="first_name"
              name="first_name"
              placeholder="First Name"
            />
          </Col>
          <Col
            md={9}
            xs={9}
          >
            <Field
              component={[Function]}
              id="last_name"
              name="last_name"
              placeholder="Surname"
            />
          </Col>
        </Row>,
        false,
        <div
          className="left center-mobile"
        >
          <Button
            block={false}
            className="btn--dropdown"
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[MockFunction]}
          >
            Expand Filters
            <Icon
              type="down"
            />
          </Button>
        </div>,
        <div
          className="right center-mobile"
        >
          <Button
            block={false}
            className="full-mobile"
            ghost={false}
            htmlType="reset"
            loading={false}
            type="secondary"
          >
            Clear Filters
          </Button>
          <Button
            block={false}
            className="full-mobile"
            ghost={false}
            htmlType="submit"
            loading={false}
            type="primary"
          >
            Apply Filters
          </Button>
        </div>,
      ],
      "colon": true,
      "hideRequiredMark": false,
      "layout": "vertical",
      "onReset": [Function],
      "onSubmit": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Col
              md={6}
              xs={6}
            >
              <Field
                component={[Function]}
                data={
                  Object {
                    "label": "Person",
                    "value": "PER",
                  }
                }
                id="type"
                name="type"
                onChange={[Function]}
              />
            </Col>,
            false,
            <Col
              md={9}
              xs={9}
            >
              <Field
                component={[Function]}
                id="first_name"
                name="first_name"
                placeholder="First Name"
              />
            </Col>,
            <Col
              md={9}
              xs={9}
            >
              <Field
                component={[Function]}
                id="last_name"
                name="last_name"
                placeholder="Surname"
              />
            </Col>,
          ],
          "gutter": 6,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Field
                component={[Function]}
                data={
                  Object {
                    "label": "Person",
                    "value": "PER",
                  }
                }
                id="type"
                name="type"
                onChange={[Function]}
              />,
              "md": 6,
              "xs": 6,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "data": Object {
                  "label": "Person",
                  "value": "PER",
                },
                "id": "type",
                "name": "type",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Field
                component={[Function]}
                id="first_name"
                name="first_name"
                placeholder="First Name"
              />,
              "md": 9,
              "xs": 9,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "first_name",
                "name": "first_name",
                "placeholder": "First Name",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Field
                component={[Function]}
                id="last_name"
                name="last_name"
                placeholder="Surname"
              />,
              "md": 9,
              "xs": 9,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "last_name",
                "name": "last_name",
                "placeholder": "Surname",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Button
            block={false}
            className="btn--dropdown"
            ghost={false}
            htmlType="button"
            loading={false}
            onClick={[MockFunction]}
          >
            Expand Filters
            <Icon
              type="down"
            />
          </Button>,
          "className": "left center-mobile",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": false,
            "children": Array [
              "Expand Filters",
              <Icon
                type="down"
              />,
            ],
            "className": "btn--dropdown",
            "ghost": false,
            "htmlType": "button",
            "loading": false,
            "onClick": [MockFunction],
          },
          "ref": null,
          "rendered": Array [
            "Expand Filters",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "type": "down",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Button
              block={false}
              className="full-mobile"
              ghost={false}
              htmlType="reset"
              loading={false}
              type="secondary"
            >
              Clear Filters
            </Button>,
            <Button
              block={false}
              className="full-mobile"
              ghost={false}
              htmlType="submit"
              loading={false}
              type="primary"
            >
              Apply Filters
            </Button>,
          ],
          "className": "right center-mobile",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": "Clear Filters",
              "className": "full-mobile",
              "ghost": false,
              "htmlType": "reset",
              "loading": false,
              "type": "secondary",
            },
            "ref": null,
            "rendered": "Clear Filters",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": "Apply Filters",
              "className": "full-mobile",
              "ghost": false,
              "htmlType": "submit",
              "loading": false,
              "type": "primary",
            },
            "ref": null,
            "rendered": "Apply Filters",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Row
            gutter={6}
          >
            <Col
              md={6}
              xs={6}
            >
              <Field
                component={[Function]}
                data={
                  Object {
                    "label": "Person",
                    "value": "PER",
                  }
                }
                id="type"
                name="type"
                onChange={[Function]}
              />
            </Col>
            <Col
              md={9}
              xs={9}
            >
              <Field
                component={[Function]}
                id="first_name"
                name="first_name"
                placeholder="First Name"
              />
            </Col>
            <Col
              md={9}
              xs={9}
            >
              <Field
                component={[Function]}
                id="last_name"
                name="last_name"
                placeholder="Surname"
              />
            </Col>
          </Row>,
          false,
          <div
            className="left center-mobile"
          >
            <Button
              block={false}
              className="btn--dropdown"
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[MockFunction]}
            >
              Expand Filters
              <Icon
                type="down"
              />
            </Button>
          </div>,
          <div
            className="right center-mobile"
          >
            <Button
              block={false}
              className="full-mobile"
              ghost={false}
              htmlType="reset"
              loading={false}
              type="secondary"
            >
              Clear Filters
            </Button>
            <Button
              block={false}
              className="full-mobile"
              ghost={false}
              htmlType="submit"
              loading={false}
              type="primary"
            >
              Apply Filters
            </Button>
          </div>,
        ],
        "colon": true,
        "hideRequiredMark": false,
        "layout": "vertical",
        "onReset": [Function],
        "onSubmit": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Col
                md={6}
                xs={6}
              >
                <Field
                  component={[Function]}
                  data={
                    Object {
                      "label": "Person",
                      "value": "PER",
                    }
                  }
                  id="type"
                  name="type"
                  onChange={[Function]}
                />
              </Col>,
              false,
              <Col
                md={9}
                xs={9}
              >
                <Field
                  component={[Function]}
                  id="first_name"
                  name="first_name"
                  placeholder="First Name"
                />
              </Col>,
              <Col
                md={9}
                xs={9}
              >
                <Field
                  component={[Function]}
                  id="last_name"
                  name="last_name"
                  placeholder="Surname"
                />
              </Col>,
            ],
            "gutter": 6,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  data={
                    Object {
                      "label": "Person",
                      "value": "PER",
                    }
                  }
                  id="type"
                  name="type"
                  onChange={[Function]}
                />,
                "md": 6,
                "xs": 6,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "data": Object {
                    "label": "Person",
                    "value": "PER",
                  },
                  "id": "type",
                  "name": "type",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="first_name"
                  name="first_name"
                  placeholder="First Name"
                />,
                "md": 9,
                "xs": 9,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "first_name",
                  "name": "first_name",
                  "placeholder": "First Name",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="last_name"
                  name="last_name"
                  placeholder="Surname"
                />,
                "md": 9,
                "xs": 9,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "last_name",
                  "name": "last_name",
                  "placeholder": "Surname",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Button
              block={false}
              className="btn--dropdown"
              ghost={false}
              htmlType="button"
              loading={false}
              onClick={[MockFunction]}
            >
              Expand Filters
              <Icon
                type="down"
              />
            </Button>,
            "className": "left center-mobile",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": Array [
                "Expand Filters",
                <Icon
                  type="down"
                />,
              ],
              "className": "btn--dropdown",
              "ghost": false,
              "htmlType": "button",
              "loading": false,
              "onClick": [MockFunction],
            },
            "ref": null,
            "rendered": Array [
              "Expand Filters",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "type": "down",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                htmlType="reset"
                loading={false}
                type="secondary"
              >
                Clear Filters
              </Button>,
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                htmlType="submit"
                loading={false}
                type="primary"
              >
                Apply Filters
              </Button>,
            ],
            "className": "right center-mobile",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "Clear Filters",
                "className": "full-mobile",
                "ghost": false,
                "htmlType": "reset",
                "loading": false,
                "type": "secondary",
              },
              "ref": null,
              "rendered": "Clear Filters",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "Apply Filters",
                "className": "full-mobile",
                "ghost": false,
                "htmlType": "submit",
                "loading": false,
                "type": "primary",
              },
              "ref": null,
              "rendered": "Apply Filters",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
