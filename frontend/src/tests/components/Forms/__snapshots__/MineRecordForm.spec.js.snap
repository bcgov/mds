// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MineRecordForm renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MineRecordForm
    change={[MockFunction]}
    closeModal={[MockFunction]}
    conditionalCommodityOptions={undefined}
    conditionalDisturbanceOptions={
      Object {
        "BCL": Array [
          Object {
            "exclusive": false,
            "label": "Surface",
            "value": "SUR",
          },
        ],
        "COL": Array [
          Object {
            "exclusive": false,
            "label": "Surface",
            "value": "SUR",
          },
          Object {
            "exclusive": false,
            "label": "Underground",
            "value": "UND",
          },
          Object {
            "exclusive": true,
            "label": "Coal Wash",
            "value": "CWA",
          },
        ],
        "MIN": Array [
          Object {
            "exclusive": false,
            "label": "Surface",
            "value": "SUR",
          },
          Object {
            "exclusive": false,
            "label": "Underground",
            "value": "UND",
          },
        ],
        "PLR": Array [
          Object {
            "exclusive": false,
            "label": "Surface",
            "value": "SUR",
          },
          Object {
            "exclusive": false,
            "label": "Underground",
            "value": "UND",
          },
          Object {
            "exclusive": true,
            "label": "Mill",
            "value": "MIL",
          },
        ],
      }
    }
    currentMineTypes={
      Array [
        Object {
          "mine_commodity_code": Array [],
          "mine_disturbance_code": Array [],
          "mine_tenure_type_code": Array [],
        },
      ]
    }
    handleDelete={[MockFunction]}
    handleSubmit={[MockFunction]}
    isNewRecord={false}
    mineCommodityOptionsHash={
      Object {
        "CG": "Construction Aggregate",
        "MC": "Metallurgic",
        "TO": "Thermal Coal",
      }
    }
    mineDisturbanceOptionsHash={
      Object {
        "CWA": "Coal Wash",
        "MIL": "Mill",
        "SUR": "Surface",
        "UND": "Underground",
      }
    }
    mineRegionOptions={
      Array [
        Object {
          "label": "South West",
          "value": "SW",
        },
        Object {
          "label": "South Central",
          "value": "SC",
        },
        Object {
          "label": "North West",
          "value": "NW",
        },
        Object {
          "label": "North East",
          "value": "NE",
        },
        Object {
          "label": "South East",
          "value": "SE",
        },
      ]
    }
    mineStatusOptions={
      Array [
        Object {
          "description": "The permittee is not able or available to meet permit obligations. The Ministry has taken over responsibility for the mine. Reclamation work is under way. There are long-term care and maintenance activities on site. Contractors are performing the work.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Orphaned",
            "mine_operation_status_reason_code": "ORP",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Long Term Maintenance",
            "mine_operation_status_sub_reason_code": "LTM",
          },
          "mine_status_xref_guid": "0b14738f-7980-49ba-b447-ff5a1859dded",
        },
        Object {
          "description": "The mine is closed and not expected to re-open. Reclamation work is under way. There are long-term care and maintenance activities on site. Permit and HSRC obligations are still in place. Site is subject to inspection and still has reporting to file with the Ministry.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Reclamation",
            "mine_operation_status_reason_code": "REC",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Long Term Maintenance",
            "mine_operation_status_sub_reason_code": "LTM",
          },
          "mine_status_xref_guid": "b001f941-2421-43a5-aade-f52fe4aecbd1",
        },
        Object {
          "description": "The permittee is not able or available to meet permit obligations. The Ministry has taken over responsibility for the mine. Reclamation work is under way. There are long-term care and maintenance activities on site in addition to water treatment. Contractors are performing the work.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Orphaned",
            "mine_operation_status_reason_code": "ORP",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Long Term Maintenance & Water Treatment",
            "mine_operation_status_sub_reason_code": "LWT",
          },
          "mine_status_xref_guid": "1c04fe6a-ce61-4e0a-be69-2a4130dfaa18",
        },
        Object {
          "description": "The mine is closed and not expected to re-open. Reclamation work is under way. There are long-term care and maintenance activities on site in addition to water treatment. Permit and HSRC obligations are still in place. Site is subject to inspection and still has reporting to file with the Ministry.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Reclamation",
            "mine_operation_status_reason_code": "REC",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Long Term Maintenance & Water Treatment",
            "mine_operation_status_sub_reason_code": "LWT",
          },
          "mine_status_xref_guid": "044f007d-caa6-4139-8891-1a65935ee595",
        },
        Object {
          "description": "Reclamation work is complete, no additional care required. Ministry needs to return bond and close permit for mine to be Abandoned.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Reclamation",
            "mine_operation_status_reason_code": "REC",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Permit Release Pending",
            "mine_operation_status_sub_reason_code": "PRP",
          },
          "mine_status_xref_guid": "d360d834-b483-4e1a-8057-f85c9df8f184",
        },
        Object {
          "description": "The permittee is not able or available to meet permit obligations. The Ministry has taken over responsibility for the mine. Reclamation work has not started. A contractor has not been retained to perform the work.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Orphaned",
            "mine_operation_status_reason_code": "ORP",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Reclamation Not Started",
            "mine_operation_status_sub_reason_code": "RNS",
          },
          "mine_status_xref_guid": "efe8ee38-2abe-4ca7-9e42-ff1d3a142188",
        },
        Object {
          "description": "The permittee is not able or available to meet permit obligations. The Ministry will take over responsibility for the mine. The site needs to be visited and assessed to determine status and work required.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Orphaned",
            "mine_operation_status_reason_code": "ORP",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Site Visit Required",
            "mine_operation_status_sub_reason_code": "SVR",
          },
          "mine_status_xref_guid": "c419022a-5b13-4146-b23f-770d0f4c4337",
        },
        Object {
          "description": "The mine site is shut down, the permit obligations have been fulfilled. Bond has been returned if permittee completed reclamation work.",
          "mine_operation_status": Object {
            "description": "Abandoned",
            "mine_operation_status_code": "ABN",
          },
          "mine_operation_status_reason": Object {
            "description": null,
            "mine_operation_status_reason_code": null,
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "1397385d-80a5-47a0-a796-e6be9c28de06",
        },
        Object {
          "description": null,
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": null,
            "mine_operation_status_reason_code": null,
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "4c431538-2c2c-4010-9f65-e4d67db96818",
        },
        Object {
          "description": "No mine related work has started at this site (including exploration). The mine record may have been created as placeholder for an exploration permit. Sites with closed exploration permits that are constructing production facilities also fit into this category.",
          "mine_operation_status": Object {
            "description": "Not Started",
            "mine_operation_status_code": "NS",
          },
          "mine_operation_status_reason": Object {
            "description": null,
            "mine_operation_status_reason_code": null,
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "d4b402ce-84ec-4c8f-a531-5e4abc110cdc",
        },
        Object {
          "description": "This mine operates seasonally. Dates shown are from the most recently approved NoW application. Confirm operating dates with operator or permittee before visiting.",
          "mine_operation_status": Object {
            "description": "Operating",
            "mine_operation_status_code": "OP",
          },
          "mine_operation_status_reason": Object {
            "description": "Seasonal",
            "mine_operation_status_reason_code": "SEA",
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "1ef87948-17f8-4a06-8589-afc1bb4f4dd6",
        },
        Object {
          "description": "This mine operates year-round (can be conducting exploration and/or production activities).",
          "mine_operation_status": Object {
            "description": "Operating",
            "mine_operation_status_code": "OP",
          },
          "mine_operation_status_reason": Object {
            "description": "Year round",
            "mine_operation_status_reason_code": "YR",
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "0b86ff77-fdcf-4e81-a6fc-2401e2f53c23",
        },
        Object {
          "description": "Ministry has not determined if the permittee is able or available to meet permit obligations. A visit to the site is required.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Unknown",
            "mine_operation_status_reason_code": "UN",
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "f3e60c05-b3df-4a6b-83b5-f5f390ca1c71",
        },
        Object {
          "description": "The mine is temporarily closed. It is expected that it will eventually re-open. Permit and HSRC obligations are still in place. Site is subject to inspection and still has reporting to file with the Ministry.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Care & Maintenance",
            "mine_operation_status_reason_code": "CM",
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "887873b5-6298-42db-a712-3fee5946fefe",
        },
      ]
    }
    mineTenureHash={
      Object {
        "BCL": "BC Land",
        "COL": "Coal",
        "MIN": "Mineral",
        "PLR": "Placer",
      }
    }
    mineTenureTypes={
      Array [
        Object {
          "label": "Coal",
          "value": "COL",
        },
        Object {
          "label": "Mineral",
          "value": "MIN",
        },
        Object {
          "label": "Placer",
          "value": "PLR",
        },
        Object {
          "label": "BC Land",
          "value": "BCL",
        },
      ]
    }
    mine_types={
      Array [
        Object {
          "mine_commodity_code": Array [],
          "mine_disturbance_code": Array [],
          "mine_tenure_type_code": Array [],
        },
      ]
    }
    submitting={false}
    title="mockTitle"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Row
          gutter={16}
        >
          <Col>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_name"
                label="Mine Name *"
                name="mine_name"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
        </Row>,
        <Row
          gutter={16}
        >
          <Col>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_status"
                label="Mine Status *"
                name="mine_status"
                onChange={[Function]}
                options={undefined}
                placeholder="Please select status"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
        </Row>,
        <Row
          gutter={16}
        >
          <Col>
            <FormItem
              hasFeedback={false}
              label="Is this a historic mine status?"
            >
              <RadioGroup
                buttonStyle="outline"
                defaultValue={false}
                disabled={false}
                onChange={[Function]}
                value={false}
              >
                <Radio
                  type="radio"
                  value={true}
                >
                  Yes
                </Radio>
                <Radio
                  type="radio"
                  value={false}
                >
                  No
                </Radio>
              </RadioGroup>
            </FormItem>
          </Col>
        </Row>,
        false,
        <Row
          gutter={16}
        >
          <Col
            span={24}
          >
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={
                  Array [
                    Object {
                      "label": "South West",
                      "value": "SW",
                    },
                    Object {
                      "label": "South Central",
                      "value": "SC",
                    },
                    Object {
                      "label": "North West",
                      "value": "NW",
                    },
                    Object {
                      "label": "North East",
                      "value": "NE",
                    },
                    Object {
                      "label": "South East",
                      "value": "SE",
                    },
                  ]
                }
                id="mine_region"
                label="Mine Region *"
                name="mine_region"
                placeholder="Select a Region"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
        </Row>,
        <Row
          gutter={16}
        >
          <Col
            md={12}
            xs={24}
          >
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="latitude"
                label="Latitude"
                name="latitude"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
          <Col
            md={12}
            xs={24}
          >
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="longitude"
                label="Longitude"
                name="longitude"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
        </Row>,
        <FormItem
          hasFeedback={false}
          label="Mine Type"
        />,
        <FieldArray
          component={[Function]}
          name="mine_types"
        />,
        <Row
          gutter={16}
        >
          <Col>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_note"
                label="Notes"
                name="mine_note"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
        </Row>,
        <Row
          gutter={16}
        >
          <Col>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="major_mine_ind"
                label="Major Mine"
                name="major_mine_ind"
                type="checkbox"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
        </Row>,
        <div
          className="right center-mobile"
        >
          <Popconfirm
            cancelText="No"
            icon={
              <Icon
                theme="filled"
                type="exclamation-circle"
              />
            }
            okText="Yes"
            okType="primary"
            onConfirm={[MockFunction]}
            placement="topRight"
            title="Are you sure you want to cancel?"
            transitionName="zoom-big"
            trigger="click"
          >
            <Button
              block={false}
              className="full-mobile"
              ghost={false}
              htmlType="button"
              loading={false}
            >
              Cancel
            </Button>
          </Popconfirm>
          <Button
            block={false}
            className="full-mobile"
            disabled={false}
            ghost={false}
            htmlType="submit"
            loading={false}
            type="primary"
          >
            mockTitle
          </Button>
        </div>,
      ],
      "colon": true,
      "hideRequiredMark": false,
      "layout": "vertical",
      "onSubmit": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Col>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_name"
                label="Mine Name *"
                name="mine_name"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>,
          "gutter": 16,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_name"
                label="Mine Name *"
                name="mine_name"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
              />
            </FormItem>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Field
                component={[Function]}
                id="mine_name"
                label="Mine Name *"
                name="mine_name"
                validate={
                  Array [
                    [Function],
                    [Function],
                    [Function],
                  ]
                }
              />,
              "hasFeedback": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "mine_name",
                "label": "Mine Name *",
                "name": "mine_name",
                "validate": Array [
                  [Function],
                  [Function],
                  [Function],
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Col>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_status"
                label="Mine Status *"
                name="mine_status"
                onChange={[Function]}
                options={undefined}
                placeholder="Please select status"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>,
          "gutter": 16,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_status"
                label="Mine Status *"
                name="mine_status"
                onChange={[Function]}
                options={undefined}
                placeholder="Please select status"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Field
                component={[Function]}
                id="mine_status"
                label="Mine Status *"
                name="mine_status"
                onChange={[Function]}
                options={undefined}
                placeholder="Please select status"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />,
              "hasFeedback": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "mine_status",
                "label": "Mine Status *",
                "name": "mine_status",
                "onChange": [Function],
                "options": undefined,
                "placeholder": "Please select status",
                "validate": Array [
                  [Function],
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Col>
            <FormItem
              hasFeedback={false}
              label="Is this a historic mine status?"
            >
              <RadioGroup
                buttonStyle="outline"
                defaultValue={false}
                disabled={false}
                onChange={[Function]}
                value={false}
              >
                <Radio
                  type="radio"
                  value={true}
                >
                  Yes
                </Radio>
                <Radio
                  type="radio"
                  value={false}
                >
                  No
                </Radio>
              </RadioGroup>
            </FormItem>
          </Col>,
          "gutter": 16,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormItem
              hasFeedback={false}
              label="Is this a historic mine status?"
            >
              <RadioGroup
                buttonStyle="outline"
                defaultValue={false}
                disabled={false}
                onChange={[Function]}
                value={false}
              >
                <Radio
                  type="radio"
                  value={true}
                >
                  Yes
                </Radio>
                <Radio
                  type="radio"
                  value={false}
                >
                  No
                </Radio>
              </RadioGroup>
            </FormItem>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <RadioGroup
                buttonStyle="outline"
                defaultValue={false}
                disabled={false}
                onChange={[Function]}
                value={false}
              >
                <Radio
                  type="radio"
                  value={true}
                >
                  Yes
                </Radio>
                <Radio
                  type="radio"
                  value={false}
                >
                  No
                </Radio>
              </RadioGroup>,
              "hasFeedback": false,
              "label": "Is this a historic mine status?",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "buttonStyle": "outline",
                "children": Array [
                  <Radio
                    type="radio"
                    value={true}
                  >
                    Yes
                  </Radio>,
                  <Radio
                    type="radio"
                    value={false}
                  >
                    No
                  </Radio>,
                ],
                "defaultValue": false,
                "disabled": false,
                "onChange": [Function],
                "value": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Yes",
                    "type": "radio",
                    "value": true,
                  },
                  "ref": null,
                  "rendered": "Yes",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "No",
                    "type": "radio",
                    "value": false,
                  },
                  "ref": null,
                  "rendered": "No",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Col
            span={24}
          >
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={
                  Array [
                    Object {
                      "label": "South West",
                      "value": "SW",
                    },
                    Object {
                      "label": "South Central",
                      "value": "SC",
                    },
                    Object {
                      "label": "North West",
                      "value": "NW",
                    },
                    Object {
                      "label": "North East",
                      "value": "NE",
                    },
                    Object {
                      "label": "South East",
                      "value": "SE",
                    },
                  ]
                }
                id="mine_region"
                label="Mine Region *"
                name="mine_region"
                placeholder="Select a Region"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>,
          "gutter": 16,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                data={
                  Array [
                    Object {
                      "label": "South West",
                      "value": "SW",
                    },
                    Object {
                      "label": "South Central",
                      "value": "SC",
                    },
                    Object {
                      "label": "North West",
                      "value": "NW",
                    },
                    Object {
                      "label": "North East",
                      "value": "NE",
                    },
                    Object {
                      "label": "South East",
                      "value": "SE",
                    },
                  ]
                }
                id="mine_region"
                label="Mine Region *"
                name="mine_region"
                placeholder="Select a Region"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>,
            "span": 24,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Field
                component={[Function]}
                data={
                  Array [
                    Object {
                      "label": "South West",
                      "value": "SW",
                    },
                    Object {
                      "label": "South Central",
                      "value": "SC",
                    },
                    Object {
                      "label": "North West",
                      "value": "NW",
                    },
                    Object {
                      "label": "North East",
                      "value": "NE",
                    },
                    Object {
                      "label": "South East",
                      "value": "SE",
                    },
                  ]
                }
                id="mine_region"
                label="Mine Region *"
                name="mine_region"
                placeholder="Select a Region"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />,
              "hasFeedback": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "data": Array [
                  Object {
                    "label": "South West",
                    "value": "SW",
                  },
                  Object {
                    "label": "South Central",
                    "value": "SC",
                  },
                  Object {
                    "label": "North West",
                    "value": "NW",
                  },
                  Object {
                    "label": "North East",
                    "value": "NE",
                  },
                  Object {
                    "label": "South East",
                    "value": "SE",
                  },
                ],
                "id": "mine_region",
                "label": "Mine Region *",
                "name": "mine_region",
                "placeholder": "Select a Region",
                "validate": Array [
                  [Function],
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Col
              md={12}
              xs={24}
            >
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="latitude"
                  label="Latitude"
                  name="latitude"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
            <Col
              md={12}
              xs={24}
            >
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="longitude"
                  label="Longitude"
                  name="longitude"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
          ],
          "gutter": 16,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="latitude"
                  label="Latitude"
                  name="latitude"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>,
              "md": 12,
              "xs": 24,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="latitude"
                  label="Latitude"
                  name="latitude"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "latitude",
                  "label": "Latitude",
                  "name": "latitude",
                  "validate": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="longitude"
                  label="Longitude"
                  name="longitude"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>,
              "md": 12,
              "xs": 24,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="longitude"
                  label="Longitude"
                  name="longitude"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "longitude",
                  "label": "Longitude",
                  "name": "longitude",
                  "validate": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "hasFeedback": false,
          "label": "Mine Type",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": [Function],
          "name": "mine_types",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Col>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_note"
                label="Notes"
                name="mine_note"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>,
          "gutter": 16,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="mine_note"
                label="Notes"
                name="mine_note"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Field
                component={[Function]}
                id="mine_note"
                label="Notes"
                name="mine_note"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />,
              "hasFeedback": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "mine_note",
                "label": "Notes",
                "name": "mine_note",
                "validate": Array [
                  [Function],
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Col>
            <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="major_mine_ind"
                label="Major Mine"
                name="major_mine_ind"
                type="checkbox"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>,
          "gutter": 16,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <FormItem
              hasFeedback={false}
            >
              <Field
                component={[Function]}
                id="major_mine_ind"
                label="Major Mine"
                name="major_mine_ind"
                type="checkbox"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Field
                component={[Function]}
                id="major_mine_ind"
                label="Major Mine"
                name="major_mine_ind"
                type="checkbox"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />,
              "hasFeedback": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "id": "major_mine_ind",
                "label": "Major Mine",
                "name": "major_mine_ind",
                "type": "checkbox",
                "validate": Array [
                  [Function],
                ],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Popconfirm
              cancelText="No"
              icon={
                <Icon
                  theme="filled"
                  type="exclamation-circle"
                />
              }
              okText="Yes"
              okType="primary"
              onConfirm={[MockFunction]}
              placement="topRight"
              title="Are you sure you want to cancel?"
              transitionName="zoom-big"
              trigger="click"
            >
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                htmlType="button"
                loading={false}
              >
                Cancel
              </Button>
            </Popconfirm>,
            <Button
              block={false}
              className="full-mobile"
              disabled={false}
              ghost={false}
              htmlType="submit"
              loading={false}
              type="primary"
            >
              mockTitle
            </Button>,
          ],
          "className": "right center-mobile",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "cancelText": "No",
              "children": <Button
                block={false}
                className="full-mobile"
                ghost={false}
                htmlType="button"
                loading={false}
              >
                Cancel
              </Button>,
              "icon": <Icon
                theme="filled"
                type="exclamation-circle"
              />,
              "okText": "Yes",
              "okType": "primary",
              "onConfirm": [MockFunction],
              "placement": "topRight",
              "title": "Are you sure you want to cancel?",
              "transitionName": "zoom-big",
              "trigger": "click",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "Cancel",
                "className": "full-mobile",
                "ghost": false,
                "htmlType": "button",
                "loading": false,
              },
              "ref": null,
              "rendered": "Cancel",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": "mockTitle",
              "className": "full-mobile",
              "disabled": false,
              "ghost": false,
              "htmlType": "submit",
              "loading": false,
              "type": "primary",
            },
            "ref": null,
            "rendered": "mockTitle",
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Row
            gutter={16}
          >
            <Col>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_name"
                  label="Mine Name *"
                  name="mine_name"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
          </Row>,
          <Row
            gutter={16}
          >
            <Col>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_status"
                  label="Mine Status *"
                  name="mine_status"
                  onChange={[Function]}
                  options={undefined}
                  placeholder="Please select status"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
          </Row>,
          <Row
            gutter={16}
          >
            <Col>
              <FormItem
                hasFeedback={false}
                label="Is this a historic mine status?"
              >
                <RadioGroup
                  buttonStyle="outline"
                  defaultValue={false}
                  disabled={false}
                  onChange={[Function]}
                  value={false}
                >
                  <Radio
                    type="radio"
                    value={true}
                  >
                    Yes
                  </Radio>
                  <Radio
                    type="radio"
                    value={false}
                  >
                    No
                  </Radio>
                </RadioGroup>
              </FormItem>
            </Col>
          </Row>,
          false,
          <Row
            gutter={16}
          >
            <Col
              span={24}
            >
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={
                    Array [
                      Object {
                        "label": "South West",
                        "value": "SW",
                      },
                      Object {
                        "label": "South Central",
                        "value": "SC",
                      },
                      Object {
                        "label": "North West",
                        "value": "NW",
                      },
                      Object {
                        "label": "North East",
                        "value": "NE",
                      },
                      Object {
                        "label": "South East",
                        "value": "SE",
                      },
                    ]
                  }
                  id="mine_region"
                  label="Mine Region *"
                  name="mine_region"
                  placeholder="Select a Region"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
          </Row>,
          <Row
            gutter={16}
          >
            <Col
              md={12}
              xs={24}
            >
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="latitude"
                  label="Latitude"
                  name="latitude"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
            <Col
              md={12}
              xs={24}
            >
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="longitude"
                  label="Longitude"
                  name="longitude"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
          </Row>,
          <FormItem
            hasFeedback={false}
            label="Mine Type"
          />,
          <FieldArray
            component={[Function]}
            name="mine_types"
          />,
          <Row
            gutter={16}
          >
            <Col>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_note"
                  label="Notes"
                  name="mine_note"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
          </Row>,
          <Row
            gutter={16}
          >
            <Col>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="major_mine_ind"
                  label="Major Mine"
                  name="major_mine_ind"
                  type="checkbox"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
          </Row>,
          <div
            className="right center-mobile"
          >
            <Popconfirm
              cancelText="No"
              icon={
                <Icon
                  theme="filled"
                  type="exclamation-circle"
                />
              }
              okText="Yes"
              okType="primary"
              onConfirm={[MockFunction]}
              placement="topRight"
              title="Are you sure you want to cancel?"
              transitionName="zoom-big"
              trigger="click"
            >
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                htmlType="button"
                loading={false}
              >
                Cancel
              </Button>
            </Popconfirm>
            <Button
              block={false}
              className="full-mobile"
              disabled={false}
              ghost={false}
              htmlType="submit"
              loading={false}
              type="primary"
            >
              mockTitle
            </Button>
          </div>,
        ],
        "colon": true,
        "hideRequiredMark": false,
        "layout": "vertical",
        "onSubmit": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_name"
                  label="Mine Name *"
                  name="mine_name"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
            "gutter": 16,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_name"
                  label="Mine Name *"
                  name="mine_name"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />
              </FormItem>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="mine_name"
                  label="Mine Name *"
                  name="mine_name"
                  validate={
                    Array [
                      [Function],
                      [Function],
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "mine_name",
                  "label": "Mine Name *",
                  "name": "mine_name",
                  "validate": Array [
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_status"
                  label="Mine Status *"
                  name="mine_status"
                  onChange={[Function]}
                  options={undefined}
                  placeholder="Please select status"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
            "gutter": 16,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_status"
                  label="Mine Status *"
                  name="mine_status"
                  onChange={[Function]}
                  options={undefined}
                  placeholder="Please select status"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="mine_status"
                  label="Mine Status *"
                  name="mine_status"
                  onChange={[Function]}
                  options={undefined}
                  placeholder="Please select status"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "mine_status",
                  "label": "Mine Status *",
                  "name": "mine_status",
                  "onChange": [Function],
                  "options": undefined,
                  "placeholder": "Please select status",
                  "validate": Array [
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col>
              <FormItem
                hasFeedback={false}
                label="Is this a historic mine status?"
              >
                <RadioGroup
                  buttonStyle="outline"
                  defaultValue={false}
                  disabled={false}
                  onChange={[Function]}
                  value={false}
                >
                  <Radio
                    type="radio"
                    value={true}
                  >
                    Yes
                  </Radio>
                  <Radio
                    type="radio"
                    value={false}
                  >
                    No
                  </Radio>
                </RadioGroup>
              </FormItem>
            </Col>,
            "gutter": 16,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                hasFeedback={false}
                label="Is this a historic mine status?"
              >
                <RadioGroup
                  buttonStyle="outline"
                  defaultValue={false}
                  disabled={false}
                  onChange={[Function]}
                  value={false}
                >
                  <Radio
                    type="radio"
                    value={true}
                  >
                    Yes
                  </Radio>
                  <Radio
                    type="radio"
                    value={false}
                  >
                    No
                  </Radio>
                </RadioGroup>
              </FormItem>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <RadioGroup
                  buttonStyle="outline"
                  defaultValue={false}
                  disabled={false}
                  onChange={[Function]}
                  value={false}
                >
                  <Radio
                    type="radio"
                    value={true}
                  >
                    Yes
                  </Radio>
                  <Radio
                    type="radio"
                    value={false}
                  >
                    No
                  </Radio>
                </RadioGroup>,
                "hasFeedback": false,
                "label": "Is this a historic mine status?",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "buttonStyle": "outline",
                  "children": Array [
                    <Radio
                      type="radio"
                      value={true}
                    >
                      Yes
                    </Radio>,
                    <Radio
                      type="radio"
                      value={false}
                    >
                      No
                    </Radio>,
                  ],
                  "defaultValue": false,
                  "disabled": false,
                  "onChange": [Function],
                  "value": false,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "Yes",
                      "type": "radio",
                      "value": true,
                    },
                    "ref": null,
                    "rendered": "Yes",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "No",
                      "type": "radio",
                      "value": false,
                    },
                    "ref": null,
                    "rendered": "No",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col
              span={24}
            >
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={
                    Array [
                      Object {
                        "label": "South West",
                        "value": "SW",
                      },
                      Object {
                        "label": "South Central",
                        "value": "SC",
                      },
                      Object {
                        "label": "North West",
                        "value": "NW",
                      },
                      Object {
                        "label": "North East",
                        "value": "NE",
                      },
                      Object {
                        "label": "South East",
                        "value": "SE",
                      },
                    ]
                  }
                  id="mine_region"
                  label="Mine Region *"
                  name="mine_region"
                  placeholder="Select a Region"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
            "gutter": 16,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  data={
                    Array [
                      Object {
                        "label": "South West",
                        "value": "SW",
                      },
                      Object {
                        "label": "South Central",
                        "value": "SC",
                      },
                      Object {
                        "label": "North West",
                        "value": "NW",
                      },
                      Object {
                        "label": "North East",
                        "value": "NE",
                      },
                      Object {
                        "label": "South East",
                        "value": "SE",
                      },
                    ]
                  }
                  id="mine_region"
                  label="Mine Region *"
                  name="mine_region"
                  placeholder="Select a Region"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>,
              "span": 24,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  data={
                    Array [
                      Object {
                        "label": "South West",
                        "value": "SW",
                      },
                      Object {
                        "label": "South Central",
                        "value": "SC",
                      },
                      Object {
                        "label": "North West",
                        "value": "NW",
                      },
                      Object {
                        "label": "North East",
                        "value": "NE",
                      },
                      Object {
                        "label": "South East",
                        "value": "SE",
                      },
                    ]
                  }
                  id="mine_region"
                  label="Mine Region *"
                  name="mine_region"
                  placeholder="Select a Region"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "data": Array [
                    Object {
                      "label": "South West",
                      "value": "SW",
                    },
                    Object {
                      "label": "South Central",
                      "value": "SC",
                    },
                    Object {
                      "label": "North West",
                      "value": "NW",
                    },
                    Object {
                      "label": "North East",
                      "value": "NE",
                    },
                    Object {
                      "label": "South East",
                      "value": "SE",
                    },
                  ],
                  "id": "mine_region",
                  "label": "Mine Region *",
                  "name": "mine_region",
                  "placeholder": "Select a Region",
                  "validate": Array [
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Col
                md={12}
                xs={24}
              >
                <FormItem
                  hasFeedback={false}
                >
                  <Field
                    component={[Function]}
                    id="latitude"
                    label="Latitude"
                    name="latitude"
                    validate={
                      Array [
                        [Function],
                        [Function],
                        [Function],
                      ]
                    }
                  />
                </FormItem>
              </Col>,
              <Col
                md={12}
                xs={24}
              >
                <FormItem
                  hasFeedback={false}
                >
                  <Field
                    component={[Function]}
                    id="longitude"
                    label="Longitude"
                    name="longitude"
                    validate={
                      Array [
                        [Function],
                        [Function],
                        [Function],
                      ]
                    }
                  />
                </FormItem>
              </Col>,
            ],
            "gutter": 16,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormItem
                  hasFeedback={false}
                >
                  <Field
                    component={[Function]}
                    id="latitude"
                    label="Latitude"
                    name="latitude"
                    validate={
                      Array [
                        [Function],
                        [Function],
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                "md": 12,
                "xs": 24,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="latitude"
                    label="Latitude"
                    name="latitude"
                    validate={
                      Array [
                        [Function],
                        [Function],
                        [Function],
                      ]
                    }
                  />,
                  "hasFeedback": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "latitude",
                    "label": "Latitude",
                    "name": "latitude",
                    "validate": Array [
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormItem
                  hasFeedback={false}
                >
                  <Field
                    component={[Function]}
                    id="longitude"
                    label="Longitude"
                    name="longitude"
                    validate={
                      Array [
                        [Function],
                        [Function],
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                "md": 12,
                "xs": 24,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="longitude"
                    label="Longitude"
                    name="longitude"
                    validate={
                      Array [
                        [Function],
                        [Function],
                        [Function],
                      ]
                    }
                  />,
                  "hasFeedback": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "longitude",
                    "label": "Longitude",
                    "name": "longitude",
                    "validate": Array [
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "hasFeedback": false,
            "label": "Mine Type",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "name": "mine_types",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_note"
                  label="Notes"
                  name="mine_note"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
            "gutter": 16,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="mine_note"
                  label="Notes"
                  name="mine_note"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="mine_note"
                  label="Notes"
                  name="mine_note"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "mine_note",
                  "label": "Notes",
                  "name": "mine_note",
                  "validate": Array [
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Col>
              <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="major_mine_ind"
                  label="Major Mine"
                  name="major_mine_ind"
                  type="checkbox"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
            "gutter": 16,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                hasFeedback={false}
              >
                <Field
                  component={[Function]}
                  id="major_mine_ind"
                  label="Major Mine"
                  name="major_mine_ind"
                  type="checkbox"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="major_mine_ind"
                  label="Major Mine"
                  name="major_mine_ind"
                  type="checkbox"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />,
                "hasFeedback": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "major_mine_ind",
                  "label": "Major Mine",
                  "name": "major_mine_ind",
                  "type": "checkbox",
                  "validate": Array [
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Popconfirm
                cancelText="No"
                icon={
                  <Icon
                    theme="filled"
                    type="exclamation-circle"
                  />
                }
                okText="Yes"
                okType="primary"
                onConfirm={[MockFunction]}
                placement="topRight"
                title="Are you sure you want to cancel?"
                transitionName="zoom-big"
                trigger="click"
              >
                <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  htmlType="button"
                  loading={false}
                >
                  Cancel
                </Button>
              </Popconfirm>,
              <Button
                block={false}
                className="full-mobile"
                disabled={false}
                ghost={false}
                htmlType="submit"
                loading={false}
                type="primary"
              >
                mockTitle
              </Button>,
            ],
            "className": "right center-mobile",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "cancelText": "No",
                "children": <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  htmlType="button"
                  loading={false}
                >
                  Cancel
                </Button>,
                "icon": <Icon
                  theme="filled"
                  type="exclamation-circle"
                />,
                "okText": "Yes",
                "okType": "primary",
                "onConfirm": [MockFunction],
                "placement": "topRight",
                "title": "Are you sure you want to cancel?",
                "transitionName": "zoom-big",
                "trigger": "click",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "block": false,
                  "children": "Cancel",
                  "className": "full-mobile",
                  "ghost": false,
                  "htmlType": "button",
                  "loading": false,
                },
                "ref": null,
                "rendered": "Cancel",
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": "mockTitle",
                "className": "full-mobile",
                "disabled": false,
                "ghost": false,
                "htmlType": "submit",
                "loading": false,
                "type": "primary",
              },
              "ref": null,
              "rendered": "mockTitle",
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
