// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PartyProfile renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PartyProfile
    closrModal={[MockFunction]}
    fetchMineBasicInfoList={[MockFunction]}
    fetchPartyById={
      [MockFunction] {
        "calls": Array [
          Array [
            1,
          ],
        ],
      }
    }
    fetchPartyRelationshipTypes={[MockFunction]}
    fetchPartyRelationships={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "party_guid": 1,
              "relationships": "party",
            },
          ],
        ],
      }
    }
    fetchProvinceCodes={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    match={
      Object {
        "isExact": true,
        "params": Object {
          "id": 1,
        },
        "path": "",
        "url": "",
      }
    }
    mineBasicInfoListHash={
      Object {
        "db059bf5-14aa-4b98-af67-9c1e635a6120": "mockMineName",
      }
    }
    openModal={[MockFunction]}
    parties={
      Object {
        "guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
        "name": "mock name",
      }
    }
    partyRelationshipTypeHash={
      Object {
        "BLA": "Blaster",
        "EMM": "Exploration Mine Manager",
        "EOR": "Engineer Of Record",
        "EVS": "Environmental Specialist",
        "FRB": "Fire Boss",
        "MMG": "Mine Manager",
        "MOR": "Mine Operator",
        "MOW": "Mine Owner",
        "MRC": "Mine Rescue Contact",
        "PMT": "Permittee",
        "SHB": "Shift Boss",
        "SVR": "Supervisor",
        "TQP": "TSF Qualified Person",
      }
    }
    partyRelationships={Array []}
    provinceOptions={
      Array [
        Object {
          "label": "BC",
          "value": "BC",
        },
        Object {
          "label": "AB",
          "value": "AB",
        },
      ]
    }
    updateParty={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {},
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
