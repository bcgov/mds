// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactHomePage renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ContactHomePage
    closeModal={[MockFunction]}
    fetchParties={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "relationships": "mine_party_appt",
            },
          ],
          Array [
            Object {
              "page": undefined,
              "per_page": undefined,
              "relationships": "mine_party_appt",
            },
          ],
        ],
      }
    }
    fetchPartyRelationshipTypes={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    history={
      Object {
        "location": Object {},
        "push": [MockFunction],
      }
    }
    location={
      Object {
        "search": " ",
      }
    }
    mineIds={
      Array [
        "18133c75-49ad-4101-85f3-a43e35ae989a",
        "18145c75-49ad-0101-85f3-a43e45ae989a",
      ]
    }
    mines={
      Object {
        "18133c75-49ad-4101-85f3-a43e35ae989a": Object {
          "guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
          "name": "mock name",
        },
        "18145c75-49ad-0101-85f3-a43e45ae989a": Object {
          "guid": "18145c75-49ad-0101-85f3-a43e45ae989a",
          "name": "mock Two",
        },
      }
    }
    openModal={[MockFunction]}
    pageData={
      Object {
        "current_page": 1,
        "has_next": true,
        "has_prev": false,
        "items_per_page": 25,
        "mines": Array [],
        "next_num": 2,
        "prev_num": null,
        "total": 9000,
        "total_pages": 360,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="landing-page__header"
        >
          <div
            className="inline-flex between center-mobile center-mobile"
          >
            <div>
              <h1>
                Contact Lookup
              </h1>
              <p>
                To find a contact profile, search in the list section below.
              </p>
            </div>
          </div>
        </div>,
        <div
          className="landing-page__content"
        >
          <ContactSearch
            fetchParties={
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "relationships": "mine_party_appt",
                    },
                  ],
                  Array [
                    Object {
                      "page": undefined,
                      "per_page": undefined,
                      "relationships": "mine_party_appt",
                    },
                  ],
                ],
              }
            }
            handleSearch={[Function]}
            handleSubmit={undefined}
            initialValues={Object {}}
            partyRelationshipTypesList={undefined}
          />
          <Loading />
        </div>,
      ],
      "className": "landing-page",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="inline-flex between center-mobile center-mobile"
          >
            <div>
              <h1>
                Contact Lookup
              </h1>
              <p>
                To find a contact profile, search in the list section below.
              </p>
            </div>
          </div>,
          "className": "landing-page__header",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div>
              <h1>
                Contact Lookup
              </h1>
              <p>
                To find a contact profile, search in the list section below.
              </p>
            </div>,
            "className": "inline-flex between center-mobile center-mobile",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  Contact Lookup
                </h1>,
                <p>
                  To find a contact profile, search in the list section below.
                </p>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Contact Lookup",
                },
                "ref": null,
                "rendered": "Contact Lookup",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "To find a contact profile, search in the list section below.",
                },
                "ref": null,
                "rendered": "To find a contact profile, search in the list section below.",
                "type": "p",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ContactSearch
              fetchParties={
                [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "relationships": "mine_party_appt",
                      },
                    ],
                    Array [
                      Object {
                        "page": undefined,
                        "per_page": undefined,
                        "relationships": "mine_party_appt",
                      },
                    ],
                  ],
                }
              }
              handleSearch={[Function]}
              handleSubmit={undefined}
              initialValues={Object {}}
              partyRelationshipTypesList={undefined}
            />,
            false,
            <Loading />,
          ],
          "className": "landing-page__content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "fetchParties": [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "relationships": "mine_party_appt",
                    },
                  ],
                  Array [
                    Object {
                      "page": undefined,
                      "per_page": undefined,
                      "relationships": "mine_party_appt",
                    },
                  ],
                ],
              },
              "handleSearch": [Function],
              "handleSubmit": undefined,
              "initialValues": Object {},
              "partyRelationshipTypesList": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="landing-page__header"
          >
            <div
              className="inline-flex between center-mobile center-mobile"
            >
              <div>
                <h1>
                  Contact Lookup
                </h1>
                <p>
                  To find a contact profile, search in the list section below.
                </p>
              </div>
            </div>
          </div>,
          <div
            className="landing-page__content"
          >
            <ContactSearch
              fetchParties={
                [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "relationships": "mine_party_appt",
                      },
                    ],
                    Array [
                      Object {
                        "page": undefined,
                        "per_page": undefined,
                        "relationships": "mine_party_appt",
                      },
                    ],
                  ],
                }
              }
              handleSearch={[Function]}
              handleSubmit={undefined}
              initialValues={Object {}}
              partyRelationshipTypesList={undefined}
            />
            <Loading />
          </div>,
        ],
        "className": "landing-page",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="inline-flex between center-mobile center-mobile"
            >
              <div>
                <h1>
                  Contact Lookup
                </h1>
                <p>
                  To find a contact profile, search in the list section below.
                </p>
              </div>
            </div>,
            "className": "landing-page__header",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div>
                <h1>
                  Contact Lookup
                </h1>
                <p>
                  To find a contact profile, search in the list section below.
                </p>
              </div>,
              "className": "inline-flex between center-mobile center-mobile",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    Contact Lookup
                  </h1>,
                  <p>
                    To find a contact profile, search in the list section below.
                  </p>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Contact Lookup",
                  },
                  "ref": null,
                  "rendered": "Contact Lookup",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "To find a contact profile, search in the list section below.",
                  },
                  "ref": null,
                  "rendered": "To find a contact profile, search in the list section below.",
                  "type": "p",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <ContactSearch
                fetchParties={
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "relationships": "mine_party_appt",
                        },
                      ],
                      Array [
                        Object {
                          "page": undefined,
                          "per_page": undefined,
                          "relationships": "mine_party_appt",
                        },
                      ],
                    ],
                  }
                }
                handleSearch={[Function]}
                handleSubmit={undefined}
                initialValues={Object {}}
                partyRelationshipTypesList={undefined}
              />,
              false,
              <Loading />,
            ],
            "className": "landing-page__content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "fetchParties": [MockFunction] {
                  "calls": Array [
                    Array [
                      Object {
                        "relationships": "mine_party_appt",
                      },
                    ],
                    Array [
                      Object {
                        "page": undefined,
                        "per_page": undefined,
                        "relationships": "mine_party_appt",
                      },
                    ],
                  ],
                },
                "handleSearch": [Function],
                "handleSubmit": undefined,
                "initialValues": Object {},
                "partyRelationshipTypesList": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
