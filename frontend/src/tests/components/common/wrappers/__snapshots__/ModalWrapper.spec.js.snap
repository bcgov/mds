// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalWrapper renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModalWrapper
    clearOnSubmit={false}
    closeModal={[MockFunction]}
    content={[MockFunction]}
    isModalOpen={false}
    props={
      Object {
        "title": "mockTitle",
      }
    }
    widthSize={520}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "cancelButtonDisabled": false,
      "children": Array [
        <Popconfirm
          cancelText="No"
          icon={
            <Icon
              theme="filled"
              type="exclamation-circle"
            />
          }
          okText="Yes"
          okType="primary"
          onConfirm={[Function]}
          placement="bottomRight"
          prefixCls="ant-popover"
          title="Are you sure you want to cancel?"
          transitionName="zoom-big"
          trigger="click"
        >
          <Button
            block={false}
            className="modal__close"
            ghost={true}
            loading={false}
            prefixCls="ant-btn"
          >
            <Icon
              type="close"
            />
          </Button>
        </Popconfirm>,
        <Connect(LoadingBar)
          scope="modal"
          style={
            Object {
              "backgroundColor": "#5e46a1",
              "height": "8px",
              "left": 0,
              "position": "absolute",
              "top": "50px",
              "width": "100%",
              "zIndex": 100,
            }
          }
        />,
        <mockConstructor
          clearOnSubmit={false}
          closeModal={[MockFunction]}
          title="mockTitle"
        />,
      ],
      "closable": false,
      "confirmLoading": false,
      "footer": null,
      "maskTransitionName": "fade",
      "okButtonDisabled": false,
      "okType": "primary",
      "prefixCls": "ant-modal",
      "title": "mockTitle",
      "transitionName": "zoom",
      "visible": false,
      "width": 520,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "cancelText": "No",
          "children": <Button
            block={false}
            className="modal__close"
            ghost={true}
            loading={false}
            prefixCls="ant-btn"
          >
            <Icon
              type="close"
            />
          </Button>,
          "icon": <Icon
            theme="filled"
            type="exclamation-circle"
          />,
          "okText": "Yes",
          "okType": "primary",
          "onConfirm": [Function],
          "placement": "bottomRight",
          "prefixCls": "ant-popover",
          "title": "Are you sure you want to cancel?",
          "transitionName": "zoom-big",
          "trigger": "click",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": false,
            "children": <Icon
              type="close"
            />,
            "className": "modal__close",
            "ghost": true,
            "loading": false,
            "prefixCls": "ant-btn",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "type": "close",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "scope": "modal",
          "style": Object {
            "backgroundColor": "#5e46a1",
            "height": "8px",
            "left": 0,
            "position": "absolute",
            "top": "50px",
            "width": "100%",
            "zIndex": 100,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "clearOnSubmit": false,
          "closeModal": [MockFunction],
          "title": "mockTitle",
        },
        "ref": null,
        "rendered": null,
        "type": [MockFunction],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "cancelButtonDisabled": false,
        "children": Array [
          <Popconfirm
            cancelText="No"
            icon={
              <Icon
                theme="filled"
                type="exclamation-circle"
              />
            }
            okText="Yes"
            okType="primary"
            onConfirm={[Function]}
            placement="bottomRight"
            prefixCls="ant-popover"
            title="Are you sure you want to cancel?"
            transitionName="zoom-big"
            trigger="click"
          >
            <Button
              block={false}
              className="modal__close"
              ghost={true}
              loading={false}
              prefixCls="ant-btn"
            >
              <Icon
                type="close"
              />
            </Button>
          </Popconfirm>,
          <Connect(LoadingBar)
            scope="modal"
            style={
              Object {
                "backgroundColor": "#5e46a1",
                "height": "8px",
                "left": 0,
                "position": "absolute",
                "top": "50px",
                "width": "100%",
                "zIndex": 100,
              }
            }
          />,
          <mockConstructor
            clearOnSubmit={false}
            closeModal={[MockFunction]}
            title="mockTitle"
          />,
        ],
        "closable": false,
        "confirmLoading": false,
        "footer": null,
        "maskTransitionName": "fade",
        "okButtonDisabled": false,
        "okType": "primary",
        "prefixCls": "ant-modal",
        "title": "mockTitle",
        "transitionName": "zoom",
        "visible": false,
        "width": 520,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cancelText": "No",
            "children": <Button
              block={false}
              className="modal__close"
              ghost={true}
              loading={false}
              prefixCls="ant-btn"
            >
              <Icon
                type="close"
              />
            </Button>,
            "icon": <Icon
              theme="filled"
              type="exclamation-circle"
            />,
            "okText": "Yes",
            "okType": "primary",
            "onConfirm": [Function],
            "placement": "bottomRight",
            "prefixCls": "ant-popover",
            "title": "Are you sure you want to cancel?",
            "transitionName": "zoom-big",
            "trigger": "click",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "block": false,
              "children": <Icon
                type="close"
              />,
              "className": "modal__close",
              "ghost": true,
              "loading": false,
              "prefixCls": "ant-btn",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "type": "close",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "scope": "modal",
            "style": Object {
              "backgroundColor": "#5e46a1",
              "height": "8px",
              "left": 0,
              "position": "absolute",
              "top": "50px",
              "width": "100%",
              "zIndex": 100,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "clearOnSubmit": false,
            "closeModal": [MockFunction],
            "title": "mockTitle",
          },
          "ref": null,
          "rendered": null,
          "type": [MockFunction],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
