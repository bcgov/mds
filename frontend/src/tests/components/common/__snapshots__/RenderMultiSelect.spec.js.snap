// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RenderMultiSelect renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RenderMultiSelect
    data={
      Array [
        "18133c75-49ad-4101-85f3-a43e35ae989a",
        "18145c75-49ad-0101-85f3-a43e45ae989a",
      ]
    }
    disabled={false}
    id="1"
    input=""
    label=""
    meta={
      Object {
        "error": false,
        "touched": false,
        "warning": false,
      }
    }
    onSearch={[Function]}
    option={
      Object {
        "18133c75-49ad-4101-85f3-a43e35ae989a": Object {
          "guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
          "name": "mock name",
        },
        "18145c75-49ad-0101-85f3-a43e45ae989a": Object {
          "guid": "18145c75-49ad-0101-85f3-a43e45ae989a",
          "name": "mock Two",
        },
      }
    }
    placeholder=""
    type=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <FormItem
        colon={true}
        hasFeedback={false}
        help={false}
        label=""
        prefixCls="ant-form"
        validateStatus=""
      >
        <Select
          choiceTransitionName="zoom"
          disabled={false}
          filterOption={[Function]}
          getPopupContainer={[Function]}
          id="1"
          mode="multiple"
          onSearch={[Function]}
          placeholder=""
          prefixCls="ant-select"
          showSearch={false}
          transitionName="slide-up"
        >
          <Option />
          <Option />
        </Select>
      </FormItem>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Select
          choiceTransitionName="zoom"
          disabled={false}
          filterOption={[Function]}
          getPopupContainer={[Function]}
          id="1"
          mode="multiple"
          onSearch={[Function]}
          placeholder=""
          prefixCls="ant-select"
          showSearch={false}
          transitionName="slide-up"
        >
          <Option />
          <Option />
        </Select>,
        "colon": true,
        "hasFeedback": false,
        "help": false,
        "label": "",
        "prefixCls": "ant-form",
        "validateStatus": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Option />,
            <Option />,
          ],
          "choiceTransitionName": "zoom",
          "disabled": false,
          "filterOption": [Function],
          "getPopupContainer": [Function],
          "id": "1",
          "mode": "multiple",
          "onSearch": [Function],
          "placeholder": "",
          "prefixCls": "ant-select",
          "showSearch": false,
          "transitionName": "slide-up",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <FormItem
          colon={true}
          hasFeedback={false}
          help={false}
          label=""
          prefixCls="ant-form"
          validateStatus=""
        >
          <Select
            choiceTransitionName="zoom"
            disabled={false}
            filterOption={[Function]}
            getPopupContainer={[Function]}
            id="1"
            mode="multiple"
            onSearch={[Function]}
            placeholder=""
            prefixCls="ant-select"
            showSearch={false}
            transitionName="slide-up"
          >
            <Option />
            <Option />
          </Select>
        </FormItem>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Select
            choiceTransitionName="zoom"
            disabled={false}
            filterOption={[Function]}
            getPopupContainer={[Function]}
            id="1"
            mode="multiple"
            onSearch={[Function]}
            placeholder=""
            prefixCls="ant-select"
            showSearch={false}
            transitionName="slide-up"
          >
            <Option />
            <Option />
          </Select>,
          "colon": true,
          "hasFeedback": false,
          "help": false,
          "label": "",
          "prefixCls": "ant-form",
          "validateStatus": "",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Option />,
              <Option />,
            ],
            "choiceTransitionName": "zoom",
            "disabled": false,
            "filterOption": [Function],
            "getPopupContainer": [Function],
            "id": "1",
            "mode": "multiple",
            "onSearch": [Function],
            "placeholder": "",
            "prefixCls": "ant-select",
            "showSearch": false,
            "transitionName": "slide-up",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
