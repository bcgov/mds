// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResponsivePagination renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ResponsivePagination
    currentPage={1}
    itemsPerPage={25}
    onPageChange={[MockFunction]}
    pageTotal={1000}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <MediaQuery
          maxWidth={500}
          values={Object {}}
        >
          <Pagination
            current={1}
            defaultCurrent={1}
            onChange={[MockFunction]}
            onShowSizeChange={[MockFunction]}
            pageSize={25}
            pageSizeOptions={
              Array [
                "25",
                "50",
                "75",
                "100",
              ]
            }
            prefixCls="ant-pagination"
            selectPrefixCls="ant-select"
            showSizeChanger={true}
            size="small"
            total={1000}
          />
        </MediaQuery>,
        <MediaQuery
          minWidth={501}
          values={Object {}}
        >
          <Pagination
            current={1}
            defaultCurrent={1}
            onChange={[MockFunction]}
            onShowSizeChange={[MockFunction]}
            pageSize={25}
            pageSizeOptions={
              Array [
                "25",
                "50",
                "75",
                "100",
              ]
            }
            prefixCls="ant-pagination"
            selectPrefixCls="ant-select"
            showSizeChanger={true}
            showTotal={[Function]}
            total={1000}
          />
        </MediaQuery>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Pagination
            current={1}
            defaultCurrent={1}
            onChange={[MockFunction]}
            onShowSizeChange={[MockFunction]}
            pageSize={25}
            pageSizeOptions={
              Array [
                "25",
                "50",
                "75",
                "100",
              ]
            }
            prefixCls="ant-pagination"
            selectPrefixCls="ant-select"
            showSizeChanger={true}
            size="small"
            total={1000}
          />,
          "maxWidth": 500,
          "values": Object {},
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "current": 1,
            "defaultCurrent": 1,
            "onChange": [MockFunction],
            "onShowSizeChange": [MockFunction],
            "pageSize": 25,
            "pageSizeOptions": Array [
              "25",
              "50",
              "75",
              "100",
            ],
            "prefixCls": "ant-pagination",
            "selectPrefixCls": "ant-select",
            "showSizeChanger": true,
            "size": "small",
            "total": 1000,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Pagination
            current={1}
            defaultCurrent={1}
            onChange={[MockFunction]}
            onShowSizeChange={[MockFunction]}
            pageSize={25}
            pageSizeOptions={
              Array [
                "25",
                "50",
                "75",
                "100",
              ]
            }
            prefixCls="ant-pagination"
            selectPrefixCls="ant-select"
            showSizeChanger={true}
            showTotal={[Function]}
            total={1000}
          />,
          "minWidth": 501,
          "values": Object {},
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "current": 1,
            "defaultCurrent": 1,
            "onChange": [MockFunction],
            "onShowSizeChange": [MockFunction],
            "pageSize": 25,
            "pageSizeOptions": Array [
              "25",
              "50",
              "75",
              "100",
            ],
            "prefixCls": "ant-pagination",
            "selectPrefixCls": "ant-select",
            "showSizeChanger": true,
            "showTotal": [Function],
            "total": 1000,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <MediaQuery
            maxWidth={500}
            values={Object {}}
          >
            <Pagination
              current={1}
              defaultCurrent={1}
              onChange={[MockFunction]}
              onShowSizeChange={[MockFunction]}
              pageSize={25}
              pageSizeOptions={
                Array [
                  "25",
                  "50",
                  "75",
                  "100",
                ]
              }
              prefixCls="ant-pagination"
              selectPrefixCls="ant-select"
              showSizeChanger={true}
              size="small"
              total={1000}
            />
          </MediaQuery>,
          <MediaQuery
            minWidth={501}
            values={Object {}}
          >
            <Pagination
              current={1}
              defaultCurrent={1}
              onChange={[MockFunction]}
              onShowSizeChange={[MockFunction]}
              pageSize={25}
              pageSizeOptions={
                Array [
                  "25",
                  "50",
                  "75",
                  "100",
                ]
              }
              prefixCls="ant-pagination"
              selectPrefixCls="ant-select"
              showSizeChanger={true}
              showTotal={[Function]}
              total={1000}
            />
          </MediaQuery>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Pagination
              current={1}
              defaultCurrent={1}
              onChange={[MockFunction]}
              onShowSizeChange={[MockFunction]}
              pageSize={25}
              pageSizeOptions={
                Array [
                  "25",
                  "50",
                  "75",
                  "100",
                ]
              }
              prefixCls="ant-pagination"
              selectPrefixCls="ant-select"
              showSizeChanger={true}
              size="small"
              total={1000}
            />,
            "maxWidth": 500,
            "values": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "current": 1,
              "defaultCurrent": 1,
              "onChange": [MockFunction],
              "onShowSizeChange": [MockFunction],
              "pageSize": 25,
              "pageSizeOptions": Array [
                "25",
                "50",
                "75",
                "100",
              ],
              "prefixCls": "ant-pagination",
              "selectPrefixCls": "ant-select",
              "showSizeChanger": true,
              "size": "small",
              "total": 1000,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Pagination
              current={1}
              defaultCurrent={1}
              onChange={[MockFunction]}
              onShowSizeChange={[MockFunction]}
              pageSize={25}
              pageSizeOptions={
                Array [
                  "25",
                  "50",
                  "75",
                  "100",
                ]
              }
              prefixCls="ant-pagination"
              selectPrefixCls="ant-select"
              showSizeChanger={true}
              showTotal={[Function]}
              total={1000}
            />,
            "minWidth": 501,
            "values": Object {},
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "current": 1,
              "defaultCurrent": 1,
              "onChange": [MockFunction],
              "onShowSizeChange": [MockFunction],
              "pageSize": 25,
              "pageSizeOptions": Array [
                "25",
                "50",
                "75",
                "100",
              ],
              "prefixCls": "ant-pagination",
              "selectPrefixCls": "ant-select",
              "showSizeChanger": true,
              "showTotal": [Function],
              "total": 1000,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
