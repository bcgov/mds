// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RenderField renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RenderField
    id={1}
    input=""
    label=""
    meta={
      Object {
        "error": false,
        "touched": false,
        "warning": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="inline-flex"
      >
        <Input
          defaultValue={undefined}
          disabled={false}
          id={1}
          placeholder={undefined}
          prefixCls="ant-input"
          type="text"
        />
      </div>,
      "colon": true,
      "hasFeedback": false,
      "help": false,
      "label": "",
      "prefixCls": "ant-form",
      "validateStatus": "",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          undefined,
          <Input
            defaultValue={undefined}
            disabled={false}
            id={1}
            placeholder={undefined}
            prefixCls="ant-input"
            type="text"
          />,
        ],
        "className": "inline-flex",
      },
      "ref": null,
      "rendered": Array [
        undefined,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultValue": undefined,
            "disabled": false,
            "id": 1,
            "placeholder": undefined,
            "prefixCls": "ant-input",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="inline-flex"
        >
          <Input
            defaultValue={undefined}
            disabled={false}
            id={1}
            placeholder={undefined}
            prefixCls="ant-input"
            type="text"
          />
        </div>,
        "colon": true,
        "hasFeedback": false,
        "help": false,
        "label": "",
        "prefixCls": "ant-form",
        "validateStatus": "",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            undefined,
            <Input
              defaultValue={undefined}
              disabled={false}
              id={1}
              placeholder={undefined}
              prefixCls="ant-input"
              type="text"
            />,
          ],
          "className": "inline-flex",
        },
        "ref": null,
        "rendered": Array [
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultValue": undefined,
              "disabled": false,
              "id": 1,
              "placeholder": undefined,
              "prefixCls": "ant-input",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
