// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavBar renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavBar
    userInfo={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Menu
        className=""
        defaultSelectedKeys={
          Array [
            "1",
          ]
        }
        focusable={false}
        mode="horizontal"
        prefixCls="ant-menu"
        theme="dark"
      >
        <MenuItem>
          <Link
            replace={false}
            to="/dashboard"
          >
            Home
          </Link>
        </MenuItem>
        <MenuItem>
          Logged in as: 
        </MenuItem>
        <MenuItem>
          <Connect(Logout) />
        </MenuItem>
      </Menu>,
      "style": Object {
        "position": "fixed",
        "width": "100%",
        "zIndex": 1,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <MenuItem>
            <Link
              replace={false}
              to="/dashboard"
            >
              Home
            </Link>
          </MenuItem>,
          <MenuItem>
            Logged in as: 
          </MenuItem>,
          <MenuItem>
            <Connect(Logout) />
          </MenuItem>,
        ],
        "className": "",
        "defaultSelectedKeys": Array [
          "1",
        ],
        "focusable": false,
        "mode": "horizontal",
        "prefixCls": "ant-menu",
        "theme": "dark",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "children": <Link
              replace={false}
              to="/dashboard"
            >
              Home
            </Link>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Home",
              "replace": false,
              "to": "/dashboard",
            },
            "ref": null,
            "rendered": "Home",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "class",
          "props": Object {
            "children": Array [
              "Logged in as: ",
              undefined,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Logged in as: ",
            undefined,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "class",
          "props": Object {
            "children": <Connect(Logout) />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Menu
          className=""
          defaultSelectedKeys={
            Array [
              "1",
            ]
          }
          focusable={false}
          mode="horizontal"
          prefixCls="ant-menu"
          theme="dark"
        >
          <MenuItem>
            <Link
              replace={false}
              to="/dashboard"
            >
              Home
            </Link>
          </MenuItem>
          <MenuItem>
            Logged in as: 
          </MenuItem>
          <MenuItem>
            <Connect(Logout) />
          </MenuItem>
        </Menu>,
        "style": Object {
          "position": "fixed",
          "width": "100%",
          "zIndex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <MenuItem>
              <Link
                replace={false}
                to="/dashboard"
              >
                Home
              </Link>
            </MenuItem>,
            <MenuItem>
              Logged in as: 
            </MenuItem>,
            <MenuItem>
              <Connect(Logout) />
            </MenuItem>,
          ],
          "className": "",
          "defaultSelectedKeys": Array [
            "1",
          ],
          "focusable": false,
          "mode": "horizontal",
          "prefixCls": "ant-menu",
          "theme": "dark",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "children": <Link
                replace={false}
                to="/dashboard"
              >
                Home
              </Link>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Home",
                "replace": false,
                "to": "/dashboard",
              },
              "ref": null,
              "rendered": "Home",
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "Logged in as: ",
                undefined,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Logged in as: ",
              undefined,
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "class",
            "props": Object {
              "children": <Connect(Logout) />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
