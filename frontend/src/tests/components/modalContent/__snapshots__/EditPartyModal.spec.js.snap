// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditPartyModal renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditPartyModal
    closeModal={[MockFunction]}
    isPerson={true}
    oSubmit={[MockFunction]}
    provinceOptions={
      Array [
        Object {
          "label": "BC",
          "value": "BC",
        },
        Object {
          "label": "AB",
          "value": "AB",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ReduxForm
        closeModal={[MockFunction]}
        initialValues={undefined}
        isPerson={true}
        onSubmit={undefined}
        provinceOptions={
          Array [
            Object {
              "label": "BC",
              "value": "BC",
            },
            Object {
              "label": "AB",
              "value": "AB",
            },
          ]
        }
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "closeModal": [MockFunction],
        "initialValues": undefined,
        "isPerson": true,
        "onSubmit": undefined,
        "provinceOptions": Array [
          Object {
            "label": "BC",
            "value": "BC",
          },
          Object {
            "label": "AB",
            "value": "AB",
          },
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ReduxForm
          closeModal={[MockFunction]}
          initialValues={undefined}
          isPerson={true}
          onSubmit={undefined}
          provinceOptions={
            Array [
              Object {
                "label": "BC",
                "value": "BC",
              },
              Object {
                "label": "AB",
                "value": "AB",
              },
            ]
          }
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "closeModal": [MockFunction],
          "initialValues": undefined,
          "isPerson": true,
          "onSubmit": undefined,
          "provinceOptions": Array [
            Object {
              "label": "BC",
              "value": "BC",
            },
            Object {
              "label": "AB",
              "value": "AB",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
