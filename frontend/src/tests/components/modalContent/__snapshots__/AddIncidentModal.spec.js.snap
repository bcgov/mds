// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddIncidentModal renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AddIncidentModal
    addDetailFormValues={Object {}}
    addIncidentFormValues={Object {}}
    addReportingFormValues={Object {}}
    closeModal={[MockFunction]}
    doSubparagraphOptions={Object {}}
    followupActionOptions={Object {}}
    incidentDeterminationOptions={Object {}}
    incidentStatusCodeOptions={Object {}}
    initialValues={Object {}}
    inspectors={Object {}}
    onSubmit={[MockFunction]}
    reset={[MockFunction]}
    title="mockTitle"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <div>
          <Steps
            current={0}
          >
            <Step
              title="Initial Report"
            />
            <Step
              title="Add Details"
            />
            <Step
              title="Follow Up"
            />
          </Steps>
          <br />
          <div>
            <ReduxForm
              initialValues={Object {}}
              inspectors={Object {}}
            />
          </div>
          <div
            className="right center-mobile"
          >
            <Popconfirm
              cancelText="No"
              icon={
                <Icon
                  theme="filled"
                  type="exclamation-circle"
                />
              }
              okText="Yes"
              okType="primary"
              onConfirm={[Function]}
              placement="top"
              title="Are you sure you want to cancel?"
              transitionName="zoom-big"
              trigger="click"
            >
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                htmlType="button"
                loading={false}
                type="secondary"
              >
                Cancel
              </Button>
            </Popconfirm>
            <Button
              block={false}
              className="full-mobile"
              disabled={true}
              ghost={false}
              htmlType="button"
              id="step1-next"
              loading={false}
              onClick={[Function]}
              type="tertiary"
            >
              Next
            </Button>
          </div>
        </div>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <Steps
            current={0}
          >
            <Step
              title="Initial Report"
            />
            <Step
              title="Add Details"
            />
            <Step
              title="Follow Up"
            />
          </Steps>
          <br />
          <div>
            <ReduxForm
              initialValues={Object {}}
              inspectors={Object {}}
            />
          </div>
          <div
            className="right center-mobile"
          >
            <Popconfirm
              cancelText="No"
              icon={
                <Icon
                  theme="filled"
                  type="exclamation-circle"
                />
              }
              okText="Yes"
              okType="primary"
              onConfirm={[Function]}
              placement="top"
              title="Are you sure you want to cancel?"
              transitionName="zoom-big"
              trigger="click"
            >
              <Button
                block={false}
                className="full-mobile"
                ghost={false}
                htmlType="button"
                loading={false}
                type="secondary"
              >
                Cancel
              </Button>
            </Popconfirm>
            <Button
              block={false}
              className="full-mobile"
              disabled={true}
              ghost={false}
              htmlType="button"
              id="step1-next"
              loading={false}
              onClick={[Function]}
              type="tertiary"
            >
              Next
            </Button>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Steps
              current={0}
            >
              <Step
                title="Initial Report"
              />
              <Step
                title="Add Details"
              />
              <Step
                title="Follow Up"
              />
            </Steps>,
            <br />,
            <div>
              <ReduxForm
                initialValues={Object {}}
                inspectors={Object {}}
              />
            </div>,
            <div
              className="right center-mobile"
            >
              <Popconfirm
                cancelText="No"
                icon={
                  <Icon
                    theme="filled"
                    type="exclamation-circle"
                  />
                }
                okText="Yes"
                okType="primary"
                onConfirm={[Function]}
                placement="top"
                title="Are you sure you want to cancel?"
                transitionName="zoom-big"
                trigger="click"
              >
                <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  htmlType="button"
                  loading={false}
                  type="secondary"
                >
                  Cancel
                </Button>
              </Popconfirm>
              <Button
                block={false}
                className="full-mobile"
                disabled={true}
                ghost={false}
                htmlType="button"
                id="step1-next"
                loading={false}
                onClick={[Function]}
                type="tertiary"
              >
                Next
              </Button>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Step
                  title="Initial Report"
                />,
                <Step
                  title="Add Details"
                />,
                <Step
                  title="Follow Up"
                />,
              ],
              "current": 0,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "Initial Report",
                "nodeType": "class",
                "props": Object {
                  "title": "Initial Report",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Add Details",
                "nodeType": "class",
                "props": Object {
                  "title": "Add Details",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "Follow Up",
                "nodeType": "class",
                "props": Object {
                  "title": "Follow Up",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ReduxForm
                initialValues={Object {}}
                inspectors={Object {}}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "initialValues": Object {},
                "inspectors": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Popconfirm
                  cancelText="No"
                  icon={
                    <Icon
                      theme="filled"
                      type="exclamation-circle"
                    />
                  }
                  okText="Yes"
                  okType="primary"
                  onConfirm={[Function]}
                  placement="top"
                  title="Are you sure you want to cancel?"
                  transitionName="zoom-big"
                  trigger="click"
                >
                  <Button
                    block={false}
                    className="full-mobile"
                    ghost={false}
                    htmlType="button"
                    loading={false}
                    type="secondary"
                  >
                    Cancel
                  </Button>
                </Popconfirm>,
                <Button
                  block={false}
                  className="full-mobile"
                  disabled={true}
                  ghost={false}
                  htmlType="button"
                  id="step1-next"
                  loading={false}
                  onClick={[Function]}
                  type="tertiary"
                >
                  Next
                </Button>,
              ],
              "className": "right center-mobile",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "cancelText": "No",
                  "children": <Button
                    block={false}
                    className="full-mobile"
                    ghost={false}
                    htmlType="button"
                    loading={false}
                    type="secondary"
                  >
                    Cancel
                  </Button>,
                  "icon": <Icon
                    theme="filled"
                    type="exclamation-circle"
                  />,
                  "okText": "Yes",
                  "okType": "primary",
                  "onConfirm": [Function],
                  "placement": "top",
                  "title": "Are you sure you want to cancel?",
                  "transitionName": "zoom-big",
                  "trigger": "click",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "block": false,
                    "children": "Cancel",
                    "className": "full-mobile",
                    "ghost": false,
                    "htmlType": "button",
                    "loading": false,
                    "type": "secondary",
                  },
                  "ref": null,
                  "rendered": "Cancel",
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "block": false,
                  "children": "Next",
                  "className": "full-mobile",
                  "disabled": true,
                  "ghost": false,
                  "htmlType": "button",
                  "id": "step1-next",
                  "loading": false,
                  "onClick": [Function],
                  "type": "tertiary",
                },
                "ref": null,
                "rendered": "Next",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div>
            <Steps
              current={0}
            >
              <Step
                title="Initial Report"
              />
              <Step
                title="Add Details"
              />
              <Step
                title="Follow Up"
              />
            </Steps>
            <br />
            <div>
              <ReduxForm
                initialValues={Object {}}
                inspectors={Object {}}
              />
            </div>
            <div
              className="right center-mobile"
            >
              <Popconfirm
                cancelText="No"
                icon={
                  <Icon
                    theme="filled"
                    type="exclamation-circle"
                  />
                }
                okText="Yes"
                okType="primary"
                onConfirm={[Function]}
                placement="top"
                title="Are you sure you want to cancel?"
                transitionName="zoom-big"
                trigger="click"
              >
                <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  htmlType="button"
                  loading={false}
                  type="secondary"
                >
                  Cancel
                </Button>
              </Popconfirm>
              <Button
                block={false}
                className="full-mobile"
                disabled={true}
                ghost={false}
                htmlType="button"
                id="step1-next"
                loading={false}
                onClick={[Function]}
                type="tertiary"
              >
                Next
              </Button>
            </div>
          </div>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div>
            <Steps
              current={0}
            >
              <Step
                title="Initial Report"
              />
              <Step
                title="Add Details"
              />
              <Step
                title="Follow Up"
              />
            </Steps>
            <br />
            <div>
              <ReduxForm
                initialValues={Object {}}
                inspectors={Object {}}
              />
            </div>
            <div
              className="right center-mobile"
            >
              <Popconfirm
                cancelText="No"
                icon={
                  <Icon
                    theme="filled"
                    type="exclamation-circle"
                  />
                }
                okText="Yes"
                okType="primary"
                onConfirm={[Function]}
                placement="top"
                title="Are you sure you want to cancel?"
                transitionName="zoom-big"
                trigger="click"
              >
                <Button
                  block={false}
                  className="full-mobile"
                  ghost={false}
                  htmlType="button"
                  loading={false}
                  type="secondary"
                >
                  Cancel
                </Button>
              </Popconfirm>
              <Button
                block={false}
                className="full-mobile"
                disabled={true}
                ghost={false}
                htmlType="button"
                id="step1-next"
                loading={false}
                onClick={[Function]}
                type="tertiary"
              >
                Next
              </Button>
            </div>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Steps
                current={0}
              >
                <Step
                  title="Initial Report"
                />
                <Step
                  title="Add Details"
                />
                <Step
                  title="Follow Up"
                />
              </Steps>,
              <br />,
              <div>
                <ReduxForm
                  initialValues={Object {}}
                  inspectors={Object {}}
                />
              </div>,
              <div
                className="right center-mobile"
              >
                <Popconfirm
                  cancelText="No"
                  icon={
                    <Icon
                      theme="filled"
                      type="exclamation-circle"
                    />
                  }
                  okText="Yes"
                  okType="primary"
                  onConfirm={[Function]}
                  placement="top"
                  title="Are you sure you want to cancel?"
                  transitionName="zoom-big"
                  trigger="click"
                >
                  <Button
                    block={false}
                    className="full-mobile"
                    ghost={false}
                    htmlType="button"
                    loading={false}
                    type="secondary"
                  >
                    Cancel
                  </Button>
                </Popconfirm>
                <Button
                  block={false}
                  className="full-mobile"
                  disabled={true}
                  ghost={false}
                  htmlType="button"
                  id="step1-next"
                  loading={false}
                  onClick={[Function]}
                  type="tertiary"
                >
                  Next
                </Button>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Step
                    title="Initial Report"
                  />,
                  <Step
                    title="Add Details"
                  />,
                  <Step
                    title="Follow Up"
                  />,
                ],
                "current": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "Initial Report",
                  "nodeType": "class",
                  "props": Object {
                    "title": "Initial Report",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Add Details",
                  "nodeType": "class",
                  "props": Object {
                    "title": "Add Details",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "Follow Up",
                  "nodeType": "class",
                  "props": Object {
                    "title": "Follow Up",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ReduxForm
                  initialValues={Object {}}
                  inspectors={Object {}}
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "initialValues": Object {},
                  "inspectors": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Popconfirm
                    cancelText="No"
                    icon={
                      <Icon
                        theme="filled"
                        type="exclamation-circle"
                      />
                    }
                    okText="Yes"
                    okType="primary"
                    onConfirm={[Function]}
                    placement="top"
                    title="Are you sure you want to cancel?"
                    transitionName="zoom-big"
                    trigger="click"
                  >
                    <Button
                      block={false}
                      className="full-mobile"
                      ghost={false}
                      htmlType="button"
                      loading={false}
                      type="secondary"
                    >
                      Cancel
                    </Button>
                  </Popconfirm>,
                  <Button
                    block={false}
                    className="full-mobile"
                    disabled={true}
                    ghost={false}
                    htmlType="button"
                    id="step1-next"
                    loading={false}
                    onClick={[Function]}
                    type="tertiary"
                  >
                    Next
                  </Button>,
                ],
                "className": "right center-mobile",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "cancelText": "No",
                    "children": <Button
                      block={false}
                      className="full-mobile"
                      ghost={false}
                      htmlType="button"
                      loading={false}
                      type="secondary"
                    >
                      Cancel
                    </Button>,
                    "icon": <Icon
                      theme="filled"
                      type="exclamation-circle"
                    />,
                    "okText": "Yes",
                    "okType": "primary",
                    "onConfirm": [Function],
                    "placement": "top",
                    "title": "Are you sure you want to cancel?",
                    "transitionName": "zoom-big",
                    "trigger": "click",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "block": false,
                      "children": "Cancel",
                      "className": "full-mobile",
                      "ghost": false,
                      "htmlType": "button",
                      "loading": false,
                      "type": "secondary",
                    },
                    "ref": null,
                    "rendered": "Cancel",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "block": false,
                    "children": "Next",
                    "className": "full-mobile",
                    "disabled": true,
                    "ghost": false,
                    "htmlType": "button",
                    "id": "step1-next",
                    "loading": false,
                    "onClick": [Function],
                    "type": "tertiary",
                  },
                  "ref": null,
                  "rendered": "Next",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
