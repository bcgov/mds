// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Home
    location={
      Object {
        "pathname": " ",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div
          className="header"
        >
          <Connect(NavBar)
            activeButton=" "
            isMenuOpen={false}
            toggleHamburgerMenu={[Function]}
          />
          <Connect(LoadingBar)
            style={
              Object {
                "backgroundColor": "#5e46a1",
                "height": "8px",
                "position": "fixed",
                "top": 53,
                "width": "100%",
                "zIndex": 1000,
              }
            }
          />
        </div>,
        false,
        false,
        <Adapter
          className="content"
        >
          <DashboardRoutes />
          <BackTop
            visibilityHeight={400}
          >
            <Button
              block={false}
              ghost={false}
              loading={false}
              prefixCls="ant-btn"
              type="primary"
            >
              <Icon
                theme="outlined"
                type="arrow-up"
              />
            </Button>
          </BackTop>
        </Adapter>,
        <div
          className="footer"
        />,
      ],
      "className": "layout",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Connect(NavBar)
              activeButton=" "
              isMenuOpen={false}
              toggleHamburgerMenu={[Function]}
            />,
            <Connect(LoadingBar)
              style={
                Object {
                  "backgroundColor": "#5e46a1",
                  "height": "8px",
                  "position": "fixed",
                  "top": 53,
                  "width": "100%",
                  "zIndex": 1000,
                }
              }
            />,
          ],
          "className": "header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeButton": " ",
              "isMenuOpen": false,
              "toggleHamburgerMenu": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "style": Object {
                "backgroundColor": "#5e46a1",
                "height": "8px",
                "position": "fixed",
                "top": 53,
                "width": "100%",
                "zIndex": 1000,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      false,
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <DashboardRoutes />,
            <BackTop
              visibilityHeight={400}
            >
              <Button
                block={false}
                ghost={false}
                loading={false}
                prefixCls="ant-btn"
                type="primary"
              >
                <Icon
                  theme="outlined"
                  type="arrow-up"
                />
              </Button>
            </BackTop>,
          ],
          "className": "content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Button
                block={false}
                ghost={false}
                loading={false}
                prefixCls="ant-btn"
                type="primary"
              >
                <Icon
                  theme="outlined"
                  type="arrow-up"
                />
              </Button>,
              "visibilityHeight": 400,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "block": false,
                "children": <Icon
                  theme="outlined"
                  type="arrow-up"
                />,
                "ghost": false,
                "loading": false,
                "prefixCls": "ant-btn",
                "type": "primary",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "theme": "outlined",
                  "type": "arrow-up",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "footer",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className="header"
          >
            <Connect(NavBar)
              activeButton=" "
              isMenuOpen={false}
              toggleHamburgerMenu={[Function]}
            />
            <Connect(LoadingBar)
              style={
                Object {
                  "backgroundColor": "#5e46a1",
                  "height": "8px",
                  "position": "fixed",
                  "top": 53,
                  "width": "100%",
                  "zIndex": 1000,
                }
              }
            />
          </div>,
          false,
          false,
          <Adapter
            className="content"
          >
            <DashboardRoutes />
            <BackTop
              visibilityHeight={400}
            >
              <Button
                block={false}
                ghost={false}
                loading={false}
                prefixCls="ant-btn"
                type="primary"
              >
                <Icon
                  theme="outlined"
                  type="arrow-up"
                />
              </Button>
            </BackTop>
          </Adapter>,
          <div
            className="footer"
          />,
        ],
        "className": "layout",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Connect(NavBar)
                activeButton=" "
                isMenuOpen={false}
                toggleHamburgerMenu={[Function]}
              />,
              <Connect(LoadingBar)
                style={
                  Object {
                    "backgroundColor": "#5e46a1",
                    "height": "8px",
                    "position": "fixed",
                    "top": 53,
                    "width": "100%",
                    "zIndex": 1000,
                  }
                }
              />,
            ],
            "className": "header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeButton": " ",
                "isMenuOpen": false,
                "toggleHamburgerMenu": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "style": Object {
                  "backgroundColor": "#5e46a1",
                  "height": "8px",
                  "position": "fixed",
                  "top": 53,
                  "width": "100%",
                  "zIndex": 1000,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        false,
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <DashboardRoutes />,
              <BackTop
                visibilityHeight={400}
              >
                <Button
                  block={false}
                  ghost={false}
                  loading={false}
                  prefixCls="ant-btn"
                  type="primary"
                >
                  <Icon
                    theme="outlined"
                    type="arrow-up"
                  />
                </Button>
              </BackTop>,
            ],
            "className": "content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Button
                  block={false}
                  ghost={false}
                  loading={false}
                  prefixCls="ant-btn"
                  type="primary"
                >
                  <Icon
                    theme="outlined"
                    type="arrow-up"
                  />
                </Button>,
                "visibilityHeight": 400,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "block": false,
                  "children": <Icon
                    theme="outlined"
                    type="arrow-up"
                  />,
                  "ghost": false,
                  "loading": false,
                  "prefixCls": "ant-btn",
                  "type": "primary",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "theme": "outlined",
                    "type": "arrow-up",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "footer",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
