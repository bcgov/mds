// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddPersonnelFrom renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UpdateMineManagerForm
    handleSubmit={[MockFunction]}
    personnel={Object {}}
    personnelIds={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Row
          gutter={16}
        >
          <Col
            span={12}
          >
            <FormItem
              colon={true}
              hasFeedback={false}
              prefixCls="ant-form"
            >
              <Field
                component={[Function]}
                data={Array []}
                id="mineManager"
                label="Mine Manager"
                name="mineManager"
                option={Object {}}
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
          <Col
            span={12}
          >
            <FormItem
              colon={true}
              hasFeedback={false}
              prefixCls="ant-form"
            >
              <Field
                component={[Function]}
                id="startDate"
                label="Select a Start date"
                name="startDate"
                validate={
                  Array [
                    [Function],
                  ]
                }
              />
            </FormItem>
          </Col>
        </Row>,
        <Button
          block={false}
          ghost={false}
          htmlType="submit"
          loading={false}
          prefixCls="ant-btn"
          type="primary"
        >
          Update Mine Manager
        </Button>,
      ],
      "hideRequiredMark": false,
      "layout": "vertical",
      "onSubmit": [MockFunction],
      "prefixCls": "ant-form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Col
              span={12}
            >
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  data={Array []}
                  id="mineManager"
                  label="Mine Manager"
                  name="mineManager"
                  option={Object {}}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
            <Col
              span={12}
            >
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="startDate"
                  label="Select a Start date"
                  name="startDate"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>,
          ],
          "gutter": 16,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  data={Array []}
                  id="mineManager"
                  label="Mine Manager"
                  name="mineManager"
                  option={Object {}}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>,
              "span": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  data={Array []}
                  id="mineManager"
                  label="Mine Manager"
                  name="mineManager"
                  option={Object {}}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />,
                "colon": true,
                "hasFeedback": false,
                "prefixCls": "ant-form",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "data": Array [],
                  "id": "mineManager",
                  "label": "Mine Manager",
                  "name": "mineManager",
                  "option": Object {},
                  "validate": Array [
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="startDate"
                  label="Select a Start date"
                  name="startDate"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>,
              "span": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Field
                  component={[Function]}
                  id="startDate"
                  label="Select a Start date"
                  name="startDate"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />,
                "colon": true,
                "hasFeedback": false,
                "prefixCls": "ant-form",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "id": "startDate",
                  "label": "Select a Start date",
                  "name": "startDate",
                  "validate": Array [
                    [Function],
                  ],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "block": false,
          "children": "Update Mine Manager",
          "ghost": false,
          "htmlType": "submit",
          "loading": false,
          "prefixCls": "ant-btn",
          "type": "primary",
        },
        "ref": null,
        "rendered": "Update Mine Manager",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Row
            gutter={16}
          >
            <Col
              span={12}
            >
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  data={Array []}
                  id="mineManager"
                  label="Mine Manager"
                  name="mineManager"
                  option={Object {}}
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
            <Col
              span={12}
            >
              <FormItem
                colon={true}
                hasFeedback={false}
                prefixCls="ant-form"
              >
                <Field
                  component={[Function]}
                  id="startDate"
                  label="Select a Start date"
                  name="startDate"
                  validate={
                    Array [
                      [Function],
                    ]
                  }
                />
              </FormItem>
            </Col>
          </Row>,
          <Button
            block={false}
            ghost={false}
            htmlType="submit"
            loading={false}
            prefixCls="ant-btn"
            type="primary"
          >
            Update Mine Manager
          </Button>,
        ],
        "hideRequiredMark": false,
        "layout": "vertical",
        "onSubmit": [MockFunction],
        "prefixCls": "ant-form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Col
                span={12}
              >
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    data={Array []}
                    id="mineManager"
                    label="Mine Manager"
                    name="mineManager"
                    option={Object {}}
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>
              </Col>,
              <Col
                span={12}
              >
                <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="startDate"
                    label="Select a Start date"
                    name="startDate"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>
              </Col>,
            ],
            "gutter": 16,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    data={Array []}
                    id="mineManager"
                    label="Mine Manager"
                    name="mineManager"
                    option={Object {}}
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                "span": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    data={Array []}
                    id="mineManager"
                    label="Mine Manager"
                    name="mineManager"
                    option={Object {}}
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />,
                  "colon": true,
                  "hasFeedback": false,
                  "prefixCls": "ant-form",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "data": Array [],
                    "id": "mineManager",
                    "label": "Mine Manager",
                    "name": "mineManager",
                    "option": Object {},
                    "validate": Array [
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <FormItem
                  colon={true}
                  hasFeedback={false}
                  prefixCls="ant-form"
                >
                  <Field
                    component={[Function]}
                    id="startDate"
                    label="Select a Start date"
                    name="startDate"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />
                </FormItem>,
                "span": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Field
                    component={[Function]}
                    id="startDate"
                    label="Select a Start date"
                    name="startDate"
                    validate={
                      Array [
                        [Function],
                      ]
                    }
                  />,
                  "colon": true,
                  "hasFeedback": false,
                  "prefixCls": "ant-form",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "id": "startDate",
                    "label": "Select a Start date",
                    "name": "startDate",
                    "validate": Array [
                      [Function],
                    ],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "block": false,
            "children": "Update Mine Manager",
            "ghost": false,
            "htmlType": "submit",
            "loading": false,
            "prefixCls": "ant-btn",
            "type": "primary",
          },
          "ref": null,
          "rendered": "Update Mine Manager",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getSnapshotBeforeUpdate": true,
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
