// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MineHeader renders dispatchProperly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MineHeader
    closeModal={[MockFunction]}
    fetchMineRecordById={[MockFunction]}
    mine={
      Object {
        "mine_expected_documents": Array [
          Object {
            "date_created": "2018-11-19",
            "due_date": "",
            "exp_document_guid": "806608ed-d2b4-4f83-8b22-739d5223c56f",
            "exp_document_name": "OMS Manual",
            "expected_document_status": Object {
              "description": "Not Received",
              "exp_document_status_code": "MIA",
            },
            "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
            "related_documents": Array [],
            "req_document_guid": "c95886bc-e4b2-4743-b38d-42eea858e9ee",
          },
        ],
        "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
        "mine_location": Object {
          "latitude": null,
          "longitude": null,
        },
        "mine_name": "mine3",
        "mine_no": "BLAH9091",
        "mine_permit": Array [],
        "mine_region": "NE",
        "mine_status": Object {
          "effective_date": "2018-10-16",
          "expiry_date": null,
          "status_labels": Array [
            "Closed",
            "Care & Maintenance",
          ],
          "statusvalue": Array [
            "CLD",
            "CM",
          ],
        },
        "mine_tailings_storage_facilities": Array [
          Object {
            "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
            "mine_tailings_storage_facility_guid": "e2629897-053e-4218-9299-479375e47f78",
            "mine_tailings_storage_facility_name": "MockTSF",
          },
        ],
        "mine_type": Array [
          Object {
            "mine_tenure_type_code": "PLR",
          },
          Object {
            "mine_tenure_type_code": "MIN",
          },
        ],
        "mineral_tenure_xref": Array [
          Object {
            "tenure_number_id": "1234567",
          },
        ],
        "verified_status": Object {
          "healthy_ind": null,
          "mine_guid": null,
          "mine_name": null,
          "verifying_timestamp": null,
          "verifying_user": null,
        },
      }
    }
    mineRegionHash={
      Object {
        "NE": "North East",
        "NW": "North West",
        "SC": "South Central",
        "SE": "South East",
        "SW": "South West",
      }
    }
    mineRegionOptions={
      Array [
        Object {
          "label": "South West",
          "value": "SW",
        },
        Object {
          "label": "South Central",
          "value": "SC",
        },
        Object {
          "label": "North West",
          "value": "NW",
        },
        Object {
          "label": "North East",
          "value": "NE",
        },
        Object {
          "label": "South East",
          "value": "SE",
        },
      ]
    }
    mineStatusOptions={
      Array [
        Object {
          "description": "The permittee is not able or available to meet permit obligations. The Ministry has taken over responsibility for the mine. Reclamation work is under way. There are long-term care and maintenance activities on site. Contractors are performing the work.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Orphaned",
            "mine_operation_status_reason_code": "ORP",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Long Term Maintenance",
            "mine_operation_status_sub_reason_code": "LTM",
          },
          "mine_status_xref_guid": "0b14738f-7980-49ba-b447-ff5a1859dded",
        },
        Object {
          "description": "The mine is closed and not expected to re-open. Reclamation work is under way. There are long-term care and maintenance activities on site. Permit and HSRC obligations are still in place. Site is subject to inspection and still has reporting to file with the Ministry.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Reclamation",
            "mine_operation_status_reason_code": "REC",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Long Term Maintenance",
            "mine_operation_status_sub_reason_code": "LTM",
          },
          "mine_status_xref_guid": "b001f941-2421-43a5-aade-f52fe4aecbd1",
        },
        Object {
          "description": "The permittee is not able or available to meet permit obligations. The Ministry has taken over responsibility for the mine. Reclamation work is under way. There are long-term care and maintenance activities on site in addition to water treatment. Contractors are performing the work.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Orphaned",
            "mine_operation_status_reason_code": "ORP",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Long Term Maintenance & Water Treatment",
            "mine_operation_status_sub_reason_code": "LWT",
          },
          "mine_status_xref_guid": "1c04fe6a-ce61-4e0a-be69-2a4130dfaa18",
        },
        Object {
          "description": "The mine is closed and not expected to re-open. Reclamation work is under way. There are long-term care and maintenance activities on site in addition to water treatment. Permit and HSRC obligations are still in place. Site is subject to inspection and still has reporting to file with the Ministry.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Reclamation",
            "mine_operation_status_reason_code": "REC",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Long Term Maintenance & Water Treatment",
            "mine_operation_status_sub_reason_code": "LWT",
          },
          "mine_status_xref_guid": "044f007d-caa6-4139-8891-1a65935ee595",
        },
        Object {
          "description": "Reclamation work is complete, no additional care required. Ministry needs to return bond and close permit for mine to be Abandoned.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Reclamation",
            "mine_operation_status_reason_code": "REC",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Permit Release Pending",
            "mine_operation_status_sub_reason_code": "PRP",
          },
          "mine_status_xref_guid": "d360d834-b483-4e1a-8057-f85c9df8f184",
        },
        Object {
          "description": "The permittee is not able or available to meet permit obligations. The Ministry has taken over responsibility for the mine. Reclamation work has not started. A contractor has not been retained to perform the work.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Orphaned",
            "mine_operation_status_reason_code": "ORP",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Reclamation Not Started",
            "mine_operation_status_sub_reason_code": "RNS",
          },
          "mine_status_xref_guid": "efe8ee38-2abe-4ca7-9e42-ff1d3a142188",
        },
        Object {
          "description": "The permittee is not able or available to meet permit obligations. The Ministry will take over responsibility for the mine. The site needs to be visited and assessed to determine status and work required.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Orphaned",
            "mine_operation_status_reason_code": "ORP",
          },
          "mine_operation_status_sub_reason": Object {
            "description": "Site Visit Required",
            "mine_operation_status_sub_reason_code": "SVR",
          },
          "mine_status_xref_guid": "c419022a-5b13-4146-b23f-770d0f4c4337",
        },
        Object {
          "description": "The mine site is shut down, the permit obligations have been fulfilled. Bond has been returned if permittee completed reclamation work.",
          "mine_operation_status": Object {
            "description": "Abandoned",
            "mine_operation_status_code": "ABN",
          },
          "mine_operation_status_reason": Object {
            "description": null,
            "mine_operation_status_reason_code": null,
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "1397385d-80a5-47a0-a796-e6be9c28de06",
        },
        Object {
          "description": null,
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": null,
            "mine_operation_status_reason_code": null,
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "4c431538-2c2c-4010-9f65-e4d67db96818",
        },
        Object {
          "description": "No mine related work has started at this site (including exploration). The mine record may have been created as placeholder for an exploration permit. Sites with closed exploration permits that are constructing production facilities also fit into this category.",
          "mine_operation_status": Object {
            "description": "Not Started",
            "mine_operation_status_code": "NS",
          },
          "mine_operation_status_reason": Object {
            "description": null,
            "mine_operation_status_reason_code": null,
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "d4b402ce-84ec-4c8f-a531-5e4abc110cdc",
        },
        Object {
          "description": "This mine operates seasonally. Dates shown are from the most recently approved NoW application. Confirm operating dates with operator or permittee before visiting.",
          "mine_operation_status": Object {
            "description": "Operating",
            "mine_operation_status_code": "OP",
          },
          "mine_operation_status_reason": Object {
            "description": "Seasonal",
            "mine_operation_status_reason_code": "SEA",
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "1ef87948-17f8-4a06-8589-afc1bb4f4dd6",
        },
        Object {
          "description": "This mine operates year-round (can be conducting exploration and/or production activities).",
          "mine_operation_status": Object {
            "description": "Operating",
            "mine_operation_status_code": "OP",
          },
          "mine_operation_status_reason": Object {
            "description": "Year round",
            "mine_operation_status_reason_code": "YR",
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "0b86ff77-fdcf-4e81-a6fc-2401e2f53c23",
        },
        Object {
          "description": "Ministry has not determined if the permittee is able or available to meet permit obligations. A visit to the site is required.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Unknown",
            "mine_operation_status_reason_code": "UN",
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "f3e60c05-b3df-4a6b-83b5-f5f390ca1c71",
        },
        Object {
          "description": "The mine is temporarily closed. It is expected that it will eventually re-open. Permit and HSRC obligations are still in place. Site is subject to inspection and still has reporting to file with the Ministry.",
          "mine_operation_status": Object {
            "description": "Closed",
            "mine_operation_status_code": "CLD",
          },
          "mine_operation_status_reason": Object {
            "description": "Care & Maintenance",
            "mine_operation_status_reason_code": "CM",
          },
          "mine_operation_status_sub_reason": Object {
            "description": null,
            "mine_operation_status_sub_reason_code": null,
          },
          "mine_status_xref_guid": "887873b5-6298-42db-a712-3fee5946fefe",
        },
      ]
    }
    mineTenureHash={
      Object {
        "BCL": "BC Land",
        "COL": "Coal",
        "MIN": "Mineral",
        "PLR": "Placer",
      }
    }
    mineTenureTypes={
      Array [
        Object {
          "label": "Coal",
          "value": "COL",
        },
        Object {
          "label": "Mineral",
          "value": "MIN",
        },
        Object {
          "label": "Placer",
          "value": "PLR",
        },
        Object {
          "label": "BC Land",
          "value": "BCL",
        },
      ]
    }
    openModal={[MockFunction]}
    refreshActions={Array []}
    refreshListActions={Array []}
    refreshRequests={Array []}
    transformedMineTypes={
      Object {
        "mine_commodity_code": Array [],
        "mine_disturbance_code": Array [],
        "mine_tenure_type_code": Array [],
      }
    }
    updateMineRecord={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="dashboard__header--card__content"
        >
          <div
            className="inline-flex between center-mobile"
          >
            <h1>
              mine3
            </h1>
            <div>
              <div />
              <Dropdown
                className="full-height full-mobile"
                mouseEnterDelay={0.15}
                mouseLeaveDelay={0.1}
                onVisibleChange={[Function]}
                overlay={
                  <Menu>
                    <Connect(AuthorizationWrapper)
                      isMajorMine={undefined}
                      permission="role_edit_mines"
                    >
                      <MenuItem
                        onClick={[Function]}
                      >
                        <div
                          className="custom-menu-item"
                        >
                          <button
                            className="full"
                            onClick={[Function]}
                            type="button"
                          >
                            <img
                              alt="pencil"
                              className="padding-small"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                            Update Mine Record
                          </button>
                        </div>
                      </MenuItem>
                    </Connect(AuthorizationWrapper)>
                    <Connect(AuthorizationWrapper)
                      isMajorMine={undefined}
                      permission="role_edit_mines"
                    >
                      <MenuItem
                        onClick={[Function]}
                      >
                        <div
                          className="custom-menu-item"
                        >
                          <button
                            className="full"
                            onClick={[Function]}
                            type="button"
                          >
                            <img
                              alt="document"
                              className="padding-small"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                            + Add TSF
                          </button>
                        </div>
                      </MenuItem>
                    </Connect(AuthorizationWrapper)>
                    <div
                      className="custom-menu-item"
                    >
                      <button
                        className="full"
                        onClick={undefined}
                        type="button"
                      >
                        <img
                          alt="document"
                          className="padding-small"
                          src={
                            Object {
                              "process": [Function],
                            }
                          }
                        />
                        Subscribe
                      </button>
                    </div>
                    <Connect(AuthorizationWrapper)
                      permission="role_admin"
                    >
                      <div
                        className="custom-menu-item"
                      >
                        <Popconfirm
                          cancelText="No"
                          icon={
                            <Icon
                              theme="filled"
                              type="exclamation-circle"
                            />
                          }
                          okText="Yes"
                          okType="primary"
                          onConfirm={[Function]}
                          placement="left"
                          title="Are you sure?"
                          transitionName="zoom-big"
                          trigger="click"
                        >
                          <button
                            className="full"
                            type="button"
                          >
                            <img
                              alt="checkmark"
                              className="padding-small"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                              width="30"
                            />
                            Verify Mine Data
                          </button>
                        </Popconfirm>
                      </div>
                      <div
                        className="custom-menu-item"
                      >
                        <Popconfirm
                          cancelText="No"
                          icon={
                            <Icon
                              theme="filled"
                              type="exclamation-circle"
                            />
                          }
                          okText="Yes"
                          okType="primary"
                          onConfirm={[Function]}
                          placement="left"
                          title="Are you sure?"
                          transitionName="zoom-big"
                          trigger="click"
                        >
                          <button
                            className="full"
                            type="button"
                          >
                            <img
                              alt="hazard"
                              className="padding-small"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                              width="30"
                            />
                            Mark Data for Verification
                          </button>
                        </Popconfirm>
                      </div>
                    </Connect(AuthorizationWrapper)>
                  </Menu>
                }
                placement="bottomLeft"
                visible={false}
              >
                <Button
                  block={false}
                  ghost={false}
                  htmlType="button"
                  loading={false}
                  type="primary"
                >
                  <div
                    className="padding-small"
                  >
                    <img
                      alt="Add/Edit"
                      className="padding-small--right"
                      src={
                        Object {
                          "process": [Function],
                        }
                      }
                    />
                    Add/Edit
                  </div>
                </Button>
              </Dropdown>
            </div>
          </div>
          <Divider
            className="custom-large-divider"
          />
          <div
            className="inline-flex between block-mobile"
          >
            <div
              className="inline-flex padding-small"
            >
              <p
                className="field-title"
              >
                Mine No. 
              </p>
              <p>
                 
                BLAH9091
                 
              </p>
            </div>
            <div
              className="inline-flex padding-small"
            >
              <p
                className="field-title"
              >
                Mine Class 
              </p>
              <p>
                Regional mine
              </p>
            </div>
            <div
              className="inline-flex padding-small"
            >
              <p
                className="field-title"
              >
                TSF
              </p>
              <p>
                1
              </p>
            </div>
          </div>
          <div
            className="inline-flex padding-small"
          >
            <p
              className="field-title"
            >
              Operating Status
            </p>
            <p>
              N/A
            </p>
          </div>
          <div
            className="inline-flex padding-small"
          >
            <p
              className="field-title"
            >
              Tenure
            </p>
            <div>
              <p>
                N/A
              </p>
            </div>
          </div>
          <div
            className="inline-flex padding-small wrap"
          >
            <p
              className="field-title"
            >
              Commodity
            </p>
            <p>
              N/A
            </p>
          </div>
          <div
            className="inline-flex padding-small wrap"
          >
            <p
              className="field-title"
            >
              Disturbance
            </p>
            <p>
              N/A
            </p>
          </div>
          <div
            className="inline-flex padding-small wrap"
          >
            <p
              className="field-title"
            >
              Notes
            </p>
            <div>
              <p>
                N/A
              </p>
            </div>
          </div>
        </div>,
        <div
          className="dashboard__header--card__map"
        >
          <MineHeaderMap
            lat={null}
            long={null}
            mine={
              Object {
                "mine_expected_documents": Array [
                  Object {
                    "date_created": "2018-11-19",
                    "due_date": "",
                    "exp_document_guid": "806608ed-d2b4-4f83-8b22-739d5223c56f",
                    "exp_document_name": "OMS Manual",
                    "expected_document_status": Object {
                      "description": "Not Received",
                      "exp_document_status_code": "MIA",
                    },
                    "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                    "related_documents": Array [],
                    "req_document_guid": "c95886bc-e4b2-4743-b38d-42eea858e9ee",
                  },
                ],
                "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                "mine_location": Object {
                  "latitude": null,
                  "longitude": null,
                },
                "mine_name": "mine3",
                "mine_no": "BLAH9091",
                "mine_permit": Array [],
                "mine_region": "NE",
                "mine_status": Object {
                  "effective_date": "2018-10-16",
                  "expiry_date": null,
                  "status_labels": Array [
                    "Closed",
                    "Care & Maintenance",
                  ],
                  "statusvalue": Array [
                    "CLD",
                    "CM",
                  ],
                },
                "mine_tailings_storage_facilities": Array [
                  Object {
                    "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                    "mine_tailings_storage_facility_guid": "e2629897-053e-4218-9299-479375e47f78",
                    "mine_tailings_storage_facility_name": "MockTSF",
                  },
                ],
                "mine_type": Array [
                  Object {
                    "mine_tenure_type_code": "PLR",
                  },
                  Object {
                    "mine_tenure_type_code": "MIN",
                  },
                ],
                "mineral_tenure_xref": Array [
                  Object {
                    "tenure_number_id": "1234567",
                  },
                ],
                "verified_status": Object {
                  "healthy_ind": null,
                  "mine_guid": null,
                  "mine_name": null,
                  "verifying_timestamp": null,
                  "verifying_user": null,
                },
              }
            }
          />
          <div
            className="dashboard__header--card__map--footer"
          >
            <div
              className="inline-flex between"
            >
              <p
                className="p-white"
              >
                Lat:
                 
              </p>
              <p
                className="p-white"
              >
                Long:
                 
              </p>
            </div>
            <div
              className="inline-flex between"
            >
              <p
                className="p-white"
              >
                Region:
                 
                North East
              </p>
              <Link
                className="link-on-dark"
                replace={false}
                target="_blank"
                to="/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3"
              >
                View In Full Map
              </Link>
            </div>
          </div>
        </div>,
      ],
      "className": "dashboard__header--card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="inline-flex between center-mobile"
            >
              <h1>
                mine3
              </h1>
              <div>
                <div />
                <Dropdown
                  className="full-height full-mobile"
                  mouseEnterDelay={0.15}
                  mouseLeaveDelay={0.1}
                  onVisibleChange={[Function]}
                  overlay={
                    <Menu>
                      <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_edit_mines"
                      >
                        <MenuItem
                          onClick={[Function]}
                        >
                          <div
                            className="custom-menu-item"
                          >
                            <button
                              className="full"
                              onClick={[Function]}
                              type="button"
                            >
                              <img
                                alt="pencil"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                              Update Mine Record
                            </button>
                          </div>
                        </MenuItem>
                      </Connect(AuthorizationWrapper)>
                      <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_edit_mines"
                      >
                        <MenuItem
                          onClick={[Function]}
                        >
                          <div
                            className="custom-menu-item"
                          >
                            <button
                              className="full"
                              onClick={[Function]}
                              type="button"
                            >
                              <img
                                alt="document"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                              + Add TSF
                            </button>
                          </div>
                        </MenuItem>
                      </Connect(AuthorizationWrapper)>
                      <div
                        className="custom-menu-item"
                      >
                        <button
                          className="full"
                          onClick={undefined}
                          type="button"
                        >
                          <img
                            alt="document"
                            className="padding-small"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                          Subscribe
                        </button>
                      </div>
                      <Connect(AuthorizationWrapper)
                        permission="role_admin"
                      >
                        <div
                          className="custom-menu-item"
                        >
                          <Popconfirm
                            cancelText="No"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Yes"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="left"
                            title="Are you sure?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <button
                              className="full"
                              type="button"
                            >
                              <img
                                alt="checkmark"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                                width="30"
                              />
                              Verify Mine Data
                            </button>
                          </Popconfirm>
                        </div>
                        <div
                          className="custom-menu-item"
                        >
                          <Popconfirm
                            cancelText="No"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Yes"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="left"
                            title="Are you sure?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <button
                              className="full"
                              type="button"
                            >
                              <img
                                alt="hazard"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                                width="30"
                              />
                              Mark Data for Verification
                            </button>
                          </Popconfirm>
                        </div>
                      </Connect(AuthorizationWrapper)>
                    </Menu>
                  }
                  placement="bottomLeft"
                  visible={false}
                >
                  <Button
                    block={false}
                    ghost={false}
                    htmlType="button"
                    loading={false}
                    type="primary"
                  >
                    <div
                      className="padding-small"
                    >
                      <img
                        alt="Add/Edit"
                        className="padding-small--right"
                        src={
                          Object {
                            "process": [Function],
                          }
                        }
                      />
                      Add/Edit
                    </div>
                  </Button>
                </Dropdown>
              </div>
            </div>,
            <Divider
              className="custom-large-divider"
            />,
            <div
              className="inline-flex between block-mobile"
            >
              <div
                className="inline-flex padding-small"
              >
                <p
                  className="field-title"
                >
                  Mine No. 
                </p>
                <p>
                   
                  BLAH9091
                   
                </p>
              </div>
              <div
                className="inline-flex padding-small"
              >
                <p
                  className="field-title"
                >
                  Mine Class 
                </p>
                <p>
                  Regional mine
                </p>
              </div>
              <div
                className="inline-flex padding-small"
              >
                <p
                  className="field-title"
                >
                  TSF
                </p>
                <p>
                  1
                </p>
              </div>
            </div>,
            undefined,
            <div
              className="inline-flex padding-small"
            >
              <p
                className="field-title"
              >
                Operating Status
              </p>
              <p>
                N/A
              </p>
            </div>,
            <div
              className="inline-flex padding-small"
            >
              <p
                className="field-title"
              >
                Tenure
              </p>
              <div>
                <p>
                  N/A
                </p>
              </div>
            </div>,
            <div
              className="inline-flex padding-small wrap"
            >
              <p
                className="field-title"
              >
                Commodity
              </p>
              <p>
                N/A
              </p>
            </div>,
            <div
              className="inline-flex padding-small wrap"
            >
              <p
                className="field-title"
              >
                Disturbance
              </p>
              <p>
                N/A
              </p>
            </div>,
            <div
              className="inline-flex padding-small wrap"
            >
              <p
                className="field-title"
              >
                Notes
              </p>
              <div>
                <p>
                  N/A
                </p>
              </div>
            </div>,
          ],
          "className": "dashboard__header--card__content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1>
                  mine3
                </h1>,
                <div>
                  <div />
                  <Dropdown
                    className="full-height full-mobile"
                    mouseEnterDelay={0.15}
                    mouseLeaveDelay={0.1}
                    onVisibleChange={[Function]}
                    overlay={
                      <Menu>
                        <Connect(AuthorizationWrapper)
                          isMajorMine={undefined}
                          permission="role_edit_mines"
                        >
                          <MenuItem
                            onClick={[Function]}
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <button
                                className="full"
                                onClick={[Function]}
                                type="button"
                              >
                                <img
                                  alt="pencil"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />
                                Update Mine Record
                              </button>
                            </div>
                          </MenuItem>
                        </Connect(AuthorizationWrapper)>
                        <Connect(AuthorizationWrapper)
                          isMajorMine={undefined}
                          permission="role_edit_mines"
                        >
                          <MenuItem
                            onClick={[Function]}
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <button
                                className="full"
                                onClick={[Function]}
                                type="button"
                              >
                                <img
                                  alt="document"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />
                                + Add TSF
                              </button>
                            </div>
                          </MenuItem>
                        </Connect(AuthorizationWrapper)>
                        <div
                          className="custom-menu-item"
                        >
                          <button
                            className="full"
                            onClick={undefined}
                            type="button"
                          >
                            <img
                              alt="document"
                              className="padding-small"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                            Subscribe
                          </button>
                        </div>
                        <Connect(AuthorizationWrapper)
                          permission="role_admin"
                        >
                          <div
                            className="custom-menu-item"
                          >
                            <Popconfirm
                              cancelText="No"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Yes"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="left"
                              title="Are you sure?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <button
                                className="full"
                                type="button"
                              >
                                <img
                                  alt="checkmark"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                  width="30"
                                />
                                Verify Mine Data
                              </button>
                            </Popconfirm>
                          </div>
                          <div
                            className="custom-menu-item"
                          >
                            <Popconfirm
                              cancelText="No"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Yes"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="left"
                              title="Are you sure?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <button
                                className="full"
                                type="button"
                              >
                                <img
                                  alt="hazard"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                  width="30"
                                />
                                Mark Data for Verification
                              </button>
                            </Popconfirm>
                          </div>
                        </Connect(AuthorizationWrapper)>
                      </Menu>
                    }
                    placement="bottomLeft"
                    visible={false}
                  >
                    <Button
                      block={false}
                      ghost={false}
                      htmlType="button"
                      loading={false}
                      type="primary"
                    >
                      <div
                        className="padding-small"
                      >
                        <img
                          alt="Add/Edit"
                          className="padding-small--right"
                          src={
                            Object {
                              "process": [Function],
                            }
                          }
                        />
                        Add/Edit
                      </div>
                    </Button>
                  </Dropdown>
                </div>,
              ],
              "className": "inline-flex between center-mobile",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "mine3",
                    false,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "mine3",
                  false,
                ],
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    undefined,
                    <div />,
                    <Dropdown
                      className="full-height full-mobile"
                      mouseEnterDelay={0.15}
                      mouseLeaveDelay={0.1}
                      onVisibleChange={[Function]}
                      overlay={
                        <Menu>
                          <Connect(AuthorizationWrapper)
                            isMajorMine={undefined}
                            permission="role_edit_mines"
                          >
                            <MenuItem
                              onClick={[Function]}
                            >
                              <div
                                className="custom-menu-item"
                              >
                                <button
                                  className="full"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <img
                                    alt="pencil"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  />
                                  Update Mine Record
                                </button>
                              </div>
                            </MenuItem>
                          </Connect(AuthorizationWrapper)>
                          <Connect(AuthorizationWrapper)
                            isMajorMine={undefined}
                            permission="role_edit_mines"
                          >
                            <MenuItem
                              onClick={[Function]}
                            >
                              <div
                                className="custom-menu-item"
                              >
                                <button
                                  className="full"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <img
                                    alt="document"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  />
                                  + Add TSF
                                </button>
                              </div>
                            </MenuItem>
                          </Connect(AuthorizationWrapper)>
                          <div
                            className="custom-menu-item"
                          >
                            <button
                              className="full"
                              onClick={undefined}
                              type="button"
                            >
                              <img
                                alt="document"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                              Subscribe
                            </button>
                          </div>
                          <Connect(AuthorizationWrapper)
                            permission="role_admin"
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <Popconfirm
                                cancelText="No"
                                icon={
                                  <Icon
                                    theme="filled"
                                    type="exclamation-circle"
                                  />
                                }
                                okText="Yes"
                                okType="primary"
                                onConfirm={[Function]}
                                placement="left"
                                title="Are you sure?"
                                transitionName="zoom-big"
                                trigger="click"
                              >
                                <button
                                  className="full"
                                  type="button"
                                >
                                  <img
                                    alt="checkmark"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                    width="30"
                                  />
                                  Verify Mine Data
                                </button>
                              </Popconfirm>
                            </div>
                            <div
                              className="custom-menu-item"
                            >
                              <Popconfirm
                                cancelText="No"
                                icon={
                                  <Icon
                                    theme="filled"
                                    type="exclamation-circle"
                                  />
                                }
                                okText="Yes"
                                okType="primary"
                                onConfirm={[Function]}
                                placement="left"
                                title="Are you sure?"
                                transitionName="zoom-big"
                                trigger="click"
                              >
                                <button
                                  className="full"
                                  type="button"
                                >
                                  <img
                                    alt="hazard"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                    width="30"
                                  />
                                  Mark Data for Verification
                                </button>
                              </Popconfirm>
                            </div>
                          </Connect(AuthorizationWrapper)>
                        </Menu>
                      }
                      placement="bottomLeft"
                      visible={false}
                    >
                      <Button
                        block={false}
                        ghost={false}
                        htmlType="button"
                        loading={false}
                        type="primary"
                      >
                        <div
                          className="padding-small"
                        >
                          <img
                            alt="Add/Edit"
                            className="padding-small--right"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                          Add/Edit
                        </div>
                      </Button>
                    </Dropdown>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Button
                        block={false}
                        ghost={false}
                        htmlType="button"
                        loading={false}
                        type="primary"
                      >
                        <div
                          className="padding-small"
                        >
                          <img
                            alt="Add/Edit"
                            className="padding-small--right"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                          Add/Edit
                        </div>
                      </Button>,
                      "className": "full-height full-mobile",
                      "mouseEnterDelay": 0.15,
                      "mouseLeaveDelay": 0.1,
                      "onVisibleChange": [Function],
                      "overlay": <Menu>
                        <Connect(AuthorizationWrapper)
                          isMajorMine={undefined}
                          permission="role_edit_mines"
                        >
                          <MenuItem
                            onClick={[Function]}
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <button
                                className="full"
                                onClick={[Function]}
                                type="button"
                              >
                                <img
                                  alt="pencil"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />
                                Update Mine Record
                              </button>
                            </div>
                          </MenuItem>
                        </Connect(AuthorizationWrapper)>
                        <Connect(AuthorizationWrapper)
                          isMajorMine={undefined}
                          permission="role_edit_mines"
                        >
                          <MenuItem
                            onClick={[Function]}
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <button
                                className="full"
                                onClick={[Function]}
                                type="button"
                              >
                                <img
                                  alt="document"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />
                                + Add TSF
                              </button>
                            </div>
                          </MenuItem>
                        </Connect(AuthorizationWrapper)>
                        <div
                          className="custom-menu-item"
                        >
                          <button
                            className="full"
                            onClick={undefined}
                            type="button"
                          >
                            <img
                              alt="document"
                              className="padding-small"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                            Subscribe
                          </button>
                        </div>
                        <Connect(AuthorizationWrapper)
                          permission="role_admin"
                        >
                          <div
                            className="custom-menu-item"
                          >
                            <Popconfirm
                              cancelText="No"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Yes"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="left"
                              title="Are you sure?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <button
                                className="full"
                                type="button"
                              >
                                <img
                                  alt="checkmark"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                  width="30"
                                />
                                Verify Mine Data
                              </button>
                            </Popconfirm>
                          </div>
                          <div
                            className="custom-menu-item"
                          >
                            <Popconfirm
                              cancelText="No"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Yes"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="left"
                              title="Are you sure?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <button
                                className="full"
                                type="button"
                              >
                                <img
                                  alt="hazard"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                  width="30"
                                />
                                Mark Data for Verification
                              </button>
                            </Popconfirm>
                          </div>
                        </Connect(AuthorizationWrapper)>
                      </Menu>,
                      "placement": "bottomLeft",
                      "visible": false,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "block": false,
                        "children": <div
                          className="padding-small"
                        >
                          <img
                            alt="Add/Edit"
                            className="padding-small--right"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                          Add/Edit
                        </div>,
                        "ghost": false,
                        "htmlType": "button",
                        "loading": false,
                        "type": "primary",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <img
                              alt="Add/Edit"
                              className="padding-small--right"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />,
                            "Add/Edit",
                          ],
                          "className": "padding-small",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "alt": "Add/Edit",
                              "className": "padding-small--right",
                              "src": Object {
                                "process": [Function],
                              },
                            },
                            "ref": null,
                            "rendered": null,
                            "type": "img",
                          },
                          "Add/Edit",
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "custom-large-divider",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="inline-flex padding-small"
                >
                  <p
                    className="field-title"
                  >
                    Mine No. 
                  </p>
                  <p>
                     
                    BLAH9091
                     
                  </p>
                </div>,
                <div
                  className="inline-flex padding-small"
                >
                  <p
                    className="field-title"
                  >
                    Mine Class 
                  </p>
                  <p>
                    Regional mine
                  </p>
                </div>,
                <div
                  className="inline-flex padding-small"
                >
                  <p
                    className="field-title"
                  >
                    TSF
                  </p>
                  <p>
                    1
                  </p>
                </div>,
              ],
              "className": "inline-flex between block-mobile",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="field-title"
                    >
                      Mine No. 
                    </p>,
                    <p>
                       
                      BLAH9091
                       
                    </p>,
                  ],
                  "className": "inline-flex padding-small",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Mine No. ",
                      "className": "field-title",
                    },
                    "ref": null,
                    "rendered": "Mine No. ",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        " ",
                        "BLAH9091",
                        " ",
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      " ",
                      "BLAH9091",
                      " ",
                    ],
                    "type": "p",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="field-title"
                    >
                      Mine Class 
                    </p>,
                    <p>
                      Regional mine
                    </p>,
                  ],
                  "className": "inline-flex padding-small",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Mine Class ",
                      "className": "field-title",
                    },
                    "ref": null,
                    "rendered": "Mine Class ",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Regional mine",
                    },
                    "ref": null,
                    "rendered": "Regional mine",
                    "type": "p",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="field-title"
                    >
                      TSF
                    </p>,
                    <p>
                      1
                    </p>,
                  ],
                  "className": "inline-flex padding-small",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "TSF",
                      "className": "field-title",
                    },
                    "ref": null,
                    "rendered": "TSF",
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": 1,
                    },
                    "ref": null,
                    "rendered": 1,
                    "type": "p",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="field-title"
                >
                  Operating Status
                </p>,
                <p>
                  N/A
                </p>,
              ],
              "className": "inline-flex padding-small",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Operating Status",
                  "className": "field-title",
                },
                "ref": null,
                "rendered": "Operating Status",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "N/A",
                },
                "ref": null,
                "rendered": "N/A",
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="field-title"
                >
                  Tenure
                </p>,
                <div>
                  <p>
                    N/A
                  </p>
                </div>,
              ],
              "className": "inline-flex padding-small",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Tenure",
                  "className": "field-title",
                },
                "ref": null,
                "rendered": "Tenure",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p>
                    N/A
                  </p>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "N/A",
                  },
                  "ref": null,
                  "rendered": "N/A",
                  "type": "p",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="field-title"
                >
                  Commodity
                </p>,
                <p>
                  N/A
                </p>,
              ],
              "className": "inline-flex padding-small wrap",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Commodity",
                  "className": "field-title",
                },
                "ref": null,
                "rendered": "Commodity",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "N/A",
                },
                "ref": null,
                "rendered": "N/A",
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="field-title"
                >
                  Disturbance
                </p>,
                <p>
                  N/A
                </p>,
              ],
              "className": "inline-flex padding-small wrap",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Disturbance",
                  "className": "field-title",
                },
                "ref": null,
                "rendered": "Disturbance",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "N/A",
                },
                "ref": null,
                "rendered": "N/A",
                "type": "p",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="field-title"
                >
                  Notes
                </p>,
                <div>
                  <p>
                    N/A
                  </p>
                </div>,
              ],
              "className": "inline-flex padding-small wrap",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Notes",
                  "className": "field-title",
                },
                "ref": null,
                "rendered": "Notes",
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <p>
                    N/A
                  </p>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "N/A",
                  },
                  "ref": null,
                  "rendered": "N/A",
                  "type": "p",
                },
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <MineHeaderMap
              lat={null}
              long={null}
              mine={
                Object {
                  "mine_expected_documents": Array [
                    Object {
                      "date_created": "2018-11-19",
                      "due_date": "",
                      "exp_document_guid": "806608ed-d2b4-4f83-8b22-739d5223c56f",
                      "exp_document_name": "OMS Manual",
                      "expected_document_status": Object {
                        "description": "Not Received",
                        "exp_document_status_code": "MIA",
                      },
                      "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                      "related_documents": Array [],
                      "req_document_guid": "c95886bc-e4b2-4743-b38d-42eea858e9ee",
                    },
                  ],
                  "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                  "mine_location": Object {
                    "latitude": null,
                    "longitude": null,
                  },
                  "mine_name": "mine3",
                  "mine_no": "BLAH9091",
                  "mine_permit": Array [],
                  "mine_region": "NE",
                  "mine_status": Object {
                    "effective_date": "2018-10-16",
                    "expiry_date": null,
                    "status_labels": Array [
                      "Closed",
                      "Care & Maintenance",
                    ],
                    "statusvalue": Array [
                      "CLD",
                      "CM",
                    ],
                  },
                  "mine_tailings_storage_facilities": Array [
                    Object {
                      "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                      "mine_tailings_storage_facility_guid": "e2629897-053e-4218-9299-479375e47f78",
                      "mine_tailings_storage_facility_name": "MockTSF",
                    },
                  ],
                  "mine_type": Array [
                    Object {
                      "mine_tenure_type_code": "PLR",
                    },
                    Object {
                      "mine_tenure_type_code": "MIN",
                    },
                  ],
                  "mineral_tenure_xref": Array [
                    Object {
                      "tenure_number_id": "1234567",
                    },
                  ],
                  "verified_status": Object {
                    "healthy_ind": null,
                    "mine_guid": null,
                    "mine_name": null,
                    "verifying_timestamp": null,
                    "verifying_user": null,
                  },
                }
              }
            />,
            <div
              className="dashboard__header--card__map--footer"
            >
              <div
                className="inline-flex between"
              >
                <p
                  className="p-white"
                >
                  Lat:
                   
                </p>
                <p
                  className="p-white"
                >
                  Long:
                   
                </p>
              </div>
              <div
                className="inline-flex between"
              >
                <p
                  className="p-white"
                >
                  Region:
                   
                  North East
                </p>
                <Link
                  className="link-on-dark"
                  replace={false}
                  target="_blank"
                  to="/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3"
                >
                  View In Full Map
                </Link>
              </div>
            </div>,
          ],
          "className": "dashboard__header--card__map",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "lat": null,
              "long": null,
              "mine": Object {
                "mine_expected_documents": Array [
                  Object {
                    "date_created": "2018-11-19",
                    "due_date": "",
                    "exp_document_guid": "806608ed-d2b4-4f83-8b22-739d5223c56f",
                    "exp_document_name": "OMS Manual",
                    "expected_document_status": Object {
                      "description": "Not Received",
                      "exp_document_status_code": "MIA",
                    },
                    "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                    "related_documents": Array [],
                    "req_document_guid": "c95886bc-e4b2-4743-b38d-42eea858e9ee",
                  },
                ],
                "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                "mine_location": Object {
                  "latitude": null,
                  "longitude": null,
                },
                "mine_name": "mine3",
                "mine_no": "BLAH9091",
                "mine_permit": Array [],
                "mine_region": "NE",
                "mine_status": Object {
                  "effective_date": "2018-10-16",
                  "expiry_date": null,
                  "status_labels": Array [
                    "Closed",
                    "Care & Maintenance",
                  ],
                  "statusvalue": Array [
                    "CLD",
                    "CM",
                  ],
                },
                "mine_tailings_storage_facilities": Array [
                  Object {
                    "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                    "mine_tailings_storage_facility_guid": "e2629897-053e-4218-9299-479375e47f78",
                    "mine_tailings_storage_facility_name": "MockTSF",
                  },
                ],
                "mine_type": Array [
                  Object {
                    "mine_tenure_type_code": "PLR",
                  },
                  Object {
                    "mine_tenure_type_code": "MIN",
                  },
                ],
                "mineral_tenure_xref": Array [
                  Object {
                    "tenure_number_id": "1234567",
                  },
                ],
                "verified_status": Object {
                  "healthy_ind": null,
                  "mine_guid": null,
                  "mine_name": null,
                  "verifying_timestamp": null,
                  "verifying_user": null,
                },
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="inline-flex between"
                >
                  <p
                    className="p-white"
                  >
                    Lat:
                     
                  </p>
                  <p
                    className="p-white"
                  >
                    Long:
                     
                  </p>
                </div>,
                <div
                  className="inline-flex between"
                >
                  <p
                    className="p-white"
                  >
                    Region:
                     
                    North East
                  </p>
                  <Link
                    className="link-on-dark"
                    replace={false}
                    target="_blank"
                    to="/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3"
                  >
                    View In Full Map
                  </Link>
                </div>,
              ],
              "className": "dashboard__header--card__map--footer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="p-white"
                    >
                      Lat:
                       
                    </p>,
                    <p
                      className="p-white"
                    >
                      Long:
                       
                    </p>,
                  ],
                  "className": "inline-flex between",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Lat:",
                        " ",
                        null,
                      ],
                      "className": "p-white",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Lat:",
                      " ",
                      null,
                    ],
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Long:",
                        " ",
                        null,
                      ],
                      "className": "p-white",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Long:",
                      " ",
                      null,
                    ],
                    "type": "p",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <p
                      className="p-white"
                    >
                      Region:
                       
                      North East
                    </p>,
                    <Link
                      className="link-on-dark"
                      replace={false}
                      target="_blank"
                      to="/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3"
                    >
                      View In Full Map
                    </Link>,
                  ],
                  "className": "inline-flex between",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Region:",
                        " ",
                        "North East",
                      ],
                      "className": "p-white",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Region:",
                      " ",
                      "North East",
                    ],
                    "type": "p",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "View In Full Map",
                      "className": "link-on-dark",
                      "replace": false,
                      "target": "_blank",
                      "to": "/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3",
                    },
                    "ref": null,
                    "rendered": "View In Full Map",
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="dashboard__header--card__content"
          >
            <div
              className="inline-flex between center-mobile"
            >
              <h1>
                mine3
              </h1>
              <div>
                <div />
                <Dropdown
                  className="full-height full-mobile"
                  mouseEnterDelay={0.15}
                  mouseLeaveDelay={0.1}
                  onVisibleChange={[Function]}
                  overlay={
                    <Menu>
                      <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_edit_mines"
                      >
                        <MenuItem
                          onClick={[Function]}
                        >
                          <div
                            className="custom-menu-item"
                          >
                            <button
                              className="full"
                              onClick={[Function]}
                              type="button"
                            >
                              <img
                                alt="pencil"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                              Update Mine Record
                            </button>
                          </div>
                        </MenuItem>
                      </Connect(AuthorizationWrapper)>
                      <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_edit_mines"
                      >
                        <MenuItem
                          onClick={[Function]}
                        >
                          <div
                            className="custom-menu-item"
                          >
                            <button
                              className="full"
                              onClick={[Function]}
                              type="button"
                            >
                              <img
                                alt="document"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                              + Add TSF
                            </button>
                          </div>
                        </MenuItem>
                      </Connect(AuthorizationWrapper)>
                      <div
                        className="custom-menu-item"
                      >
                        <button
                          className="full"
                          onClick={undefined}
                          type="button"
                        >
                          <img
                            alt="document"
                            className="padding-small"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                          Subscribe
                        </button>
                      </div>
                      <Connect(AuthorizationWrapper)
                        permission="role_admin"
                      >
                        <div
                          className="custom-menu-item"
                        >
                          <Popconfirm
                            cancelText="No"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Yes"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="left"
                            title="Are you sure?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <button
                              className="full"
                              type="button"
                            >
                              <img
                                alt="checkmark"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                                width="30"
                              />
                              Verify Mine Data
                            </button>
                          </Popconfirm>
                        </div>
                        <div
                          className="custom-menu-item"
                        >
                          <Popconfirm
                            cancelText="No"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Yes"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="left"
                            title="Are you sure?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <button
                              className="full"
                              type="button"
                            >
                              <img
                                alt="hazard"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                                width="30"
                              />
                              Mark Data for Verification
                            </button>
                          </Popconfirm>
                        </div>
                      </Connect(AuthorizationWrapper)>
                    </Menu>
                  }
                  placement="bottomLeft"
                  visible={false}
                >
                  <Button
                    block={false}
                    ghost={false}
                    htmlType="button"
                    loading={false}
                    type="primary"
                  >
                    <div
                      className="padding-small"
                    >
                      <img
                        alt="Add/Edit"
                        className="padding-small--right"
                        src={
                          Object {
                            "process": [Function],
                          }
                        }
                      />
                      Add/Edit
                    </div>
                  </Button>
                </Dropdown>
              </div>
            </div>
            <Divider
              className="custom-large-divider"
            />
            <div
              className="inline-flex between block-mobile"
            >
              <div
                className="inline-flex padding-small"
              >
                <p
                  className="field-title"
                >
                  Mine No. 
                </p>
                <p>
                   
                  BLAH9091
                   
                </p>
              </div>
              <div
                className="inline-flex padding-small"
              >
                <p
                  className="field-title"
                >
                  Mine Class 
                </p>
                <p>
                  Regional mine
                </p>
              </div>
              <div
                className="inline-flex padding-small"
              >
                <p
                  className="field-title"
                >
                  TSF
                </p>
                <p>
                  1
                </p>
              </div>
            </div>
            <div
              className="inline-flex padding-small"
            >
              <p
                className="field-title"
              >
                Operating Status
              </p>
              <p>
                N/A
              </p>
            </div>
            <div
              className="inline-flex padding-small"
            >
              <p
                className="field-title"
              >
                Tenure
              </p>
              <div>
                <p>
                  N/A
                </p>
              </div>
            </div>
            <div
              className="inline-flex padding-small wrap"
            >
              <p
                className="field-title"
              >
                Commodity
              </p>
              <p>
                N/A
              </p>
            </div>
            <div
              className="inline-flex padding-small wrap"
            >
              <p
                className="field-title"
              >
                Disturbance
              </p>
              <p>
                N/A
              </p>
            </div>
            <div
              className="inline-flex padding-small wrap"
            >
              <p
                className="field-title"
              >
                Notes
              </p>
              <div>
                <p>
                  N/A
                </p>
              </div>
            </div>
          </div>,
          <div
            className="dashboard__header--card__map"
          >
            <MineHeaderMap
              lat={null}
              long={null}
              mine={
                Object {
                  "mine_expected_documents": Array [
                    Object {
                      "date_created": "2018-11-19",
                      "due_date": "",
                      "exp_document_guid": "806608ed-d2b4-4f83-8b22-739d5223c56f",
                      "exp_document_name": "OMS Manual",
                      "expected_document_status": Object {
                        "description": "Not Received",
                        "exp_document_status_code": "MIA",
                      },
                      "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                      "related_documents": Array [],
                      "req_document_guid": "c95886bc-e4b2-4743-b38d-42eea858e9ee",
                    },
                  ],
                  "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                  "mine_location": Object {
                    "latitude": null,
                    "longitude": null,
                  },
                  "mine_name": "mine3",
                  "mine_no": "BLAH9091",
                  "mine_permit": Array [],
                  "mine_region": "NE",
                  "mine_status": Object {
                    "effective_date": "2018-10-16",
                    "expiry_date": null,
                    "status_labels": Array [
                      "Closed",
                      "Care & Maintenance",
                    ],
                    "statusvalue": Array [
                      "CLD",
                      "CM",
                    ],
                  },
                  "mine_tailings_storage_facilities": Array [
                    Object {
                      "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                      "mine_tailings_storage_facility_guid": "e2629897-053e-4218-9299-479375e47f78",
                      "mine_tailings_storage_facility_name": "MockTSF",
                    },
                  ],
                  "mine_type": Array [
                    Object {
                      "mine_tenure_type_code": "PLR",
                    },
                    Object {
                      "mine_tenure_type_code": "MIN",
                    },
                  ],
                  "mineral_tenure_xref": Array [
                    Object {
                      "tenure_number_id": "1234567",
                    },
                  ],
                  "verified_status": Object {
                    "healthy_ind": null,
                    "mine_guid": null,
                    "mine_name": null,
                    "verifying_timestamp": null,
                    "verifying_user": null,
                  },
                }
              }
            />
            <div
              className="dashboard__header--card__map--footer"
            >
              <div
                className="inline-flex between"
              >
                <p
                  className="p-white"
                >
                  Lat:
                   
                </p>
                <p
                  className="p-white"
                >
                  Long:
                   
                </p>
              </div>
              <div
                className="inline-flex between"
              >
                <p
                  className="p-white"
                >
                  Region:
                   
                  North East
                </p>
                <Link
                  className="link-on-dark"
                  replace={false}
                  target="_blank"
                  to="/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3"
                >
                  View In Full Map
                </Link>
              </div>
            </div>
          </div>,
        ],
        "className": "dashboard__header--card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="inline-flex between center-mobile"
              >
                <h1>
                  mine3
                </h1>
                <div>
                  <div />
                  <Dropdown
                    className="full-height full-mobile"
                    mouseEnterDelay={0.15}
                    mouseLeaveDelay={0.1}
                    onVisibleChange={[Function]}
                    overlay={
                      <Menu>
                        <Connect(AuthorizationWrapper)
                          isMajorMine={undefined}
                          permission="role_edit_mines"
                        >
                          <MenuItem
                            onClick={[Function]}
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <button
                                className="full"
                                onClick={[Function]}
                                type="button"
                              >
                                <img
                                  alt="pencil"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />
                                Update Mine Record
                              </button>
                            </div>
                          </MenuItem>
                        </Connect(AuthorizationWrapper)>
                        <Connect(AuthorizationWrapper)
                          isMajorMine={undefined}
                          permission="role_edit_mines"
                        >
                          <MenuItem
                            onClick={[Function]}
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <button
                                className="full"
                                onClick={[Function]}
                                type="button"
                              >
                                <img
                                  alt="document"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />
                                + Add TSF
                              </button>
                            </div>
                          </MenuItem>
                        </Connect(AuthorizationWrapper)>
                        <div
                          className="custom-menu-item"
                        >
                          <button
                            className="full"
                            onClick={undefined}
                            type="button"
                          >
                            <img
                              alt="document"
                              className="padding-small"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                            Subscribe
                          </button>
                        </div>
                        <Connect(AuthorizationWrapper)
                          permission="role_admin"
                        >
                          <div
                            className="custom-menu-item"
                          >
                            <Popconfirm
                              cancelText="No"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Yes"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="left"
                              title="Are you sure?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <button
                                className="full"
                                type="button"
                              >
                                <img
                                  alt="checkmark"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                  width="30"
                                />
                                Verify Mine Data
                              </button>
                            </Popconfirm>
                          </div>
                          <div
                            className="custom-menu-item"
                          >
                            <Popconfirm
                              cancelText="No"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Yes"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="left"
                              title="Are you sure?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <button
                                className="full"
                                type="button"
                              >
                                <img
                                  alt="hazard"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                  width="30"
                                />
                                Mark Data for Verification
                              </button>
                            </Popconfirm>
                          </div>
                        </Connect(AuthorizationWrapper)>
                      </Menu>
                    }
                    placement="bottomLeft"
                    visible={false}
                  >
                    <Button
                      block={false}
                      ghost={false}
                      htmlType="button"
                      loading={false}
                      type="primary"
                    >
                      <div
                        className="padding-small"
                      >
                        <img
                          alt="Add/Edit"
                          className="padding-small--right"
                          src={
                            Object {
                              "process": [Function],
                            }
                          }
                        />
                        Add/Edit
                      </div>
                    </Button>
                  </Dropdown>
                </div>
              </div>,
              <Divider
                className="custom-large-divider"
              />,
              <div
                className="inline-flex between block-mobile"
              >
                <div
                  className="inline-flex padding-small"
                >
                  <p
                    className="field-title"
                  >
                    Mine No. 
                  </p>
                  <p>
                     
                    BLAH9091
                     
                  </p>
                </div>
                <div
                  className="inline-flex padding-small"
                >
                  <p
                    className="field-title"
                  >
                    Mine Class 
                  </p>
                  <p>
                    Regional mine
                  </p>
                </div>
                <div
                  className="inline-flex padding-small"
                >
                  <p
                    className="field-title"
                  >
                    TSF
                  </p>
                  <p>
                    1
                  </p>
                </div>
              </div>,
              undefined,
              <div
                className="inline-flex padding-small"
              >
                <p
                  className="field-title"
                >
                  Operating Status
                </p>
                <p>
                  N/A
                </p>
              </div>,
              <div
                className="inline-flex padding-small"
              >
                <p
                  className="field-title"
                >
                  Tenure
                </p>
                <div>
                  <p>
                    N/A
                  </p>
                </div>
              </div>,
              <div
                className="inline-flex padding-small wrap"
              >
                <p
                  className="field-title"
                >
                  Commodity
                </p>
                <p>
                  N/A
                </p>
              </div>,
              <div
                className="inline-flex padding-small wrap"
              >
                <p
                  className="field-title"
                >
                  Disturbance
                </p>
                <p>
                  N/A
                </p>
              </div>,
              <div
                className="inline-flex padding-small wrap"
              >
                <p
                  className="field-title"
                >
                  Notes
                </p>
                <div>
                  <p>
                    N/A
                  </p>
                </div>
              </div>,
            ],
            "className": "dashboard__header--card__content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h1>
                    mine3
                  </h1>,
                  <div>
                    <div />
                    <Dropdown
                      className="full-height full-mobile"
                      mouseEnterDelay={0.15}
                      mouseLeaveDelay={0.1}
                      onVisibleChange={[Function]}
                      overlay={
                        <Menu>
                          <Connect(AuthorizationWrapper)
                            isMajorMine={undefined}
                            permission="role_edit_mines"
                          >
                            <MenuItem
                              onClick={[Function]}
                            >
                              <div
                                className="custom-menu-item"
                              >
                                <button
                                  className="full"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <img
                                    alt="pencil"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  />
                                  Update Mine Record
                                </button>
                              </div>
                            </MenuItem>
                          </Connect(AuthorizationWrapper)>
                          <Connect(AuthorizationWrapper)
                            isMajorMine={undefined}
                            permission="role_edit_mines"
                          >
                            <MenuItem
                              onClick={[Function]}
                            >
                              <div
                                className="custom-menu-item"
                              >
                                <button
                                  className="full"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <img
                                    alt="document"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  />
                                  + Add TSF
                                </button>
                              </div>
                            </MenuItem>
                          </Connect(AuthorizationWrapper)>
                          <div
                            className="custom-menu-item"
                          >
                            <button
                              className="full"
                              onClick={undefined}
                              type="button"
                            >
                              <img
                                alt="document"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                              Subscribe
                            </button>
                          </div>
                          <Connect(AuthorizationWrapper)
                            permission="role_admin"
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <Popconfirm
                                cancelText="No"
                                icon={
                                  <Icon
                                    theme="filled"
                                    type="exclamation-circle"
                                  />
                                }
                                okText="Yes"
                                okType="primary"
                                onConfirm={[Function]}
                                placement="left"
                                title="Are you sure?"
                                transitionName="zoom-big"
                                trigger="click"
                              >
                                <button
                                  className="full"
                                  type="button"
                                >
                                  <img
                                    alt="checkmark"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                    width="30"
                                  />
                                  Verify Mine Data
                                </button>
                              </Popconfirm>
                            </div>
                            <div
                              className="custom-menu-item"
                            >
                              <Popconfirm
                                cancelText="No"
                                icon={
                                  <Icon
                                    theme="filled"
                                    type="exclamation-circle"
                                  />
                                }
                                okText="Yes"
                                okType="primary"
                                onConfirm={[Function]}
                                placement="left"
                                title="Are you sure?"
                                transitionName="zoom-big"
                                trigger="click"
                              >
                                <button
                                  className="full"
                                  type="button"
                                >
                                  <img
                                    alt="hazard"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                    width="30"
                                  />
                                  Mark Data for Verification
                                </button>
                              </Popconfirm>
                            </div>
                          </Connect(AuthorizationWrapper)>
                        </Menu>
                      }
                      placement="bottomLeft"
                      visible={false}
                    >
                      <Button
                        block={false}
                        ghost={false}
                        htmlType="button"
                        loading={false}
                        type="primary"
                      >
                        <div
                          className="padding-small"
                        >
                          <img
                            alt="Add/Edit"
                            className="padding-small--right"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                          Add/Edit
                        </div>
                      </Button>
                    </Dropdown>
                  </div>,
                ],
                "className": "inline-flex between center-mobile",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "mine3",
                      false,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    "mine3",
                    false,
                  ],
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      undefined,
                      <div />,
                      <Dropdown
                        className="full-height full-mobile"
                        mouseEnterDelay={0.15}
                        mouseLeaveDelay={0.1}
                        onVisibleChange={[Function]}
                        overlay={
                          <Menu>
                            <Connect(AuthorizationWrapper)
                              isMajorMine={undefined}
                              permission="role_edit_mines"
                            >
                              <MenuItem
                                onClick={[Function]}
                              >
                                <div
                                  className="custom-menu-item"
                                >
                                  <button
                                    className="full"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <img
                                      alt="pencil"
                                      className="padding-small"
                                      src={
                                        Object {
                                          "process": [Function],
                                        }
                                      }
                                    />
                                    Update Mine Record
                                  </button>
                                </div>
                              </MenuItem>
                            </Connect(AuthorizationWrapper)>
                            <Connect(AuthorizationWrapper)
                              isMajorMine={undefined}
                              permission="role_edit_mines"
                            >
                              <MenuItem
                                onClick={[Function]}
                              >
                                <div
                                  className="custom-menu-item"
                                >
                                  <button
                                    className="full"
                                    onClick={[Function]}
                                    type="button"
                                  >
                                    <img
                                      alt="document"
                                      className="padding-small"
                                      src={
                                        Object {
                                          "process": [Function],
                                        }
                                      }
                                    />
                                    + Add TSF
                                  </button>
                                </div>
                              </MenuItem>
                            </Connect(AuthorizationWrapper)>
                            <div
                              className="custom-menu-item"
                            >
                              <button
                                className="full"
                                onClick={undefined}
                                type="button"
                              >
                                <img
                                  alt="document"
                                  className="padding-small"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />
                                Subscribe
                              </button>
                            </div>
                            <Connect(AuthorizationWrapper)
                              permission="role_admin"
                            >
                              <div
                                className="custom-menu-item"
                              >
                                <Popconfirm
                                  cancelText="No"
                                  icon={
                                    <Icon
                                      theme="filled"
                                      type="exclamation-circle"
                                    />
                                  }
                                  okText="Yes"
                                  okType="primary"
                                  onConfirm={[Function]}
                                  placement="left"
                                  title="Are you sure?"
                                  transitionName="zoom-big"
                                  trigger="click"
                                >
                                  <button
                                    className="full"
                                    type="button"
                                  >
                                    <img
                                      alt="checkmark"
                                      className="padding-small"
                                      src={
                                        Object {
                                          "process": [Function],
                                        }
                                      }
                                      width="30"
                                    />
                                    Verify Mine Data
                                  </button>
                                </Popconfirm>
                              </div>
                              <div
                                className="custom-menu-item"
                              >
                                <Popconfirm
                                  cancelText="No"
                                  icon={
                                    <Icon
                                      theme="filled"
                                      type="exclamation-circle"
                                    />
                                  }
                                  okText="Yes"
                                  okType="primary"
                                  onConfirm={[Function]}
                                  placement="left"
                                  title="Are you sure?"
                                  transitionName="zoom-big"
                                  trigger="click"
                                >
                                  <button
                                    className="full"
                                    type="button"
                                  >
                                    <img
                                      alt="hazard"
                                      className="padding-small"
                                      src={
                                        Object {
                                          "process": [Function],
                                        }
                                      }
                                      width="30"
                                    />
                                    Mark Data for Verification
                                  </button>
                                </Popconfirm>
                              </div>
                            </Connect(AuthorizationWrapper)>
                          </Menu>
                        }
                        placement="bottomLeft"
                        visible={false}
                      >
                        <Button
                          block={false}
                          ghost={false}
                          htmlType="button"
                          loading={false}
                          type="primary"
                        >
                          <div
                            className="padding-small"
                          >
                            <img
                              alt="Add/Edit"
                              className="padding-small--right"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                            Add/Edit
                          </div>
                        </Button>
                      </Dropdown>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Button
                          block={false}
                          ghost={false}
                          htmlType="button"
                          loading={false}
                          type="primary"
                        >
                          <div
                            className="padding-small"
                          >
                            <img
                              alt="Add/Edit"
                              className="padding-small--right"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                            Add/Edit
                          </div>
                        </Button>,
                        "className": "full-height full-mobile",
                        "mouseEnterDelay": 0.15,
                        "mouseLeaveDelay": 0.1,
                        "onVisibleChange": [Function],
                        "overlay": <Menu>
                          <Connect(AuthorizationWrapper)
                            isMajorMine={undefined}
                            permission="role_edit_mines"
                          >
                            <MenuItem
                              onClick={[Function]}
                            >
                              <div
                                className="custom-menu-item"
                              >
                                <button
                                  className="full"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <img
                                    alt="pencil"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  />
                                  Update Mine Record
                                </button>
                              </div>
                            </MenuItem>
                          </Connect(AuthorizationWrapper)>
                          <Connect(AuthorizationWrapper)
                            isMajorMine={undefined}
                            permission="role_edit_mines"
                          >
                            <MenuItem
                              onClick={[Function]}
                            >
                              <div
                                className="custom-menu-item"
                              >
                                <button
                                  className="full"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <img
                                    alt="document"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                  />
                                  + Add TSF
                                </button>
                              </div>
                            </MenuItem>
                          </Connect(AuthorizationWrapper)>
                          <div
                            className="custom-menu-item"
                          >
                            <button
                              className="full"
                              onClick={undefined}
                              type="button"
                            >
                              <img
                                alt="document"
                                className="padding-small"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                              Subscribe
                            </button>
                          </div>
                          <Connect(AuthorizationWrapper)
                            permission="role_admin"
                          >
                            <div
                              className="custom-menu-item"
                            >
                              <Popconfirm
                                cancelText="No"
                                icon={
                                  <Icon
                                    theme="filled"
                                    type="exclamation-circle"
                                  />
                                }
                                okText="Yes"
                                okType="primary"
                                onConfirm={[Function]}
                                placement="left"
                                title="Are you sure?"
                                transitionName="zoom-big"
                                trigger="click"
                              >
                                <button
                                  className="full"
                                  type="button"
                                >
                                  <img
                                    alt="checkmark"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                    width="30"
                                  />
                                  Verify Mine Data
                                </button>
                              </Popconfirm>
                            </div>
                            <div
                              className="custom-menu-item"
                            >
                              <Popconfirm
                                cancelText="No"
                                icon={
                                  <Icon
                                    theme="filled"
                                    type="exclamation-circle"
                                  />
                                }
                                okText="Yes"
                                okType="primary"
                                onConfirm={[Function]}
                                placement="left"
                                title="Are you sure?"
                                transitionName="zoom-big"
                                trigger="click"
                              >
                                <button
                                  className="full"
                                  type="button"
                                >
                                  <img
                                    alt="hazard"
                                    className="padding-small"
                                    src={
                                      Object {
                                        "process": [Function],
                                      }
                                    }
                                    width="30"
                                  />
                                  Mark Data for Verification
                                </button>
                              </Popconfirm>
                            </div>
                          </Connect(AuthorizationWrapper)>
                        </Menu>,
                        "placement": "bottomLeft",
                        "visible": false,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "block": false,
                          "children": <div
                            className="padding-small"
                          >
                            <img
                              alt="Add/Edit"
                              className="padding-small--right"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                            Add/Edit
                          </div>,
                          "ghost": false,
                          "htmlType": "button",
                          "loading": false,
                          "type": "primary",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <img
                                alt="Add/Edit"
                                className="padding-small--right"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />,
                              "Add/Edit",
                            ],
                            "className": "padding-small",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "alt": "Add/Edit",
                                "className": "padding-small--right",
                                "src": Object {
                                  "process": [Function],
                                },
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "img",
                            },
                            "Add/Edit",
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "custom-large-divider",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="inline-flex padding-small"
                  >
                    <p
                      className="field-title"
                    >
                      Mine No. 
                    </p>
                    <p>
                       
                      BLAH9091
                       
                    </p>
                  </div>,
                  <div
                    className="inline-flex padding-small"
                  >
                    <p
                      className="field-title"
                    >
                      Mine Class 
                    </p>
                    <p>
                      Regional mine
                    </p>
                  </div>,
                  <div
                    className="inline-flex padding-small"
                  >
                    <p
                      className="field-title"
                    >
                      TSF
                    </p>
                    <p>
                      1
                    </p>
                  </div>,
                ],
                "className": "inline-flex between block-mobile",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="field-title"
                      >
                        Mine No. 
                      </p>,
                      <p>
                         
                        BLAH9091
                         
                      </p>,
                    ],
                    "className": "inline-flex padding-small",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Mine No. ",
                        "className": "field-title",
                      },
                      "ref": null,
                      "rendered": "Mine No. ",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          "BLAH9091",
                          " ",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        "BLAH9091",
                        " ",
                      ],
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="field-title"
                      >
                        Mine Class 
                      </p>,
                      <p>
                        Regional mine
                      </p>,
                    ],
                    "className": "inline-flex padding-small",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Mine Class ",
                        "className": "field-title",
                      },
                      "ref": null,
                      "rendered": "Mine Class ",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Regional mine",
                      },
                      "ref": null,
                      "rendered": "Regional mine",
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="field-title"
                      >
                        TSF
                      </p>,
                      <p>
                        1
                      </p>,
                    ],
                    "className": "inline-flex padding-small",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "TSF",
                        "className": "field-title",
                      },
                      "ref": null,
                      "rendered": "TSF",
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": 1,
                      },
                      "ref": null,
                      "rendered": 1,
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="field-title"
                  >
                    Operating Status
                  </p>,
                  <p>
                    N/A
                  </p>,
                ],
                "className": "inline-flex padding-small",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Operating Status",
                    "className": "field-title",
                  },
                  "ref": null,
                  "rendered": "Operating Status",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "N/A",
                  },
                  "ref": null,
                  "rendered": "N/A",
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="field-title"
                  >
                    Tenure
                  </p>,
                  <div>
                    <p>
                      N/A
                    </p>
                  </div>,
                ],
                "className": "inline-flex padding-small",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Tenure",
                    "className": "field-title",
                  },
                  "ref": null,
                  "rendered": "Tenure",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <p>
                      N/A
                    </p>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "N/A",
                    },
                    "ref": null,
                    "rendered": "N/A",
                    "type": "p",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="field-title"
                  >
                    Commodity
                  </p>,
                  <p>
                    N/A
                  </p>,
                ],
                "className": "inline-flex padding-small wrap",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Commodity",
                    "className": "field-title",
                  },
                  "ref": null,
                  "rendered": "Commodity",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "N/A",
                  },
                  "ref": null,
                  "rendered": "N/A",
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="field-title"
                  >
                    Disturbance
                  </p>,
                  <p>
                    N/A
                  </p>,
                ],
                "className": "inline-flex padding-small wrap",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Disturbance",
                    "className": "field-title",
                  },
                  "ref": null,
                  "rendered": "Disturbance",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "N/A",
                  },
                  "ref": null,
                  "rendered": "N/A",
                  "type": "p",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <p
                    className="field-title"
                  >
                    Notes
                  </p>,
                  <div>
                    <p>
                      N/A
                    </p>
                  </div>,
                ],
                "className": "inline-flex padding-small wrap",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Notes",
                    "className": "field-title",
                  },
                  "ref": null,
                  "rendered": "Notes",
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <p>
                      N/A
                    </p>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "N/A",
                    },
                    "ref": null,
                    "rendered": "N/A",
                    "type": "p",
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <MineHeaderMap
                lat={null}
                long={null}
                mine={
                  Object {
                    "mine_expected_documents": Array [
                      Object {
                        "date_created": "2018-11-19",
                        "due_date": "",
                        "exp_document_guid": "806608ed-d2b4-4f83-8b22-739d5223c56f",
                        "exp_document_name": "OMS Manual",
                        "expected_document_status": Object {
                          "description": "Not Received",
                          "exp_document_status_code": "MIA",
                        },
                        "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                        "related_documents": Array [],
                        "req_document_guid": "c95886bc-e4b2-4743-b38d-42eea858e9ee",
                      },
                    ],
                    "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                    "mine_location": Object {
                      "latitude": null,
                      "longitude": null,
                    },
                    "mine_name": "mine3",
                    "mine_no": "BLAH9091",
                    "mine_permit": Array [],
                    "mine_region": "NE",
                    "mine_status": Object {
                      "effective_date": "2018-10-16",
                      "expiry_date": null,
                      "status_labels": Array [
                        "Closed",
                        "Care & Maintenance",
                      ],
                      "statusvalue": Array [
                        "CLD",
                        "CM",
                      ],
                    },
                    "mine_tailings_storage_facilities": Array [
                      Object {
                        "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                        "mine_tailings_storage_facility_guid": "e2629897-053e-4218-9299-479375e47f78",
                        "mine_tailings_storage_facility_name": "MockTSF",
                      },
                    ],
                    "mine_type": Array [
                      Object {
                        "mine_tenure_type_code": "PLR",
                      },
                      Object {
                        "mine_tenure_type_code": "MIN",
                      },
                    ],
                    "mineral_tenure_xref": Array [
                      Object {
                        "tenure_number_id": "1234567",
                      },
                    ],
                    "verified_status": Object {
                      "healthy_ind": null,
                      "mine_guid": null,
                      "mine_name": null,
                      "verifying_timestamp": null,
                      "verifying_user": null,
                    },
                  }
                }
              />,
              <div
                className="dashboard__header--card__map--footer"
              >
                <div
                  className="inline-flex between"
                >
                  <p
                    className="p-white"
                  >
                    Lat:
                     
                  </p>
                  <p
                    className="p-white"
                  >
                    Long:
                     
                  </p>
                </div>
                <div
                  className="inline-flex between"
                >
                  <p
                    className="p-white"
                  >
                    Region:
                     
                    North East
                  </p>
                  <Link
                    className="link-on-dark"
                    replace={false}
                    target="_blank"
                    to="/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3"
                  >
                    View In Full Map
                  </Link>
                </div>
              </div>,
            ],
            "className": "dashboard__header--card__map",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "lat": null,
                "long": null,
                "mine": Object {
                  "mine_expected_documents": Array [
                    Object {
                      "date_created": "2018-11-19",
                      "due_date": "",
                      "exp_document_guid": "806608ed-d2b4-4f83-8b22-739d5223c56f",
                      "exp_document_name": "OMS Manual",
                      "expected_document_status": Object {
                        "description": "Not Received",
                        "exp_document_status_code": "MIA",
                      },
                      "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                      "related_documents": Array [],
                      "req_document_guid": "c95886bc-e4b2-4743-b38d-42eea858e9ee",
                    },
                  ],
                  "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                  "mine_location": Object {
                    "latitude": null,
                    "longitude": null,
                  },
                  "mine_name": "mine3",
                  "mine_no": "BLAH9091",
                  "mine_permit": Array [],
                  "mine_region": "NE",
                  "mine_status": Object {
                    "effective_date": "2018-10-16",
                    "expiry_date": null,
                    "status_labels": Array [
                      "Closed",
                      "Care & Maintenance",
                    ],
                    "statusvalue": Array [
                      "CLD",
                      "CM",
                    ],
                  },
                  "mine_tailings_storage_facilities": Array [
                    Object {
                      "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
                      "mine_tailings_storage_facility_guid": "e2629897-053e-4218-9299-479375e47f78",
                      "mine_tailings_storage_facility_name": "MockTSF",
                    },
                  ],
                  "mine_type": Array [
                    Object {
                      "mine_tenure_type_code": "PLR",
                    },
                    Object {
                      "mine_tenure_type_code": "MIN",
                    },
                  ],
                  "mineral_tenure_xref": Array [
                    Object {
                      "tenure_number_id": "1234567",
                    },
                  ],
                  "verified_status": Object {
                    "healthy_ind": null,
                    "mine_guid": null,
                    "mine_name": null,
                    "verifying_timestamp": null,
                    "verifying_user": null,
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="inline-flex between"
                  >
                    <p
                      className="p-white"
                    >
                      Lat:
                       
                    </p>
                    <p
                      className="p-white"
                    >
                      Long:
                       
                    </p>
                  </div>,
                  <div
                    className="inline-flex between"
                  >
                    <p
                      className="p-white"
                    >
                      Region:
                       
                      North East
                    </p>
                    <Link
                      className="link-on-dark"
                      replace={false}
                      target="_blank"
                      to="/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3"
                    >
                      View In Full Map
                    </Link>
                  </div>,
                ],
                "className": "dashboard__header--card__map--footer",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="p-white"
                      >
                        Lat:
                         
                      </p>,
                      <p
                        className="p-white"
                      >
                        Long:
                         
                      </p>,
                    ],
                    "className": "inline-flex between",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Lat:",
                          " ",
                          null,
                        ],
                        "className": "p-white",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Lat:",
                        " ",
                        null,
                      ],
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Long:",
                          " ",
                          null,
                        ],
                        "className": "p-white",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Long:",
                        " ",
                        null,
                      ],
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <p
                        className="p-white"
                      >
                        Region:
                         
                        North East
                      </p>,
                      <Link
                        className="link-on-dark"
                        replace={false}
                        target="_blank"
                        to="/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3"
                      >
                        View In Full Map
                      </Link>,
                    ],
                    "className": "inline-flex between",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "Region:",
                          " ",
                          "North East",
                        ],
                        "className": "p-white",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Region:",
                        " ",
                        "North East",
                      ],
                      "type": "p",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "View In Full Map",
                        "className": "link-on-dark",
                        "replace": false,
                        "target": "_blank",
                        "to": "/dashboard/mines?map=true&lat&long&zoom=14&mineName=mine3",
                      },
                      "ref": null,
                      "rendered": "View In Full Map",
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
