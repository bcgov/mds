// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MineTailingsInfo renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MineTailingsInfo
    closeModal={[MockFunction]}
    expectedDocumentStatusOptions={
      Array [
        Object {
          "description": "Not Received",
          "exp_document_status_code": "MIA",
        },
        Object {
          "description": "Received / Pending Review",
          "exp_document_status_code": "PRE",
        },
        Object {
          "description": "Review In Progress",
          "exp_document_status_code": "RIP",
        },
        Object {
          "description": "Accepted",
          "exp_document_status_code": "ACC",
        },
        Object {
          "description": "Rejected / Waiting On Update",
          "exp_document_status_code": "REJ",
        },
      ]
    }
    fetchExpectedDocumentStatusOptions={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    fetchMineRecordById={[MockFunction]}
    fetchMineTailingsRequiredDocuments={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    match={Object {}}
    mine={
      Object {
        "guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
        "mine_expected_documents": Array [
          Object {
            "date_created": "2018-11-19",
            "due_date": "",
            "exp_document_guid": "806608ed-d2b4-4f83-8b22-739d5223c56f",
            "exp_document_name": "OMS Manual",
            "exp_document_status": Object {
              "description": "Not Received",
              "exp_document_status_code": "MIA",
            },
            "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
            "related_documents": Array [],
            "req_document_guid": "c95886bc-e4b2-4743-b38d-42eea858e9ee",
          },
        ],
        "mine_location": Object {
          "latitude": null,
          "longitude": null,
        },
        "mine_name": "mine3",
        "mine_no": "BLAH9091",
        "mine_permit": Array [],
        "mine_status": Object {
          "effective_date": "2018-10-16",
          "expiry_date": "9999-12-31",
          "status_labels": Array [
            "Closed",
            "Care & Maintenance",
          ],
          "statusvalue": Array [
            "CLD",
            "CM",
          ],
        },
        "mine_tailings_storage_facility": Array [
          Object {
            "mine_guid": "18133c75-49ad-4101-85f3-a43e35ae989a",
            "mine_tailings_storage_facility_guid": "e2629897-053e-4218-9299-479375e47f78",
            "mine_tailings_storage_facility_name": "MockTSF",
          },
        ],
        "mine_type": Array [
          Object {
            "mine_tenure_type_code": "PLR",
          },
          Object {
            "mine_tenure_type_code": "MIN",
          },
        ],
        "mineral_tenure_xref": Array [
          Object {
            "tenure_number_id": "1234567",
          },
        ],
        "region_code": "NE",
      }
    }
    mineTSFRequiredReports={
      Array [
        Object {
          "label": "Annual Reclamation",
          "value": "05388944-afb3-4ef4-9db1-94db72f6060e",
        },
        Object {
          "label": "Annual DSI",
          "value": "ca3f5a58-d7ea-4620-a064-507450f082de",
        },
        Object {
          "label": "5 year DSR",
          "value": "faa99067-3639-4d9c-a3e5-5401df15ad4b",
        },
      ]
    }
    openModal={[MockFunction]}
    updateMineRecord={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        Array [
          <Row
            gutter={16}
            style={
              Object {
                "marginBottom": "10px",
              }
            }
          >
            <Col
              span={6}
            >
              <h3>
                MockTSF
              </h3>
              <p>
                No TSF registry data available
              </p>
            </Col>
          </Row>,
        ],
        <br />,
        <br />,
        <div>
          <h3>
            Reports
          </h3>
          <br />
          <Row
            align="top"
            gutter={16}
            justify="center"
          >
            <Col
              span={1}
            />
            <Col
              span={8}
            >
              <h5>
                Name
              </h5>
            </Col>
            <Col
              span={2}
            >
              <h5>
                Due
              </h5>
            </Col>
            <Col
              span={2}
            >
              <h5>
                Received
              </h5>
            </Col>
            <Col
              span={4}
            >
              <h5>
                Status
              </h5>
            </Col>
            <Col
              span={3}
            >
              <h5>
                Documents
              </h5>
            </Col>
            <Col
              span={4}
            />
          </Row>
          <Divider
            className="thick-divider"
            type="horizontal"
          />
          <div>
            <Row
              align="top"
              gutter={16}
              justify="center"
            >
              <Col
                span={1}
              >
                
              </Col>
              <Col
                id="name-0"
                span={8}
              >
                <h6>
                  OMS Manual
                </h6>
              </Col>
              <Col
                id="due-date-0"
                span={2}
              >
                <h6>
                  -
                </h6>
              </Col>
              <Col
                span={2}
              >
                <h6>
                  -
                </h6>
              </Col>
              <Col
                id="status-0"
                span={4}
              >
                <h6
                  className={null}
                >
                  Not Received
                </h6>
              </Col>
              <Col
                span={3}
              />
              <Col
                align="right"
                span={4}
              >
                <Connect(AuthorizationWrapper)
                  isMajorMine={undefined}
                  permission="role_create"
                >
                  <div
                    className="inline-flex"
                  >
                    <Button
                      block={false}
                      className="full-mobile"
                      ghost={true}
                      loading={false}
                      onClick={[Function]}
                      prefixCls="ant-btn"
                      type="primary"
                    >
                      <img
                        alt="Edit TSF Report"
                        src={
                          Object {
                            "process": [Function],
                          }
                        }
                      />
                    </Button>
                    <Popconfirm
                      cancelText="Cancel"
                      icon={
                        <Icon
                          theme="filled"
                          type="exclamation-circle"
                        />
                      }
                      okText="Delete"
                      okType="primary"
                      onConfirm={[Function]}
                      placement="topLeft"
                      prefixCls="ant-popover"
                      title="Are you sure you want to delete OMS Manual?"
                      transitionName="zoom-big"
                      trigger="click"
                    >
                      <Button
                        block={false}
                        className="full-mobile"
                        ghost={true}
                        loading={false}
                        prefixCls="ant-btn"
                        type="primary"
                      >
                        <Icon
                          theme="outlined"
                          type="minus-circle"
                        />
                      </Button>
                    </Popconfirm>
                  </div>
                </Connect(AuthorizationWrapper)>
              </Col>
            </Row>
            <Divider
              type="horizontal"
            />
          </div>
          <div>
            <Row
              align="top"
              gutter={16}
              justify="center"
            >
              <Col
                align="left"
                span={8}
              >
                <Connect(AuthorizationWrapper)
                  isMajorMine={undefined}
                  permission="role_create"
                >
                  <Button
                    block={false}
                    ghost={true}
                    loading={false}
                    onClick={[Function]}
                    prefixCls="ant-btn"
                    type="secondary"
                  >
                    + Add TSF Report
                  </Button>
                </Connect(AuthorizationWrapper)>
              </Col>
              <Col
                span={12}
              />
              <Col
                align="right"
                span={4}
              />
            </Row>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "e2629897-053e-4218-9299-479375e47f78",
        "nodeType": "class",
        "props": Object {
          "children": <Col
            span={6}
          >
            <h3>
              MockTSF
            </h3>
            <p>
              No TSF registry data available
            </p>
          </Col>,
          "gutter": 16,
          "style": Object {
            "marginBottom": "10px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <h3>
                MockTSF
              </h3>,
              <p>
                No TSF registry data available
              </p>,
            ],
            "span": 6,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "MockTSF",
              },
              "ref": null,
              "rendered": "MockTSF",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "No TSF registry data available",
              },
              "ref": null,
              "rendered": "No TSF registry data available",
              "type": "p",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3>
              Reports
            </h3>,
            <br />,
            <Row
              align="top"
              gutter={16}
              justify="center"
            >
              <Col
                span={1}
              />
              <Col
                span={8}
              >
                <h5>
                  Name
                </h5>
              </Col>
              <Col
                span={2}
              >
                <h5>
                  Due
                </h5>
              </Col>
              <Col
                span={2}
              >
                <h5>
                  Received
                </h5>
              </Col>
              <Col
                span={4}
              >
                <h5>
                  Status
                </h5>
              </Col>
              <Col
                span={3}
              >
                <h5>
                  Documents
                </h5>
              </Col>
              <Col
                span={4}
              />
            </Row>,
            <Divider
              className="thick-divider"
              type="horizontal"
            />,
            Array [
              <div>
                <Row
                  align="top"
                  gutter={16}
                  justify="center"
                >
                  <Col
                    span={1}
                  >
                    
                  </Col>
                  <Col
                    id="name-0"
                    span={8}
                  >
                    <h6>
                      OMS Manual
                    </h6>
                  </Col>
                  <Col
                    id="due-date-0"
                    span={2}
                  >
                    <h6>
                      -
                    </h6>
                  </Col>
                  <Col
                    span={2}
                  >
                    <h6>
                      -
                    </h6>
                  </Col>
                  <Col
                    id="status-0"
                    span={4}
                  >
                    <h6
                      className={null}
                    >
                      Not Received
                    </h6>
                  </Col>
                  <Col
                    span={3}
                  />
                  <Col
                    align="right"
                    span={4}
                  >
                    <Connect(AuthorizationWrapper)
                      isMajorMine={undefined}
                      permission="role_create"
                    >
                      <div
                        className="inline-flex"
                      >
                        <Button
                          block={false}
                          className="full-mobile"
                          ghost={true}
                          loading={false}
                          onClick={[Function]}
                          prefixCls="ant-btn"
                          type="primary"
                        >
                          <img
                            alt="Edit TSF Report"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                        </Button>
                        <Popconfirm
                          cancelText="Cancel"
                          icon={
                            <Icon
                              theme="filled"
                              type="exclamation-circle"
                            />
                          }
                          okText="Delete"
                          okType="primary"
                          onConfirm={[Function]}
                          placement="topLeft"
                          prefixCls="ant-popover"
                          title="Are you sure you want to delete OMS Manual?"
                          transitionName="zoom-big"
                          trigger="click"
                        >
                          <Button
                            block={false}
                            className="full-mobile"
                            ghost={true}
                            loading={false}
                            prefixCls="ant-btn"
                            type="primary"
                          >
                            <Icon
                              theme="outlined"
                              type="minus-circle"
                            />
                          </Button>
                        </Popconfirm>
                      </div>
                    </Connect(AuthorizationWrapper)>
                  </Col>
                </Row>
                <Divider
                  type="horizontal"
                />
              </div>,
            ],
            <div>
              <Row
                align="top"
                gutter={16}
                justify="center"
              >
                <Col
                  align="left"
                  span={8}
                >
                  <Connect(AuthorizationWrapper)
                    isMajorMine={undefined}
                    permission="role_create"
                  >
                    <Button
                      block={false}
                      ghost={true}
                      loading={false}
                      onClick={[Function]}
                      prefixCls="ant-btn"
                      type="secondary"
                    >
                      + Add TSF Report
                    </Button>
                  </Connect(AuthorizationWrapper)>
                </Col>
                <Col
                  span={12}
                />
                <Col
                  align="right"
                  span={4}
                />
              </Row>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Reports",
            },
            "ref": null,
            "rendered": "Reports",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "align": "top",
              "children": Array [
                <Col
                  span={1}
                />,
                <Col
                  span={8}
                >
                  <h5>
                    Name
                  </h5>
                </Col>,
                <Col
                  span={2}
                >
                  <h5>
                    Due
                  </h5>
                </Col>,
                <Col
                  span={2}
                >
                  <h5>
                    Received
                  </h5>
                </Col>,
                <Col
                  span={4}
                >
                  <h5>
                    Status
                  </h5>
                </Col>,
                <Col
                  span={3}
                >
                  <h5>
                    Documents
                  </h5>
                </Col>,
                <Col
                  span={4}
                />,
              ],
              "gutter": 16,
              "justify": "center",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "span": 1,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h5>
                    Name
                  </h5>,
                  "span": 8,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Name",
                  },
                  "ref": null,
                  "rendered": "Name",
                  "type": "h5",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h5>
                    Due
                  </h5>,
                  "span": 2,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Due",
                  },
                  "ref": null,
                  "rendered": "Due",
                  "type": "h5",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h5>
                    Received
                  </h5>,
                  "span": 2,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Received",
                  },
                  "ref": null,
                  "rendered": "Received",
                  "type": "h5",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h5>
                    Status
                  </h5>,
                  "span": 4,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Status",
                  },
                  "ref": null,
                  "rendered": "Status",
                  "type": "h5",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <h5>
                    Documents
                  </h5>,
                  "span": 3,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Documents",
                  },
                  "ref": null,
                  "rendered": "Documents",
                  "type": "h5",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "span": 4,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "thick-divider",
              "type": "horizontal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "806608ed-d2b4-4f83-8b22-739d5223c56f",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Row
                  align="top"
                  gutter={16}
                  justify="center"
                >
                  <Col
                    span={1}
                  >
                    
                  </Col>
                  <Col
                    id="name-0"
                    span={8}
                  >
                    <h6>
                      OMS Manual
                    </h6>
                  </Col>
                  <Col
                    id="due-date-0"
                    span={2}
                  >
                    <h6>
                      -
                    </h6>
                  </Col>
                  <Col
                    span={2}
                  >
                    <h6>
                      -
                    </h6>
                  </Col>
                  <Col
                    id="status-0"
                    span={4}
                  >
                    <h6
                      className={null}
                    >
                      Not Received
                    </h6>
                  </Col>
                  <Col
                    span={3}
                  />
                  <Col
                    align="right"
                    span={4}
                  >
                    <Connect(AuthorizationWrapper)
                      isMajorMine={undefined}
                      permission="role_create"
                    >
                      <div
                        className="inline-flex"
                      >
                        <Button
                          block={false}
                          className="full-mobile"
                          ghost={true}
                          loading={false}
                          onClick={[Function]}
                          prefixCls="ant-btn"
                          type="primary"
                        >
                          <img
                            alt="Edit TSF Report"
                            src={
                              Object {
                                "process": [Function],
                              }
                            }
                          />
                        </Button>
                        <Popconfirm
                          cancelText="Cancel"
                          icon={
                            <Icon
                              theme="filled"
                              type="exclamation-circle"
                            />
                          }
                          okText="Delete"
                          okType="primary"
                          onConfirm={[Function]}
                          placement="topLeft"
                          prefixCls="ant-popover"
                          title="Are you sure you want to delete OMS Manual?"
                          transitionName="zoom-big"
                          trigger="click"
                        >
                          <Button
                            block={false}
                            className="full-mobile"
                            ghost={true}
                            loading={false}
                            prefixCls="ant-btn"
                            type="primary"
                          >
                            <Icon
                              theme="outlined"
                              type="minus-circle"
                            />
                          </Button>
                        </Popconfirm>
                      </div>
                    </Connect(AuthorizationWrapper)>
                  </Col>
                </Row>,
                <Divider
                  type="horizontal"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "align": "top",
                  "children": Array [
                    <Col
                      span={1}
                    >
                      
                    </Col>,
                    <Col
                      id="name-0"
                      span={8}
                    >
                      <h6>
                        OMS Manual
                      </h6>
                    </Col>,
                    <Col
                      id="due-date-0"
                      span={2}
                    >
                      <h6>
                        -
                      </h6>
                    </Col>,
                    <Col
                      span={2}
                    >
                      <h6>
                        -
                      </h6>
                    </Col>,
                    <Col
                      id="status-0"
                      span={4}
                    >
                      <h6
                        className={null}
                      >
                        Not Received
                      </h6>
                    </Col>,
                    <Col
                      span={3}
                    />,
                    <Col
                      align="right"
                      span={4}
                    >
                      <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_create"
                      >
                        <div
                          className="inline-flex"
                        >
                          <Button
                            block={false}
                            className="full-mobile"
                            ghost={true}
                            loading={false}
                            onClick={[Function]}
                            prefixCls="ant-btn"
                            type="primary"
                          >
                            <img
                              alt="Edit TSF Report"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                          </Button>
                          <Popconfirm
                            cancelText="Cancel"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Delete"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="topLeft"
                            prefixCls="ant-popover"
                            title="Are you sure you want to delete OMS Manual?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <Icon
                                theme="outlined"
                                type="minus-circle"
                              />
                            </Button>
                          </Popconfirm>
                        </div>
                      </Connect(AuthorizationWrapper)>
                    </Col>,
                  ],
                  "gutter": 16,
                  "justify": "center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "",
                      "span": 1,
                    },
                    "ref": null,
                    "rendered": "",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <h6>
                        OMS Manual
                      </h6>,
                      "id": "name-0",
                      "span": 8,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "OMS Manual",
                      },
                      "ref": null,
                      "rendered": "OMS Manual",
                      "type": "h6",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <h6>
                        -
                      </h6>,
                      "id": "due-date-0",
                      "span": 2,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "-",
                      },
                      "ref": null,
                      "rendered": "-",
                      "type": "h6",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <h6>
                        -
                      </h6>,
                      "span": 2,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "-",
                      },
                      "ref": null,
                      "rendered": "-",
                      "type": "h6",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <h6
                        className={null}
                      >
                        Not Received
                      </h6>,
                      "id": "status-0",
                      "span": 4,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Not Received",
                        "className": null,
                      },
                      "ref": null,
                      "rendered": "Not Received",
                      "type": "h6",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": Array [],
                      "span": 3,
                    },
                    "ref": null,
                    "rendered": Array [],
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "right",
                      "children": <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_create"
                      >
                        <div
                          className="inline-flex"
                        >
                          <Button
                            block={false}
                            className="full-mobile"
                            ghost={true}
                            loading={false}
                            onClick={[Function]}
                            prefixCls="ant-btn"
                            type="primary"
                          >
                            <img
                              alt="Edit TSF Report"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                          </Button>
                          <Popconfirm
                            cancelText="Cancel"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Delete"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="topLeft"
                            prefixCls="ant-popover"
                            title="Are you sure you want to delete OMS Manual?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <Icon
                                theme="outlined"
                                type="minus-circle"
                              />
                            </Button>
                          </Popconfirm>
                        </div>
                      </Connect(AuthorizationWrapper)>,
                      "span": 4,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <div
                          className="inline-flex"
                        >
                          <Button
                            block={false}
                            className="full-mobile"
                            ghost={true}
                            loading={false}
                            onClick={[Function]}
                            prefixCls="ant-btn"
                            type="primary"
                          >
                            <img
                              alt="Edit TSF Report"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                          </Button>
                          <Popconfirm
                            cancelText="Cancel"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Delete"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="topLeft"
                            prefixCls="ant-popover"
                            title="Are you sure you want to delete OMS Manual?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <Icon
                                theme="outlined"
                                type="minus-circle"
                              />
                            </Button>
                          </Popconfirm>
                        </div>,
                        "isMajorMine": undefined,
                        "permission": "role_create",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              onClick={[Function]}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <img
                                alt="Edit TSF Report"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                            </Button>,
                            <Popconfirm
                              cancelText="Cancel"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Delete"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="topLeft"
                              prefixCls="ant-popover"
                              title="Are you sure you want to delete OMS Manual?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <Button
                                block={false}
                                className="full-mobile"
                                ghost={true}
                                loading={false}
                                prefixCls="ant-btn"
                                type="primary"
                              >
                                <Icon
                                  theme="outlined"
                                  type="minus-circle"
                                />
                              </Button>
                            </Popconfirm>,
                          ],
                          "className": "inline-flex",
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "block": false,
                              "children": <img
                                alt="Edit TSF Report"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />,
                              "className": "full-mobile",
                              "ghost": true,
                              "loading": false,
                              "onClick": [Function],
                              "prefixCls": "ant-btn",
                              "type": "primary",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "alt": "Edit TSF Report",
                                "src": Object {
                                  "process": [Function],
                                },
                              },
                              "ref": null,
                              "rendered": null,
                              "type": "img",
                            },
                            "type": [Function],
                          },
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "cancelText": "Cancel",
                              "children": <Button
                                block={false}
                                className="full-mobile"
                                ghost={true}
                                loading={false}
                                prefixCls="ant-btn"
                                type="primary"
                              >
                                <Icon
                                  theme="outlined"
                                  type="minus-circle"
                                />
                              </Button>,
                              "icon": <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />,
                              "okText": "Delete",
                              "okType": "primary",
                              "onConfirm": [Function],
                              "placement": "topLeft",
                              "prefixCls": "ant-popover",
                              "title": "Are you sure you want to delete OMS Manual?",
                              "transitionName": "zoom-big",
                              "trigger": "click",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "block": false,
                                "children": <Icon
                                  theme="outlined"
                                  type="minus-circle"
                                />,
                                "className": "full-mobile",
                                "ghost": true,
                                "loading": false,
                                "prefixCls": "ant-btn",
                                "type": "primary",
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "function",
                                "props": Object {
                                  "theme": "outlined",
                                  "type": "minus-circle",
                                },
                                "ref": null,
                                "rendered": null,
                                "type": [Function],
                              },
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "type": "horizontal",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": <Row
                align="top"
                gutter={16}
                justify="center"
              >
                <Col
                  align="left"
                  span={8}
                >
                  <Connect(AuthorizationWrapper)
                    isMajorMine={undefined}
                    permission="role_create"
                  >
                    <Button
                      block={false}
                      ghost={true}
                      loading={false}
                      onClick={[Function]}
                      prefixCls="ant-btn"
                      type="secondary"
                    >
                      + Add TSF Report
                    </Button>
                  </Connect(AuthorizationWrapper)>
                </Col>
                <Col
                  span={12}
                />
                <Col
                  align="right"
                  span={4}
                />
              </Row>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "align": "top",
                "children": Array [
                  <Col
                    align="left"
                    span={8}
                  >
                    <Connect(AuthorizationWrapper)
                      isMajorMine={undefined}
                      permission="role_create"
                    >
                      <Button
                        block={false}
                        ghost={true}
                        loading={false}
                        onClick={[Function]}
                        prefixCls="ant-btn"
                        type="secondary"
                      >
                        + Add TSF Report
                      </Button>
                    </Connect(AuthorizationWrapper)>
                  </Col>,
                  <Col
                    span={12}
                  />,
                  <Col
                    align="right"
                    span={4}
                  />,
                ],
                "gutter": 16,
                "justify": "center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "left",
                    "children": <Connect(AuthorizationWrapper)
                      isMajorMine={undefined}
                      permission="role_create"
                    >
                      <Button
                        block={false}
                        ghost={true}
                        loading={false}
                        onClick={[Function]}
                        prefixCls="ant-btn"
                        type="secondary"
                      >
                        + Add TSF Report
                      </Button>
                    </Connect(AuthorizationWrapper)>,
                    "span": 8,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": <Button
                        block={false}
                        ghost={true}
                        loading={false}
                        onClick={[Function]}
                        prefixCls="ant-btn"
                        type="secondary"
                      >
                        + Add TSF Report
                      </Button>,
                      "isMajorMine": undefined,
                      "permission": "role_create",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "block": false,
                        "children": "+ Add TSF Report",
                        "ghost": true,
                        "loading": false,
                        "onClick": [Function],
                        "prefixCls": "ant-btn",
                        "type": "secondary",
                      },
                      "ref": null,
                      "rendered": "+ Add TSF Report",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "span": 12,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "right",
                    "span": 4,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          Array [
            <Row
              gutter={16}
              style={
                Object {
                  "marginBottom": "10px",
                }
              }
            >
              <Col
                span={6}
              >
                <h3>
                  MockTSF
                </h3>
                <p>
                  No TSF registry data available
                </p>
              </Col>
            </Row>,
          ],
          <br />,
          <br />,
          <div>
            <h3>
              Reports
            </h3>
            <br />
            <Row
              align="top"
              gutter={16}
              justify="center"
            >
              <Col
                span={1}
              />
              <Col
                span={8}
              >
                <h5>
                  Name
                </h5>
              </Col>
              <Col
                span={2}
              >
                <h5>
                  Due
                </h5>
              </Col>
              <Col
                span={2}
              >
                <h5>
                  Received
                </h5>
              </Col>
              <Col
                span={4}
              >
                <h5>
                  Status
                </h5>
              </Col>
              <Col
                span={3}
              >
                <h5>
                  Documents
                </h5>
              </Col>
              <Col
                span={4}
              />
            </Row>
            <Divider
              className="thick-divider"
              type="horizontal"
            />
            <div>
              <Row
                align="top"
                gutter={16}
                justify="center"
              >
                <Col
                  span={1}
                >
                  
                </Col>
                <Col
                  id="name-0"
                  span={8}
                >
                  <h6>
                    OMS Manual
                  </h6>
                </Col>
                <Col
                  id="due-date-0"
                  span={2}
                >
                  <h6>
                    -
                  </h6>
                </Col>
                <Col
                  span={2}
                >
                  <h6>
                    -
                  </h6>
                </Col>
                <Col
                  id="status-0"
                  span={4}
                >
                  <h6
                    className={null}
                  >
                    Not Received
                  </h6>
                </Col>
                <Col
                  span={3}
                />
                <Col
                  align="right"
                  span={4}
                >
                  <Connect(AuthorizationWrapper)
                    isMajorMine={undefined}
                    permission="role_create"
                  >
                    <div
                      className="inline-flex"
                    >
                      <Button
                        block={false}
                        className="full-mobile"
                        ghost={true}
                        loading={false}
                        onClick={[Function]}
                        prefixCls="ant-btn"
                        type="primary"
                      >
                        <img
                          alt="Edit TSF Report"
                          src={
                            Object {
                              "process": [Function],
                            }
                          }
                        />
                      </Button>
                      <Popconfirm
                        cancelText="Cancel"
                        icon={
                          <Icon
                            theme="filled"
                            type="exclamation-circle"
                          />
                        }
                        okText="Delete"
                        okType="primary"
                        onConfirm={[Function]}
                        placement="topLeft"
                        prefixCls="ant-popover"
                        title="Are you sure you want to delete OMS Manual?"
                        transitionName="zoom-big"
                        trigger="click"
                      >
                        <Button
                          block={false}
                          className="full-mobile"
                          ghost={true}
                          loading={false}
                          prefixCls="ant-btn"
                          type="primary"
                        >
                          <Icon
                            theme="outlined"
                            type="minus-circle"
                          />
                        </Button>
                      </Popconfirm>
                    </div>
                  </Connect(AuthorizationWrapper)>
                </Col>
              </Row>
              <Divider
                type="horizontal"
              />
            </div>
            <div>
              <Row
                align="top"
                gutter={16}
                justify="center"
              >
                <Col
                  align="left"
                  span={8}
                >
                  <Connect(AuthorizationWrapper)
                    isMajorMine={undefined}
                    permission="role_create"
                  >
                    <Button
                      block={false}
                      ghost={true}
                      loading={false}
                      onClick={[Function]}
                      prefixCls="ant-btn"
                      type="secondary"
                    >
                      + Add TSF Report
                    </Button>
                  </Connect(AuthorizationWrapper)>
                </Col>
                <Col
                  span={12}
                />
                <Col
                  align="right"
                  span={4}
                />
              </Row>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "e2629897-053e-4218-9299-479375e47f78",
          "nodeType": "class",
          "props": Object {
            "children": <Col
              span={6}
            >
              <h3>
                MockTSF
              </h3>
              <p>
                No TSF registry data available
              </p>
            </Col>,
            "gutter": 16,
            "style": Object {
              "marginBottom": "10px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <h3>
                  MockTSF
                </h3>,
                <p>
                  No TSF registry data available
                </p>,
              ],
              "span": 6,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "MockTSF",
                },
                "ref": null,
                "rendered": "MockTSF",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "No TSF registry data available",
                },
                "ref": null,
                "rendered": "No TSF registry data available",
                "type": "p",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3>
                Reports
              </h3>,
              <br />,
              <Row
                align="top"
                gutter={16}
                justify="center"
              >
                <Col
                  span={1}
                />
                <Col
                  span={8}
                >
                  <h5>
                    Name
                  </h5>
                </Col>
                <Col
                  span={2}
                >
                  <h5>
                    Due
                  </h5>
                </Col>
                <Col
                  span={2}
                >
                  <h5>
                    Received
                  </h5>
                </Col>
                <Col
                  span={4}
                >
                  <h5>
                    Status
                  </h5>
                </Col>
                <Col
                  span={3}
                >
                  <h5>
                    Documents
                  </h5>
                </Col>
                <Col
                  span={4}
                />
              </Row>,
              <Divider
                className="thick-divider"
                type="horizontal"
              />,
              Array [
                <div>
                  <Row
                    align="top"
                    gutter={16}
                    justify="center"
                  >
                    <Col
                      span={1}
                    >
                      
                    </Col>
                    <Col
                      id="name-0"
                      span={8}
                    >
                      <h6>
                        OMS Manual
                      </h6>
                    </Col>
                    <Col
                      id="due-date-0"
                      span={2}
                    >
                      <h6>
                        -
                      </h6>
                    </Col>
                    <Col
                      span={2}
                    >
                      <h6>
                        -
                      </h6>
                    </Col>
                    <Col
                      id="status-0"
                      span={4}
                    >
                      <h6
                        className={null}
                      >
                        Not Received
                      </h6>
                    </Col>
                    <Col
                      span={3}
                    />
                    <Col
                      align="right"
                      span={4}
                    >
                      <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_create"
                      >
                        <div
                          className="inline-flex"
                        >
                          <Button
                            block={false}
                            className="full-mobile"
                            ghost={true}
                            loading={false}
                            onClick={[Function]}
                            prefixCls="ant-btn"
                            type="primary"
                          >
                            <img
                              alt="Edit TSF Report"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                          </Button>
                          <Popconfirm
                            cancelText="Cancel"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Delete"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="topLeft"
                            prefixCls="ant-popover"
                            title="Are you sure you want to delete OMS Manual?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <Icon
                                theme="outlined"
                                type="minus-circle"
                              />
                            </Button>
                          </Popconfirm>
                        </div>
                      </Connect(AuthorizationWrapper)>
                    </Col>
                  </Row>
                  <Divider
                    type="horizontal"
                  />
                </div>,
              ],
              <div>
                <Row
                  align="top"
                  gutter={16}
                  justify="center"
                >
                  <Col
                    align="left"
                    span={8}
                  >
                    <Connect(AuthorizationWrapper)
                      isMajorMine={undefined}
                      permission="role_create"
                    >
                      <Button
                        block={false}
                        ghost={true}
                        loading={false}
                        onClick={[Function]}
                        prefixCls="ant-btn"
                        type="secondary"
                      >
                        + Add TSF Report
                      </Button>
                    </Connect(AuthorizationWrapper)>
                  </Col>
                  <Col
                    span={12}
                  />
                  <Col
                    align="right"
                    span={4}
                  />
                </Row>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Reports",
              },
              "ref": null,
              "rendered": "Reports",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "align": "top",
                "children": Array [
                  <Col
                    span={1}
                  />,
                  <Col
                    span={8}
                  >
                    <h5>
                      Name
                    </h5>
                  </Col>,
                  <Col
                    span={2}
                  >
                    <h5>
                      Due
                    </h5>
                  </Col>,
                  <Col
                    span={2}
                  >
                    <h5>
                      Received
                    </h5>
                  </Col>,
                  <Col
                    span={4}
                  >
                    <h5>
                      Status
                    </h5>
                  </Col>,
                  <Col
                    span={3}
                  >
                    <h5>
                      Documents
                    </h5>
                  </Col>,
                  <Col
                    span={4}
                  />,
                ],
                "gutter": 16,
                "justify": "center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "span": 1,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h5>
                      Name
                    </h5>,
                    "span": 8,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Name",
                    },
                    "ref": null,
                    "rendered": "Name",
                    "type": "h5",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h5>
                      Due
                    </h5>,
                    "span": 2,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Due",
                    },
                    "ref": null,
                    "rendered": "Due",
                    "type": "h5",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h5>
                      Received
                    </h5>,
                    "span": 2,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Received",
                    },
                    "ref": null,
                    "rendered": "Received",
                    "type": "h5",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h5>
                      Status
                    </h5>,
                    "span": 4,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Status",
                    },
                    "ref": null,
                    "rendered": "Status",
                    "type": "h5",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <h5>
                      Documents
                    </h5>,
                    "span": 3,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Documents",
                    },
                    "ref": null,
                    "rendered": "Documents",
                    "type": "h5",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "span": 4,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "thick-divider",
                "type": "horizontal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "806608ed-d2b4-4f83-8b22-739d5223c56f",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Row
                    align="top"
                    gutter={16}
                    justify="center"
                  >
                    <Col
                      span={1}
                    >
                      
                    </Col>
                    <Col
                      id="name-0"
                      span={8}
                    >
                      <h6>
                        OMS Manual
                      </h6>
                    </Col>
                    <Col
                      id="due-date-0"
                      span={2}
                    >
                      <h6>
                        -
                      </h6>
                    </Col>
                    <Col
                      span={2}
                    >
                      <h6>
                        -
                      </h6>
                    </Col>
                    <Col
                      id="status-0"
                      span={4}
                    >
                      <h6
                        className={null}
                      >
                        Not Received
                      </h6>
                    </Col>
                    <Col
                      span={3}
                    />
                    <Col
                      align="right"
                      span={4}
                    >
                      <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_create"
                      >
                        <div
                          className="inline-flex"
                        >
                          <Button
                            block={false}
                            className="full-mobile"
                            ghost={true}
                            loading={false}
                            onClick={[Function]}
                            prefixCls="ant-btn"
                            type="primary"
                          >
                            <img
                              alt="Edit TSF Report"
                              src={
                                Object {
                                  "process": [Function],
                                }
                              }
                            />
                          </Button>
                          <Popconfirm
                            cancelText="Cancel"
                            icon={
                              <Icon
                                theme="filled"
                                type="exclamation-circle"
                              />
                            }
                            okText="Delete"
                            okType="primary"
                            onConfirm={[Function]}
                            placement="topLeft"
                            prefixCls="ant-popover"
                            title="Are you sure you want to delete OMS Manual?"
                            transitionName="zoom-big"
                            trigger="click"
                          >
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <Icon
                                theme="outlined"
                                type="minus-circle"
                              />
                            </Button>
                          </Popconfirm>
                        </div>
                      </Connect(AuthorizationWrapper)>
                    </Col>
                  </Row>,
                  <Divider
                    type="horizontal"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "align": "top",
                    "children": Array [
                      <Col
                        span={1}
                      >
                        
                      </Col>,
                      <Col
                        id="name-0"
                        span={8}
                      >
                        <h6>
                          OMS Manual
                        </h6>
                      </Col>,
                      <Col
                        id="due-date-0"
                        span={2}
                      >
                        <h6>
                          -
                        </h6>
                      </Col>,
                      <Col
                        span={2}
                      >
                        <h6>
                          -
                        </h6>
                      </Col>,
                      <Col
                        id="status-0"
                        span={4}
                      >
                        <h6
                          className={null}
                        >
                          Not Received
                        </h6>
                      </Col>,
                      <Col
                        span={3}
                      />,
                      <Col
                        align="right"
                        span={4}
                      >
                        <Connect(AuthorizationWrapper)
                          isMajorMine={undefined}
                          permission="role_create"
                        >
                          <div
                            className="inline-flex"
                          >
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              onClick={[Function]}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <img
                                alt="Edit TSF Report"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                            </Button>
                            <Popconfirm
                              cancelText="Cancel"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Delete"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="topLeft"
                              prefixCls="ant-popover"
                              title="Are you sure you want to delete OMS Manual?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <Button
                                block={false}
                                className="full-mobile"
                                ghost={true}
                                loading={false}
                                prefixCls="ant-btn"
                                type="primary"
                              >
                                <Icon
                                  theme="outlined"
                                  type="minus-circle"
                                />
                              </Button>
                            </Popconfirm>
                          </div>
                        </Connect(AuthorizationWrapper)>
                      </Col>,
                    ],
                    "gutter": 16,
                    "justify": "center",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "",
                        "span": 1,
                      },
                      "ref": null,
                      "rendered": "",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <h6>
                          OMS Manual
                        </h6>,
                        "id": "name-0",
                        "span": 8,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "OMS Manual",
                        },
                        "ref": null,
                        "rendered": "OMS Manual",
                        "type": "h6",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <h6>
                          -
                        </h6>,
                        "id": "due-date-0",
                        "span": 2,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "-",
                        },
                        "ref": null,
                        "rendered": "-",
                        "type": "h6",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <h6>
                          -
                        </h6>,
                        "span": 2,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "-",
                        },
                        "ref": null,
                        "rendered": "-",
                        "type": "h6",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <h6
                          className={null}
                        >
                          Not Received
                        </h6>,
                        "id": "status-0",
                        "span": 4,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Not Received",
                          "className": null,
                        },
                        "ref": null,
                        "rendered": "Not Received",
                        "type": "h6",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": Array [],
                        "span": 3,
                      },
                      "ref": null,
                      "rendered": Array [],
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "align": "right",
                        "children": <Connect(AuthorizationWrapper)
                          isMajorMine={undefined}
                          permission="role_create"
                        >
                          <div
                            className="inline-flex"
                          >
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              onClick={[Function]}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <img
                                alt="Edit TSF Report"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                            </Button>
                            <Popconfirm
                              cancelText="Cancel"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Delete"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="topLeft"
                              prefixCls="ant-popover"
                              title="Are you sure you want to delete OMS Manual?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <Button
                                block={false}
                                className="full-mobile"
                                ghost={true}
                                loading={false}
                                prefixCls="ant-btn"
                                type="primary"
                              >
                                <Icon
                                  theme="outlined"
                                  type="minus-circle"
                                />
                              </Button>
                            </Popconfirm>
                          </div>
                        </Connect(AuthorizationWrapper)>,
                        "span": 4,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <div
                            className="inline-flex"
                          >
                            <Button
                              block={false}
                              className="full-mobile"
                              ghost={true}
                              loading={false}
                              onClick={[Function]}
                              prefixCls="ant-btn"
                              type="primary"
                            >
                              <img
                                alt="Edit TSF Report"
                                src={
                                  Object {
                                    "process": [Function],
                                  }
                                }
                              />
                            </Button>
                            <Popconfirm
                              cancelText="Cancel"
                              icon={
                                <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />
                              }
                              okText="Delete"
                              okType="primary"
                              onConfirm={[Function]}
                              placement="topLeft"
                              prefixCls="ant-popover"
                              title="Are you sure you want to delete OMS Manual?"
                              transitionName="zoom-big"
                              trigger="click"
                            >
                              <Button
                                block={false}
                                className="full-mobile"
                                ghost={true}
                                loading={false}
                                prefixCls="ant-btn"
                                type="primary"
                              >
                                <Icon
                                  theme="outlined"
                                  type="minus-circle"
                                />
                              </Button>
                            </Popconfirm>
                          </div>,
                          "isMajorMine": undefined,
                          "permission": "role_create",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <Button
                                block={false}
                                className="full-mobile"
                                ghost={true}
                                loading={false}
                                onClick={[Function]}
                                prefixCls="ant-btn"
                                type="primary"
                              >
                                <img
                                  alt="Edit TSF Report"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />
                              </Button>,
                              <Popconfirm
                                cancelText="Cancel"
                                icon={
                                  <Icon
                                    theme="filled"
                                    type="exclamation-circle"
                                  />
                                }
                                okText="Delete"
                                okType="primary"
                                onConfirm={[Function]}
                                placement="topLeft"
                                prefixCls="ant-popover"
                                title="Are you sure you want to delete OMS Manual?"
                                transitionName="zoom-big"
                                trigger="click"
                              >
                                <Button
                                  block={false}
                                  className="full-mobile"
                                  ghost={true}
                                  loading={false}
                                  prefixCls="ant-btn"
                                  type="primary"
                                >
                                  <Icon
                                    theme="outlined"
                                    type="minus-circle"
                                  />
                                </Button>
                              </Popconfirm>,
                            ],
                            "className": "inline-flex",
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "block": false,
                                "children": <img
                                  alt="Edit TSF Report"
                                  src={
                                    Object {
                                      "process": [Function],
                                    }
                                  }
                                />,
                                "className": "full-mobile",
                                "ghost": true,
                                "loading": false,
                                "onClick": [Function],
                                "prefixCls": "ant-btn",
                                "type": "primary",
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "host",
                                "props": Object {
                                  "alt": "Edit TSF Report",
                                  "src": Object {
                                    "process": [Function],
                                  },
                                },
                                "ref": null,
                                "rendered": null,
                                "type": "img",
                              },
                              "type": [Function],
                            },
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "cancelText": "Cancel",
                                "children": <Button
                                  block={false}
                                  className="full-mobile"
                                  ghost={true}
                                  loading={false}
                                  prefixCls="ant-btn"
                                  type="primary"
                                >
                                  <Icon
                                    theme="outlined"
                                    type="minus-circle"
                                  />
                                </Button>,
                                "icon": <Icon
                                  theme="filled"
                                  type="exclamation-circle"
                                />,
                                "okText": "Delete",
                                "okType": "primary",
                                "onConfirm": [Function],
                                "placement": "topLeft",
                                "prefixCls": "ant-popover",
                                "title": "Are you sure you want to delete OMS Manual?",
                                "transitionName": "zoom-big",
                                "trigger": "click",
                              },
                              "ref": null,
                              "rendered": Object {
                                "instance": null,
                                "key": undefined,
                                "nodeType": "class",
                                "props": Object {
                                  "block": false,
                                  "children": <Icon
                                    theme="outlined"
                                    type="minus-circle"
                                  />,
                                  "className": "full-mobile",
                                  "ghost": true,
                                  "loading": false,
                                  "prefixCls": "ant-btn",
                                  "type": "primary",
                                },
                                "ref": null,
                                "rendered": Object {
                                  "instance": null,
                                  "key": undefined,
                                  "nodeType": "function",
                                  "props": Object {
                                    "theme": "outlined",
                                    "type": "minus-circle",
                                  },
                                  "ref": null,
                                  "rendered": null,
                                  "type": [Function],
                                },
                                "type": [Function],
                              },
                              "type": [Function],
                            },
                          ],
                          "type": "div",
                        },
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "type": "horizontal",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": <Row
                  align="top"
                  gutter={16}
                  justify="center"
                >
                  <Col
                    align="left"
                    span={8}
                  >
                    <Connect(AuthorizationWrapper)
                      isMajorMine={undefined}
                      permission="role_create"
                    >
                      <Button
                        block={false}
                        ghost={true}
                        loading={false}
                        onClick={[Function]}
                        prefixCls="ant-btn"
                        type="secondary"
                      >
                        + Add TSF Report
                      </Button>
                    </Connect(AuthorizationWrapper)>
                  </Col>
                  <Col
                    span={12}
                  />
                  <Col
                    align="right"
                    span={4}
                  />
                </Row>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "align": "top",
                  "children": Array [
                    <Col
                      align="left"
                      span={8}
                    >
                      <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_create"
                      >
                        <Button
                          block={false}
                          ghost={true}
                          loading={false}
                          onClick={[Function]}
                          prefixCls="ant-btn"
                          type="secondary"
                        >
                          + Add TSF Report
                        </Button>
                      </Connect(AuthorizationWrapper)>
                    </Col>,
                    <Col
                      span={12}
                    />,
                    <Col
                      align="right"
                      span={4}
                    />,
                  ],
                  "gutter": 16,
                  "justify": "center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "left",
                      "children": <Connect(AuthorizationWrapper)
                        isMajorMine={undefined}
                        permission="role_create"
                      >
                        <Button
                          block={false}
                          ghost={true}
                          loading={false}
                          onClick={[Function]}
                          prefixCls="ant-btn"
                          type="secondary"
                        >
                          + Add TSF Report
                        </Button>
                      </Connect(AuthorizationWrapper)>,
                      "span": 8,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <Button
                          block={false}
                          ghost={true}
                          loading={false}
                          onClick={[Function]}
                          prefixCls="ant-btn"
                          type="secondary"
                        >
                          + Add TSF Report
                        </Button>,
                        "isMajorMine": undefined,
                        "permission": "role_create",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "block": false,
                          "children": "+ Add TSF Report",
                          "ghost": true,
                          "loading": false,
                          "onClick": [Function],
                          "prefixCls": "ant-btn",
                          "type": "secondary",
                        },
                        "ref": null,
                        "rendered": "+ Add TSF Report",
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "span": 12,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "align": "right",
                      "span": 4,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
