from locust import HttpLocust, TaskSet, seq_task

# from ...constants import BEARER_TOKEN

class UserBehavior(TaskSet):
    BEARER_TOKEN = "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyT1BJR0VrQ2JBTzFHZHZHcEE1dC1KTTRpamEwWmlFYzZLaXZzYlJSM3dnIn0.eyJqdGkiOiIwODkyNTQxOS1jMTdjLTRjM2ItOWNiZS03Y2JhYTRiN2Y5NzMiLCJleHAiOjE1NDgzNDI3NjksIm5iZiI6MCwiaWF0IjoxNTQ4MjYzMTQ4LCJpc3MiOiJodHRwczovL3Nzby10ZXN0LnBhdGhmaW5kZXIuZ292LmJjLmNhL2F1dGgvcmVhbG1zL21kcyIsImF1ZCI6Im1pbmVzLWFwcGxpY2F0aW9uLWxvY2FsIiwic3ViIjoiZmM1NGE0NjgtNjFhMS00OWNhLWFmNjUtYjk4YTg5NzdmNWE5IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWluZXMtYXBwbGljYXRpb24tbG9jYWwiLCJub25jZSI6ImMyMmE5Yzc5LWZmMjctNDFmNy04OTQ3LTY3ZTJlNTViNGM4MiIsImF1dGhfdGltZSI6MTU0ODI2MzE0NCwic2Vzc2lvbl9zdGF0ZSI6IjI0NjUzZGE3LTkxNWMtNGY1NC04OWRmLTRlYjQ5ZDUzOGQxNyIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cDovL2xvY2FsaG9zdDozMDAwIiwiaHR0cDovL2xvY2FsaG9zdDozMDIwIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJtZHMtbWluZS12aWV3IiwibWRzLW1pbmUtY3JlYXRlIiwiaWRpciIsInVtYV9hdXRob3JpemF0aW9uIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwicHJlZmVycmVkX3VzZXJuYW1lIjoiYmRkLXRlc3QtY3JlYXRlIn0.hoU4BMGnqH4_gkX9EuVrU-N_OpnbrI7CzvcO0C0P9SCq3nD2Oof9XeT1bBJRVncxpr_sHJtHOf0hadPYNBrWvUfFqULN61vjO51S9xL6QDa7hhK5vJbGn8W1Iiqz_AhOm9Ocb6Ybxa61kSr-uGocdPuxbzAP4plMe1XjyQnQz6geFCIhj8t3kctIdOd-LmzO0YyoNjQ-K8lHu2eCNbpWf7p9Zi5L0ocL6BS2ve-rHznKWDM3NucSDI7lFOstwxU29Xy3mkpNjq0PqksRjj41aPmCcaSfeN4MUiHpB6HiaJPBaKRZre-X3hFvD9j68dWal4GkzC-NMaqbsuwCK_YhcQ"
    def on_start(self):
        """ on_start is called when a Locust start before any task is scheduled """
        print("Started")

    def on_stop(self):
        """ on_stop is called when the TaskSet is stopping """
        print("Stopped")

    @seq_task(1)
    def index(self):
        BEARER_TOKEN = "Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIyT1BJR0VrQ2JBTzFHZHZHcEE1dC1KTTRpamEwWmlFYzZLaXZzYlJSM3dnIn0.eyJqdGkiOiIwNTNkZDlmOS00OTMyLTQ2MTMtOTQ4MS0wMGI4YmVjZjUyNWIiLCJleHAiOjE1NDg0NTI0MjAsIm5iZiI6MCwiaWF0IjoxNTQ4MzcwNzc4LCJpc3MiOiJodHRwczovL3Nzby10ZXN0LnBhdGhmaW5kZXIuZ292LmJjLmNhL2F1dGgvcmVhbG1zL21kcyIsImF1ZCI6Im1pbmVzLWFwcGxpY2F0aW9uLWxvY2FsIiwic3ViIjoiMzk2MjJjZTUtYjIyNy00N2M3LWFiOTgtYzllNTEzZmJiNzU0IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoibWluZXMtYXBwbGljYXRpb24tbG9jYWwiLCJub25jZSI6IjBiN2Q2OWFmLTZlMDctNGVhNC04MmJhLTc1OTJhYzcwODhlZSIsImF1dGhfdGltZSI6MTU0ODM2OTYyMCwic2Vzc2lvbl9zdGF0ZSI6IjhmMzdlMmM4LWU3NzctNDAwNi05YzZmLWFlN2M2ZjA5YmZiMyIsImFjciI6IjAiLCJhbGxvd2VkLW9yaWdpbnMiOlsiaHR0cDovL2xvY2FsaG9zdDozMDAwIiwiaHR0cDovL2xvY2FsaG9zdDozMDIwIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJtZHMtbWluZS12aWV3IiwibWRzLW1pbmUtY3JlYXRlIiwiaWRpciIsIm9mZmxpbmVfYWNjZXNzIiwiYWRtaW4iLCJ1bWFfYXV0aG9yaXphdGlvbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7InJlYWxtLW1hbmFnZW1lbnQiOnsicm9sZXMiOlsidmlldy1pZGVudGl0eS1wcm92aWRlcnMiLCJ2aWV3LXJlYWxtIiwibWFuYWdlLWlkZW50aXR5LXByb3ZpZGVycyIsImltcGVyc29uYXRpb24iLCJyZWFsbS1hZG1pbiIsImNyZWF0ZS1jbGllbnQiLCJtYW5hZ2UtdXNlcnMiLCJxdWVyeS1yZWFsbXMiLCJ2aWV3LWF1dGhvcml6YXRpb24iLCJxdWVyeS1jbGllbnRzIiwicXVlcnktdXNlcnMiLCJtYW5hZ2UtZXZlbnRzIiwibWFuYWdlLXJlYWxtIiwidmlldy1ldmVudHMiLCJ2aWV3LXVzZXJzIiwidmlldy1jbGllbnRzIiwibWFuYWdlLWF1dGhvcml6YXRpb24iLCJtYW5hZ2UtY2xpZW50cyIsInF1ZXJ5LWdyb3VwcyJdfSwiYWNjb3VudCI6eyJyb2xlcyI6WyJtYW5hZ2UtYWNjb3VudCIsIm1hbmFnZS1hY2NvdW50LWxpbmtzIiwidmlldy1wcm9maWxlIl19fSwibmFtZSI6IlNoYXJtYW4sIEpvbmF0aGFuIEVNUFI6RVgiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJqc2hhcm1hbiIsImdpdmVuX25hbWUiOiJTaGFybWFuLCBKb25hdGhhbiBFTVBSOkVYIiwiZW1haWwiOiJqb25hdGhhbi5zaGFybWFuQGdvdi5iYy5jYSJ9.EhdlyuQxOv1vfZ5qx-8KAd5yPxN6GEcaJb7P31qKrmwea5TlSg1FCUlqkh-tSp3R_AS53IbXBXFGRD1GWwzLdjvO9HGB5RVXWgN-ZdFLpJLev997rr8gJLFpJh8-vf_CMthVX0GdoHCEM3UsVHLGUKmFelb8sgp7t07Ee1ErqALJIuCjBV6vX8iv3lYTur1OC2k8C-yp2CvKxWGk25jiDddxi6nuc36mXd1qtZvul863mgSIm7bakCwsaAF31rgul7Ke4R6Se7bLDHbw3ccZ-fzG5C4yoxj2XDWQBuep3b_cKXlR-c5QN00Rrl5mR5JwO07T0FFb46_kQ6HmHbN47Q"
        # print(BEARER_TOKEN)
        self.client.get("/",headers={"Authorization": BEARER_TOKEN})
    #
    # @seq_task(2)
    # def register(self):
    #     self.client.get("/register")
    #
    # @seq_task(3)
    # def login(self):
    #     self.client.get("/login")
    #
    # @seq_task(4)
    # def terms_of_use(self):
    #     self.client.get("/en/terms-of-use")


class WebsiteUser(HttpLocust):
    task_set = UserBehavior
    min_wait = 5000
    max_wait = 9000