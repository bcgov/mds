name: CORE WEB - Promote PROD

on:
  workflow_dispatch:

env:
  ORIG_TAG: test
  PROMOTE_TAG: prod

jobs:
  promote-image-to-prod:
    name: promote-core-web-to-prod
    runs-on: ubuntu-20.04
    steps:
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"

      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}

      - name: Promote core-api from test to prod
        run: |
          oc -n ${{secrets.NS_TOOLS}} tag \
          ${{ secrets.NS_TOOLS }}/frontend:${{ env.ORIG_TAG }} \
          ${{ secrets.NS_TOOLS }}/frontend:${{ env.PROMOTE_TAG }}

  trigger-gitops:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: promote-image-to-prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Git Ops Push
        run: ./gitops/commit.sh core-web test prod ${{ github.actor }} ${{ secrets.GH_TOKEN }}
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"
      - name: Setup ArgoCD CLI
        if: ${{ env.NEEDS_ROLLOUT=='true' }}
        uses: imajeetyadav/argocd-cli@v1
        with:
          version: v2.7.8
      - name: oc login
        run: oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: Notification
        run: ./gitops/watch-deployment.sh core-web prod ${{ github.sha }} ${{ secrets.DISCORD_DEPLOYMENT_WEBHOOK }} ${{ vars.ARGOCD_SERVER }} ${{ secrets.ARGOCD_JWT }}

  run-if-failed:
    runs-on: ubuntu-20.04
    needs: [trigger-gitops]
    if: always() && (needs.trigger-gitops.result == 'failure')
    steps:
      - name: Notification
        run: ./gitops/watch-deployment.sh core-web prod ${{ github.sha }} ${{ secrets.DISCORD_DEPLOYMENT_WEBHOOK }} 1
