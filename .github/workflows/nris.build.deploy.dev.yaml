name: NRIS - Build & Deploy To DEV

on:
  push:
    branches:
      - develop
    paths:
      - .github/workflows/nris.build.deploy.dev.yaml
      - services/nris-api/backend/**

env:
  INITIAL_TAG: latest
  TAG: dev
  NAME: nris
  CONTEXT: services/nris-api/backend/

jobs:
  build-nris:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login
        run: |
          docker login -u ${{ secrets.CLUSTER_REGISTRY_USER }} -p ${{ secrets.BUILD_TOKEN }} ${{ secrets.CLUSTER_REGISTRY }}
      - name: Build n Tag
        run: |
          docker build -t ${{ env.NAME }}:${{ env.INITIAL_TAG }} ${{ env.CONTEXT }} -f ${{ env.CONTEXT }}Dockerfile.ci
          docker tag ${{ env.NAME }}:${{ env.INITIAL_TAG }} ${{ secrets.CLUSTER_REGISTRY }}/${{ secrets.NS_TOOLS }}/${{ env.NAME }}:${{ env.INITIAL_TAG }}
          docker tag ${{ env.NAME }}:${{ env.INITIAL_TAG }} ${{ secrets.CLUSTER_REGISTRY }}/${{ secrets.NS_TOOLS }}/${{ env.NAME }}:${{ env.TAG }}
      - name: Push
        run: |
          docker push --all-tags ${{ secrets.CLUSTER_REGISTRY }}/${{ secrets.NS_TOOLS }}/${{ env.NAME }}

  trigger-gitops:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    needs: [build-nris]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Git Ops Push
        run: ./gitops/commit.sh nris dev dev ${{ github.actor }} ${{ secrets.GH_TOKEN }}
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"
      - name: Setup ArgoCD CLI
        uses: imajeetyadav/argocd-cli@v1
        with:
          version: v2.7.9 # optional
      - name: oc login
        run: oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: Notification
        run: ./gitops/watch-deployment.sh nris dev ${{ github.sha }} ${{ secrets.DISCORD_DEPLOYMENT_WEBHOOK }} ${{ secrets.ARGOCD_SERVER }} ${{ secrets.ARGO_CD_CLI_JWT }}

  run-if-failed:
    runs-on: ubuntu-20.04
    needs: [trigger-gitops]
    if: always() && (needs.trigger-gitops.result == 'failure')
    steps:
      - name: Notification
        run: ./gitops/watch-deployment.sh nris dev ${{ github.sha }} ${{ secrets.DISCORD_DEPLOYMENT_WEBHOOK }} 1
