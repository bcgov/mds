name: Build

on:
  push:
    branches:
      - develop
    paths:
      - services/**
      - migrations/**
      - openshift4/templates/**.bc.yaml
      - openshift4/docker-images/**
      - .github/workflows/build.yaml

env:
  INITIAL_TAG: latest
  TAG: dev
  SOURCE_REPOSITORY_URL: https://github.com/bcgov/mds.git
  SOURCE_REPOSITORY_REF: develop

jobs:
  template:
    name: template
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: nginx
          - name: postgresql
          - name: frontend
          - name: docgen
          - name: dbbackup
          - name: metabase
          - name: metabase-postgres
          - name: minespace
          - name: fider
          - name: schemaspy
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"
      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: Template build config
        run: |
          oc -n ${{secrets.NS_TOOLS}} process -f openshift4/templates/${{ matrix.name }}.bc.yaml --ignore-unknown-parameters=true \
          -p SOURCE_REPOSITORY_URL=${{env.SOURCE_REPOSITORY_URL}} \
          -p SOURCE_REPOSITORY_REF=${{env.SOURCE_REPOSITORY_REF}} \
          -p TAG=${{env.INITIAL_TAG}} \
          | oc -n ${{secrets.NS_TOOLS}} apply -f -

  build-bases:
    name: build-bases
    needs: template
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: frontend
          - name: minespace
    steps:
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"
      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: build
        run: |
          oc start-build ${{ matrix.name }}-base -n ${{secrets.NS_TOOLS}} --wait

  build:
    name: build
    needs: build-bases
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: nginx
          - name: frontend
          - name: dbbackup
          - name: metabase
          - name: minespace
          - name: schemaspy
    steps:
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"
      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: build
        run: |
          oc start-build ${{ matrix.name }} -n ${{secrets.NS_TOOLS}} --wait

  tag:
    name: tag
    needs: build
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - name: nginx
          - name: frontend
          - name: docgen
          - name: dbbackup
          - name: metabase
          - name: metabase-postgres
          - name: minespace
          - name: schemaspy
    steps:
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"
      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: add dev tag
        run: |
          oc -n ${{secrets.NS_TOOLS}} tag \
          ${{ secrets.NS_TOOLS }}/${{ matrix.name }}:${{ env.INITIAL_TAG }} \
          ${{ secrets.NS_TOOLS }}/${{ matrix.name }}:${{ env.TAG }}

  grace-period:
    name: grace-period
    runs-on: ubuntu-20.04
    needs:
      - tag
    steps:
      - name: Waiting grace period
        run: |
          echo "Grace period..."
          sleep 10

  watch-rollout:
    name: watch-rollout
    runs-on: ubuntu-20.04
    needs: grace-period
    timeout-minutes: 25
    strategy:
      matrix:
        include:
          - name: nginx
          - name: frontend
          - name: docgen
          - name: dbbackup
          - name: metabase
          - name: metabase-postgres
          - name: docman
          - name: nris
          - name: minespace
    steps:
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"
      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}
      - name: Watch rollout
        run: |
          until [ "$(oc -n ${{ secrets.NS_DEV }} get dc ${{ matrix.name }} -o=jsonpath="{$.status.conditions[*].message}" --no-headers=false | grep -i 'successfully rolled out')" != "" ]; do
              echo "Waiting on: $(oc -n ${{ secrets.NS_DEV }} get dc ${{ matrix.name }} -o name --no-headers=false) ..."
              sleep 10
          done
          echo "Deployment complete"
