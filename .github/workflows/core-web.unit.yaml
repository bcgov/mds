name: CORE WEB - Unit Tests

on:
  workflow_dispatch:
  pull_request:
    paths:
      - services/common/**
      - services/core-web/**

jobs:
  tests-unit-frontend:
    name: tests-unit-frontend
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        name: checkout
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.7"

      - name: oc login
        run: |
          oc login --token=${{ secrets.BUILD_TOKEN }} --server=${{ secrets.CLUSTER_API }}

      - name: Set up env variables
        run: |
          INPUT=yes LOAD_EXTERNAL=yes make env

      - name: Run keycloak
        run: |
          make keycloak
      - name: Run backend
        run: |
          make be-minimal

      - uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Upgrade yarn
        run: npm install -g yarn

      - name: Set Fontawesome token
        run: |
          yarn config set 'npmScopes["fortawesome"].npmAuthIdent' "${{ secrets.ARTIFACTORY_TOKEN }}"
          yarn config set 'npmScopes["fortawesome"].npmAlwaysAuth' true
          yarn config set 'npmScopes["fortawesome"].npmRegistryServer' "https://artifacts.developer.gov.bc.ca/artifactory/api/npm/m4c2-mds/"

      - name: Install Dependencies
        run: yarn install

      # - name: Run frontend tests
      #   run: cd services/core-web/ && yarn && yarn test
      # - name: Run Migrations
      #   env:
      #     DOCKER_BUILDKIT: 1
      #   run: docker-compose -f docker-compose.ci.yaml -f docker-compose.cypress.yaml up --force-recreate --exit-code-from flyway flyway

      # - name: Create containers for integration tests
      #   env:
      #     DOCKER_BUILDKIT: 1
      #   run: docker-compose -f docker-compose.ci.yaml -f docker-compose.cypress.yaml up -d backend keycloak
      - name: build-core-web
        run: |
          NODE_OPTIONS=--max-old-space-size=5024 yarn workspace @mds/core-web build

      - name: Seed database
        run: |
          make seeddb

      - name: start-core-web
        run: yarn workspace @mds/core-web run http-server-spa build /index.html 3000 &

      - name: Run cypress tests
        run: yarn workspace @mds/core-web cypress run
        env:
          CYPRESS_TEST_USER: core-admin
          CYPRESS_TEST_PASSWORD: cypress
          CYPRESS_CORE_WEB_TEST_URL: http://localhost:3000
          CYPRESS_BACKEND: mds-python-backend
          CYPRESS_API_URL: http://localhost:5000
          CYPRESS_KEYCLOAK_URL: http://localhost:8080/auth
          CYPRESS_ENVIRONMENT: local
          CYPRESS_DOC_MAN_URL: http://localhost:5001
          CYPRESS_MATOMO_URL: https://matomo-4c2ba9-test.apps.silver.devops.gov.bc.ca/
          CYPRESS_KEYCLOAK_CLIENT_ID: mines-digital-services-mds-public-client-4414
          CYPRESS_KEYCLOAK_RESOURCE: mines-digital-services-mds-public-client-4414
          CYPRESS_KEYCLOAK_IDP_HINT: idir
          CYPRESS_FILE_SYSTEM_PROVIDER_URL: https://mds-dev.apps.silver.devops.gov.bc.ca/file-api/AmazonS3Provider/
          CYPRESS_FLAGSMITH_URL: https://mds-flags-dev.apps.silver.devops.gov.bc.ca/api/v1/
          CYPRESS_FLAGSMITH_KEY: 4Eu9eEMDmWVEHKDaKoeWY7

      - name: Upload cypress video
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-recording
          path: services/core-web/cypress/videos
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: "./logs"
      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs.tgz ./logs
      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: logs.tgz
          path: ./logs.tgz
  run-sonar-scan:
    name: Run SonarCloud Scan
    if: success()
    uses: ./.github/workflows/sonarcloud-scan.yaml
    with:
      project-dir: services/core-web
    secrets: inherit
