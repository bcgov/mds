name: Update AWS test infra

on:
  push:
  workflow_run:
    workflows:
      - Update AWS dev infra
    types:
      - completed
  workflow_dispatch:
  # manual

env:
  TF_VERSION: 0.14.7
  TG_VERSION: 0.28.7
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: test

jobs:
  infra-test-plan:
    name: infra-test-plan
    runs-on: ubuntu-20.04
    timeout-minutes: 20

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Plan
        id: tg_plan
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          TF_CLI_ARGS: -no-color
          AWS_RDS_ADMIN_USER: ${{ secrets.AWS_RDS_ADMIN_USER }}
          AWS_RDS_ADMIN_PASSWORD: ${{ secrets.AWS_RDS_ADMIN_PASSWORD }}
        run: terragrunt run-all plan --terragrunt-non-interactive | tee /tmp/tg_plan

      - name: Get Terraform Plan Output
        id: plan
        uses: juliangruber/read-file-action@v1
        with:
          path: /tmp/tg_plan

      - name: Terragrunt Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

  ## waits for plan and runs apply
  infra-test-apply:
    name: infra-test-apply
    runs-on: ubuntu-20.04
    needs: infra-test-plan
    timeout-minutes: 20

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          AWS_RDS_ADMIN_USER: ${{ secrets.AWS_RDS_ADMIN_USER }}
          AWS_RDS_ADMIN_PASSWORD: ${{ secrets.AWS_RDS_ADMIN_PASSWORD }}
        run: terragrunt apply-all --terragrunt-non-interactive
