name: Coverage Test Reports

on:
  workflow_dispatch:

env:
  CC_TEST_REPORTER_ID: 50e476c4bbdd07bb0a379f1dfb6bf70e2d9102f25ebd429b3e38efd301d13eeb

jobs:
  tests-coverage-backend:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Check if push event
        if: github.event_name == 'push'
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
      - name: Check if pr sync event
        if: github.event_name == 'pull_request'
        run: |
          echo "GIT_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      # Trimming the ref full name in order to publish correct report (paambaati)
      # CodeClimate only publishes the value if the name matches the default branch (develop)
      - name: Set refs/heads/develop to develop
        if: env.GIT_BRANCH == 'refs/heads/develop'
        run: |
          echo "GIT_BRANCH=develop" >> $GITHUB_ENV

      - name: Setup reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          mkdir coverage

      - name: Spin up containers
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker compose -f docker-compose.ci.yaml up -d backend

      - name: Generate coverage report
        run: |
          docker compose -f docker-compose.ci.yaml exec -T backend coverage run --source=app --branch -m pytest -rx
          docker compose -f docker-compose.ci.yaml exec -T backend coverage xml

      # Strange relative paths were done to work with paths created in docker context but coverage format is not in docker context
      - name: Format backend report
        run: |
          cd services/core-api/
          ./../../cc-test-reporter format-coverage -t coverage.py --add-prefix services/core-api/ -o ../../coverage/backend-codeclimate.json coverage.xml

      - name: Create backend coverage file artifact
        uses: actions/upload-artifact@v2
        with:
          name: backend-codeclimate.json
          path: ./coverage/backend-codeclimate.json
          retention-days: 1

  tests-coverage-frontend:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Check if push event
        if: github.event_name == 'push'
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
      - name: Check if pr sync event
        if: github.event_name == 'pull_request'
        run: |
          echo "GIT_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      # Trimming the ref full name in order to publish correct report (paambaati)
      # CodeClimate only publishes the value if the name matches the default branch (develop)
      - name: Set refs/heads/develop to develop
        if: env.GIT_BRANCH == 'refs/heads/develop'
        run: |
          echo "GIT_BRANCH=develop" >> $GITHUB_ENV

      - name: Setup reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          mkdir coverage

      - name: Spin up containers
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker compose -f docker-compose.ci.yaml up -d frontend

      # During this, rewrite frontend report from docker context path to runner paths
      - name: Generate frontend coverage reports
        run: |
          docker compose -f docker-compose.ci.yaml exec -T frontend npm run test:coverage
          docker cp mds_frontend:/app/coverage/clover.xml services/core-web/clover.xml
          sed -i "s|path=\"/app|path=\"$GITHUB_WORKSPACE/services/core-web|g" services/core-web/clover.xml

      - name: Format frontend reports
        run: |
          cd services/core-web/
          ./../../cc-test-reporter format-coverage -t clover --add-prefix services/core-web/ -o ../../coverage/frontend-codeclimate.json clover.xml

      - name: Create frontend coverage file artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend-codeclimate.json
          path: ./coverage/frontend-codeclimate.json
          retention-days: 1

  tests-coverage-minespace:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Check if push event
        if: github.event_name == 'push'
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
      - name: Check if pr sync event
        if: github.event_name == 'pull_request'
        run: |
          echo "GIT_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      # Trimming the ref full name in order to publish correct report (paambaati)
      # CodeClimate only publishes the value if the name matches the default branch (develop)
      - name: Set refs/heads/develop to develop
        if: env.GIT_BRANCH == 'refs/heads/develop'
        run: |
          echo "GIT_BRANCH=develop" >> $GITHUB_ENV

      - name: Setup reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          mkdir coverage

      #### Adjust container topology as needed for future coverage reports ####
      - name: Spin up containers
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker compose -f docker-compose.ci.yaml up -d minespace

      # During this, rewrite  minespace report from docker context path to runner paths
      - name: Generate MineSpace coverage reports
        run: |
          docker compose -f docker-compose.ci.yaml exec -T minespace npm test -- -u
          docker compose -f docker-compose.ci.yaml exec -T minespace npm run test:coverage
          docker cp mds_minespace:/app/coverage/clover.xml services/minespace-web/clover.xml
          sed -i "s|path=\"/app|path=\"$GITHUB_WORKSPACE/services/minespace-web|g" services/minespace-web/clover.xml

      # Strange relative paths were done to work with paths created in docker context but coverage format is not in docker context
      - name: Format frontend minespace reports
        run: |
          cd services/minespace-web/
          ./../../cc-test-reporter format-coverage -t clover --add-prefix services/minespace-web/ -o ../../coverage/minespace-codeclimate.json clover.xml

      - name: Create minespace coverage file artifact
        uses: actions/upload-artifact@v2
        with:
          name: minespace-codeclimate.json
          path: ./coverage/minespace-codeclimate.json
          retention-days: 1

  tests-coverage-sum-submit:
    needs:
      - tests-coverage-backend
      - tests-coverage-frontend
      - tests-coverage-minespace
    runs-on: ubuntu-20.04
    steps:
      - name: Check if push event
        if: github.event_name == 'push'
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
      - name: Check if pr sync event
        if: github.event_name == 'pull_request'
        run: |
          echo "GIT_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV

      # Trimming the ref full name in order to publish correct report (paambaati)
      # CodeClimate only publishes the value if the name matches the default branch (develop)
      - name: Set refs/heads/develop to develop
        if: env.GIT_BRANCH == 'refs/heads/develop'
        run: |
          echo "GIT_BRANCH=develop" >> $GITHUB_ENV

      - name: Setup reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          mkdir coverage

      # Fetch artifacts from other jobs
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-codeclimate.json
          path: ./coverage
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-codeclimate.json
          path: ./coverage
      - name: Download minespace artifact
        uses: actions/download-artifact@v3
        with:
          name: minespace-codeclimate.json
          path: ./coverage

      #### Group collection ####
      - name: Collect coverage reports
        run: |
          ./cc-test-reporter sum-coverage coverage/*-codeclimate.json -o coverage/total-codeclimate.json

      #### Submit total coverage ####
      - name: Submit coverage reports
        run: |
          ./cc-test-reporter upload-coverage -d -i coverage/total-codeclimate.json
